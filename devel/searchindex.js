Search.setIndex({"docnames": ["asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.config", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.kernel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.s", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.square", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.alphas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.betas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.name", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.nobs", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.params", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.tstats", "asset-pricing/examples/examples", "asset-pricing/examples/formulas", "asset-pricing/index", "asset-pricing/introduction", "asset-pricing/mathematical-formula", "asset-pricing/reference", "changes", "contributing", "index", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.dependent", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.exog", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.fit", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.has_constant", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.instruments", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.resids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.weights", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.wresids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.conf_int", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_config", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_type", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.debiased", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_model", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_resid", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.has_constant", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.method", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.model_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.nobs", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.params", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.pvalues", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.s2", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.std_errors", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.summary", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.total_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.tstats", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wald_test", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wresids", "iv/absorbing/linearmodels.iv.absorbing.Interaction", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cat", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cont", "iv/absorbing/linearmodels.iv.absorbing.Interaction.drop", "iv/absorbing/linearmodels.iv.absorbing.Interaction.from_frame", "iv/absorbing/linearmodels.iv.absorbing.Interaction.hash", "iv/absorbing/linearmodels.iv.absorbing.Interaction.isnull", "iv/absorbing/linearmodels.iv.absorbing.Interaction.nobs", "iv/absorbing/linearmodels.iv.absorbing.Interaction.sparse", "iv/examples/absorbing-regression", "iv/examples/advanced-examples", "iv/examples/basic-examples", "iv/examples/using-formulas", "iv/index", "iv/introduction", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.config", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.cov", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.debiased", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s2", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.config", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.cov", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.debiased", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s2", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.config", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.cov", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.debiased", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s2", "iv/iv/linearmodels.iv.covariance.KernelCovariance", "iv/iv/linearmodels.iv.covariance.KernelCovariance.config", "iv/iv/linearmodels.iv.covariance.KernelCovariance.cov", "iv/iv/linearmodels.iv.covariance.KernelCovariance.debiased", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s2", "iv/iv/linearmodels.iv.covariance.kernel_weight_bartlett", "iv/iv/linearmodels.iv.covariance.kernel_weight_parzen", "iv/iv/linearmodels.iv.covariance.kernel_weight_quadratic_spectral", "iv/iv/linearmodels.iv.data.IVData", "iv/iv/linearmodels.iv.data.IVData.cols", "iv/iv/linearmodels.iv.data.IVData.drop", "iv/iv/linearmodels.iv.data.IVData.isnull", "iv/iv/linearmodels.iv.data.IVData.labels", "iv/iv/linearmodels.iv.data.IVData.ndarray", "iv/iv/linearmodels.iv.data.IVData.ndim", "iv/iv/linearmodels.iv.data.IVData.pandas", "iv/iv/linearmodels.iv.data.IVData.rows", "iv/iv/linearmodels.iv.data.IVData.shape", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.config", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.cov", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.debiased", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s2", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.bandwidth", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.model.IV2SLS", "iv/iv/linearmodels.iv.model.IV2SLS.estimate_parameters", "iv/iv/linearmodels.iv.model.IV2SLS.fit", "iv/iv/linearmodels.iv.model.IV2SLS.formula", "iv/iv/linearmodels.iv.model.IV2SLS.from_formula", "iv/iv/linearmodels.iv.model.IV2SLS.has_constant", "iv/iv/linearmodels.iv.model.IV2SLS.isnull", "iv/iv/linearmodels.iv.model.IV2SLS.notnull", "iv/iv/linearmodels.iv.model.IV2SLS.predict", "iv/iv/linearmodels.iv.model.IV2SLS.resids", "iv/iv/linearmodels.iv.model.IV2SLS.wresids", "iv/iv/linearmodels.iv.model.IVGMM", "iv/iv/linearmodels.iv.model.IVGMM.estimate_parameters", "iv/iv/linearmodels.iv.model.IVGMM.fit", "iv/iv/linearmodels.iv.model.IVGMM.formula", "iv/iv/linearmodels.iv.model.IVGMM.from_formula", "iv/iv/linearmodels.iv.model.IVGMM.has_constant", "iv/iv/linearmodels.iv.model.IVGMM.isnull", "iv/iv/linearmodels.iv.model.IVGMM.notnull", "iv/iv/linearmodels.iv.model.IVGMM.predict", "iv/iv/linearmodels.iv.model.IVGMM.resids", "iv/iv/linearmodels.iv.model.IVGMM.wresids", "iv/iv/linearmodels.iv.model.IVGMMCUE", "iv/iv/linearmodels.iv.model.IVGMMCUE.estimate_parameters", "iv/iv/linearmodels.iv.model.IVGMMCUE.fit", "iv/iv/linearmodels.iv.model.IVGMMCUE.formula", "iv/iv/linearmodels.iv.model.IVGMMCUE.from_formula", "iv/iv/linearmodels.iv.model.IVGMMCUE.has_constant", "iv/iv/linearmodels.iv.model.IVGMMCUE.isnull", "iv/iv/linearmodels.iv.model.IVGMMCUE.j", "iv/iv/linearmodels.iv.model.IVGMMCUE.notnull", "iv/iv/linearmodels.iv.model.IVGMMCUE.predict", "iv/iv/linearmodels.iv.model.IVGMMCUE.resids", "iv/iv/linearmodels.iv.model.IVGMMCUE.wresids", "iv/iv/linearmodels.iv.model.IVLIML", "iv/iv/linearmodels.iv.model.IVLIML.estimate_parameters", "iv/iv/linearmodels.iv.model.IVLIML.fit", "iv/iv/linearmodels.iv.model.IVLIML.formula", "iv/iv/linearmodels.iv.model.IVLIML.from_formula", "iv/iv/linearmodels.iv.model.IVLIML.has_constant", "iv/iv/linearmodels.iv.model.IVLIML.isnull", "iv/iv/linearmodels.iv.model.IVLIML.notnull", "iv/iv/linearmodels.iv.model.IVLIML.predict", "iv/iv/linearmodels.iv.model.IVLIML.resids", "iv/iv/linearmodels.iv.model.IVLIML.wresids", "iv/iv/linearmodels.iv.results.FirstStageResults", "iv/iv/linearmodels.iv.results.FirstStageResults.diagnostics", "iv/iv/linearmodels.iv.results.FirstStageResults.individual", "iv/iv/linearmodels.iv.results.FirstStageResults.summary", "iv/iv/linearmodels.iv.results.IVGMMResults", "iv/iv/linearmodels.iv.results.IVGMMResults.c_stat", "iv/iv/linearmodels.iv.results.IVGMMResults.conf_int", "iv/iv/linearmodels.iv.results.IVGMMResults.cov", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_config", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_estimator", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_type", "iv/iv/linearmodels.iv.results.IVGMMResults.debiased", "iv/iv/linearmodels.iv.results.IVGMMResults.df_model", "iv/iv/linearmodels.iv.results.IVGMMResults.df_resid", "iv/iv/linearmodels.iv.results.IVGMMResults.f_statistic", "iv/iv/linearmodels.iv.results.IVGMMResults.first_stage", "iv/iv/linearmodels.iv.results.IVGMMResults.fitted_values", "iv/iv/linearmodels.iv.results.IVGMMResults.has_constant", "iv/iv/linearmodels.iv.results.IVGMMResults.idiosyncratic", "iv/iv/linearmodels.iv.results.IVGMMResults.iterations", "iv/iv/linearmodels.iv.results.IVGMMResults.j_stat", "iv/iv/linearmodels.iv.results.IVGMMResults.kappa", "iv/iv/linearmodels.iv.results.IVGMMResults.method", "iv/iv/linearmodels.iv.results.IVGMMResults.model_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.nobs", "iv/iv/linearmodels.iv.results.IVGMMResults.params", "iv/iv/linearmodels.iv.results.IVGMMResults.predict", "iv/iv/linearmodels.iv.results.IVGMMResults.pvalues", "iv/iv/linearmodels.iv.results.IVGMMResults.resid_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.resids", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared_adj", "iv/iv/linearmodels.iv.results.IVGMMResults.s2", "iv/iv/linearmodels.iv.results.IVGMMResults.std_errors", "iv/iv/linearmodels.iv.results.IVGMMResults.summary", "iv/iv/linearmodels.iv.results.IVGMMResults.total_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.tstats", "iv/iv/linearmodels.iv.results.IVGMMResults.wald_test", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_config", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_matrix", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_type", "iv/iv/linearmodels.iv.results.IVGMMResults.wresids", "iv/iv/linearmodels.iv.results.IVModelComparison", "iv/iv/linearmodels.iv.results.IVModelComparison.cov_estimator", "iv/iv/linearmodels.iv.results.IVModelComparison.estimator_method", "iv/iv/linearmodels.iv.results.IVModelComparison.f_statistic", "iv/iv/linearmodels.iv.results.IVModelComparison.nobs", "iv/iv/linearmodels.iv.results.IVModelComparison.params", "iv/iv/linearmodels.iv.results.IVModelComparison.pvalues", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared_adj", "iv/iv/linearmodels.iv.results.IVModelComparison.std_errors", "iv/iv/linearmodels.iv.results.IVModelComparison.summary", "iv/iv/linearmodels.iv.results.IVModelComparison.tstats", "iv/iv/linearmodels.iv.results.IVResults", "iv/iv/linearmodels.iv.results.IVResults.anderson_rubin", "iv/iv/linearmodels.iv.results.IVResults.basmann", "iv/iv/linearmodels.iv.results.IVResults.basmann_f", "iv/iv/linearmodels.iv.results.IVResults.conf_int", "iv/iv/linearmodels.iv.results.IVResults.cov", "iv/iv/linearmodels.iv.results.IVResults.cov_config", "iv/iv/linearmodels.iv.results.IVResults.cov_estimator", "iv/iv/linearmodels.iv.results.IVResults.cov_type", "iv/iv/linearmodels.iv.results.IVResults.debiased", "iv/iv/linearmodels.iv.results.IVResults.df_model", "iv/iv/linearmodels.iv.results.IVResults.df_resid", "iv/iv/linearmodels.iv.results.IVResults.durbin", "iv/iv/linearmodels.iv.results.IVResults.f_statistic", "iv/iv/linearmodels.iv.results.IVResults.first_stage", "iv/iv/linearmodels.iv.results.IVResults.fitted_values", "iv/iv/linearmodels.iv.results.IVResults.has_constant", "iv/iv/linearmodels.iv.results.IVResults.idiosyncratic", "iv/iv/linearmodels.iv.results.IVResults.kappa", "iv/iv/linearmodels.iv.results.IVResults.method", "iv/iv/linearmodels.iv.results.IVResults.model_ss", "iv/iv/linearmodels.iv.results.IVResults.nobs", "iv/iv/linearmodels.iv.results.IVResults.params", "iv/iv/linearmodels.iv.results.IVResults.predict", "iv/iv/linearmodels.iv.results.IVResults.pvalues", "iv/iv/linearmodels.iv.results.IVResults.resid_ss", "iv/iv/linearmodels.iv.results.IVResults.resids", "iv/iv/linearmodels.iv.results.IVResults.rsquared", "iv/iv/linearmodels.iv.results.IVResults.rsquared_adj", "iv/iv/linearmodels.iv.results.IVResults.s2", "iv/iv/linearmodels.iv.results.IVResults.sargan", "iv/iv/linearmodels.iv.results.IVResults.std_errors", "iv/iv/linearmodels.iv.results.IVResults.summary", "iv/iv/linearmodels.iv.results.IVResults.total_ss", "iv/iv/linearmodels.iv.results.IVResults.tstats", "iv/iv/linearmodels.iv.results.IVResults.wald_test", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_overid", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_regression", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_score", "iv/iv/linearmodels.iv.results.IVResults.wresids", "iv/iv/linearmodels.iv.results.IVResults.wu_hausman", "iv/iv/linearmodels.iv.results.OLSResults", "iv/iv/linearmodels.iv.results.OLSResults.conf_int", "iv/iv/linearmodels.iv.results.OLSResults.cov", "iv/iv/linearmodels.iv.results.OLSResults.cov_config", "iv/iv/linearmodels.iv.results.OLSResults.cov_estimator", "iv/iv/linearmodels.iv.results.OLSResults.cov_type", "iv/iv/linearmodels.iv.results.OLSResults.debiased", "iv/iv/linearmodels.iv.results.OLSResults.df_model", "iv/iv/linearmodels.iv.results.OLSResults.df_resid", "iv/iv/linearmodels.iv.results.OLSResults.f_statistic", "iv/iv/linearmodels.iv.results.OLSResults.fitted_values", "iv/iv/linearmodels.iv.results.OLSResults.has_constant", "iv/iv/linearmodels.iv.results.OLSResults.idiosyncratic", "iv/iv/linearmodels.iv.results.OLSResults.kappa", "iv/iv/linearmodels.iv.results.OLSResults.method", "iv/iv/linearmodels.iv.results.OLSResults.model_ss", "iv/iv/linearmodels.iv.results.OLSResults.nobs", "iv/iv/linearmodels.iv.results.OLSResults.params", "iv/iv/linearmodels.iv.results.OLSResults.predict", "iv/iv/linearmodels.iv.results.OLSResults.pvalues", "iv/iv/linearmodels.iv.results.OLSResults.resid_ss", "iv/iv/linearmodels.iv.results.OLSResults.resids", "iv/iv/linearmodels.iv.results.OLSResults.rsquared", "iv/iv/linearmodels.iv.results.OLSResults.rsquared_adj", "iv/iv/linearmodels.iv.results.OLSResults.s2", "iv/iv/linearmodels.iv.results.OLSResults.std_errors", "iv/iv/linearmodels.iv.results.OLSResults.summary", "iv/iv/linearmodels.iv.results.OLSResults.total_ss", "iv/iv/linearmodels.iv.results.OLSResults.tstats", "iv/iv/linearmodels.iv.results.OLSResults.wald_test", "iv/iv/linearmodels.iv.results.OLSResults.wresids", "iv/iv/linearmodels.iv.results.compare", "iv/mathematical-formula", "iv/reference", "panel/examples/data-formats", "panel/examples/examples", "panel/examples/using-formulas", "panel/faq", "panel/index", "panel/introduction", "panel/mathematical-formula", "panel/pandas", "panel/panel/linearmodels.panel.covariance.ACCovariance", "panel/panel/linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.ACCovariance.cov", "panel/panel/linearmodels.panel.covariance.ACCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.ACCovariance.eps", "panel/panel/linearmodels.panel.covariance.ACCovariance.name", "panel/panel/linearmodels.panel.covariance.ACCovariance.s2", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.cov", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.eps", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.name", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.s2", "panel/panel/linearmodels.panel.covariance.DriscollKraay", "panel/panel/linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.DriscollKraay.cov", "panel/panel/linearmodels.panel.covariance.DriscollKraay.deferred_cov", "panel/panel/linearmodels.panel.covariance.DriscollKraay.eps", "panel/panel/linearmodels.panel.covariance.DriscollKraay.name", "panel/panel/linearmodels.panel.covariance.DriscollKraay.s2", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.all_params", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.cov", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.eps", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.name", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.s2", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.cov", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.eps", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.name", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.s2", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.cov", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.eps", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.name", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.s2", "panel/panel/linearmodels.panel.data.PanelData", "panel/panel/linearmodels.panel.data.PanelData.copy", "panel/panel/linearmodels.panel.data.PanelData.count", "panel/panel/linearmodels.panel.data.PanelData.dataframe", "panel/panel/linearmodels.panel.data.PanelData.demean", "panel/panel/linearmodels.panel.data.PanelData.drop", "panel/panel/linearmodels.panel.data.PanelData.dummies", "panel/panel/linearmodels.panel.data.PanelData.entities", "panel/panel/linearmodels.panel.data.PanelData.entity_ids", "panel/panel/linearmodels.panel.data.PanelData.first_difference", "panel/panel/linearmodels.panel.data.PanelData.general_demean", "panel/panel/linearmodels.panel.data.PanelData.index", "panel/panel/linearmodels.panel.data.PanelData.isnull", "panel/panel/linearmodels.panel.data.PanelData.mean", "panel/panel/linearmodels.panel.data.PanelData.ndim", "panel/panel/linearmodels.panel.data.PanelData.nentity", "panel/panel/linearmodels.panel.data.PanelData.nobs", "panel/panel/linearmodels.panel.data.PanelData.nvar", "panel/panel/linearmodels.panel.data.PanelData.panel", "panel/panel/linearmodels.panel.data.PanelData.shape", "panel/panel/linearmodels.panel.data.PanelData.time", "panel/panel/linearmodels.panel.data.PanelData.time_ids", "panel/panel/linearmodels.panel.data.PanelData.values2d", "panel/panel/linearmodels.panel.data.PanelData.values3d", "panel/panel/linearmodels.panel.data.PanelData.vars", "panel/panel/linearmodels.panel.model.BetweenOLS", "panel/panel/linearmodels.panel.model.BetweenOLS.fit", "panel/panel/linearmodels.panel.model.BetweenOLS.formula", "panel/panel/linearmodels.panel.model.BetweenOLS.from_formula", "panel/panel/linearmodels.panel.model.BetweenOLS.has_constant", "panel/panel/linearmodels.panel.model.BetweenOLS.not_null", "panel/panel/linearmodels.panel.model.BetweenOLS.predict", "panel/panel/linearmodels.panel.model.BetweenOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.FamaMacBeth", "panel/panel/linearmodels.panel.model.FamaMacBeth.fit", "panel/panel/linearmodels.panel.model.FamaMacBeth.formula", "panel/panel/linearmodels.panel.model.FamaMacBeth.from_formula", "panel/panel/linearmodels.panel.model.FamaMacBeth.has_constant", "panel/panel/linearmodels.panel.model.FamaMacBeth.not_null", "panel/panel/linearmodels.panel.model.FamaMacBeth.predict", "panel/panel/linearmodels.panel.model.FamaMacBeth.reformat_clusters", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.fit", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.formula", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.from_formula", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.has_constant", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.not_null", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.predict", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.PanelOLS", "panel/panel/linearmodels.panel.model.PanelOLS.entity_effects", "panel/panel/linearmodels.panel.model.PanelOLS.fit", "panel/panel/linearmodels.panel.model.PanelOLS.formula", "panel/panel/linearmodels.panel.model.PanelOLS.from_formula", "panel/panel/linearmodels.panel.model.PanelOLS.has_constant", "panel/panel/linearmodels.panel.model.PanelOLS.not_null", "panel/panel/linearmodels.panel.model.PanelOLS.other_effects", "panel/panel/linearmodels.panel.model.PanelOLS.predict", "panel/panel/linearmodels.panel.model.PanelOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.PanelOLS.time_effects", "panel/panel/linearmodels.panel.model.PooledOLS", "panel/panel/linearmodels.panel.model.PooledOLS.fit", "panel/panel/linearmodels.panel.model.PooledOLS.formula", "panel/panel/linearmodels.panel.model.PooledOLS.from_formula", "panel/panel/linearmodels.panel.model.PooledOLS.has_constant", "panel/panel/linearmodels.panel.model.PooledOLS.not_null", "panel/panel/linearmodels.panel.model.PooledOLS.predict", "panel/panel/linearmodels.panel.model.PooledOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.RandomEffects", "panel/panel/linearmodels.panel.model.RandomEffects.fit", "panel/panel/linearmodels.panel.model.RandomEffects.formula", "panel/panel/linearmodels.panel.model.RandomEffects.from_formula", "panel/panel/linearmodels.panel.model.RandomEffects.has_constant", "panel/panel/linearmodels.panel.model.RandomEffects.not_null", "panel/panel/linearmodels.panel.model.RandomEffects.predict", "panel/panel/linearmodels.panel.model.RandomEffects.reformat_clusters", "panel/panel/linearmodels.panel.results.FamaMacBethResults", "panel/panel/linearmodels.panel.results.FamaMacBethResults.all_params", "panel/panel/linearmodels.panel.results.FamaMacBethResults.conf_int", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_between", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_within", "panel/panel/linearmodels.panel.results.FamaMacBethResults.cov", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_model", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_resid", "panel/panel/linearmodels.panel.results.FamaMacBethResults.entity_info", "panel/panel/linearmodels.panel.results.FamaMacBethResults.estimated_effects", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.FamaMacBethResults.fitted_values", "panel/panel/linearmodels.panel.results.FamaMacBethResults.idiosyncratic", "panel/panel/linearmodels.panel.results.FamaMacBethResults.loglik", "panel/panel/linearmodels.panel.results.FamaMacBethResults.model_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.name", "panel/panel/linearmodels.panel.results.FamaMacBethResults.nobs", "panel/panel/linearmodels.panel.results.FamaMacBethResults.params", "panel/panel/linearmodels.panel.results.FamaMacBethResults.predict", "panel/panel/linearmodels.panel.results.FamaMacBethResults.pvalues", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resid_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resids", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_between", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_overall", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_within", "panel/panel/linearmodels.panel.results.FamaMacBethResults.s2", "panel/panel/linearmodels.panel.results.FamaMacBethResults.std_errors", "panel/panel/linearmodels.panel.results.FamaMacBethResults.summary", "panel/panel/linearmodels.panel.results.FamaMacBethResults.time_info", "panel/panel/linearmodels.panel.results.FamaMacBethResults.total_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.tstats", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wald_test", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wresids", "panel/panel/linearmodels.panel.results.PanelEffectsResults", "panel/panel/linearmodels.panel.results.PanelEffectsResults.conf_int", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_between", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_within", "panel/panel/linearmodels.panel.results.PanelEffectsResults.cov", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_model", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_resid", "panel/panel/linearmodels.panel.results.PanelEffectsResults.entity_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.estimated_effects", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_pooled", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.PanelEffectsResults.fitted_values", "panel/panel/linearmodels.panel.results.PanelEffectsResults.idiosyncratic", "panel/panel/linearmodels.panel.results.PanelEffectsResults.included_effects", "panel/panel/linearmodels.panel.results.PanelEffectsResults.loglik", "panel/panel/linearmodels.panel.results.PanelEffectsResults.model_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.name", "panel/panel/linearmodels.panel.results.PanelEffectsResults.nobs", "panel/panel/linearmodels.panel.results.PanelEffectsResults.other_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.params", "panel/panel/linearmodels.panel.results.PanelEffectsResults.predict", "panel/panel/linearmodels.panel.results.PanelEffectsResults.pvalues", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resid_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resids", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_between", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_within", "panel/panel/linearmodels.panel.results.PanelEffectsResults.s2", "panel/panel/linearmodels.panel.results.PanelEffectsResults.std_errors", "panel/panel/linearmodels.panel.results.PanelEffectsResults.summary", "panel/panel/linearmodels.panel.results.PanelEffectsResults.time_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.total_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.tstats", "panel/panel/linearmodels.panel.results.PanelEffectsResults.variance_decomposition", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wald_test", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wresids", "panel/panel/linearmodels.panel.results.PanelModelComparison", "panel/panel/linearmodels.panel.results.PanelModelComparison.cov_estimator", "panel/panel/linearmodels.panel.results.PanelModelComparison.estimator_method", "panel/panel/linearmodels.panel.results.PanelModelComparison.f_statistic", "panel/panel/linearmodels.panel.results.PanelModelComparison.nobs", "panel/panel/linearmodels.panel.results.PanelModelComparison.params", "panel/panel/linearmodels.panel.results.PanelModelComparison.pvalues", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_between", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_within", "panel/panel/linearmodels.panel.results.PanelModelComparison.std_errors", "panel/panel/linearmodels.panel.results.PanelModelComparison.summary", "panel/panel/linearmodels.panel.results.PanelModelComparison.tstats", "panel/panel/linearmodels.panel.results.PanelResults", "panel/panel/linearmodels.panel.results.PanelResults.conf_int", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_between", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_within", "panel/panel/linearmodels.panel.results.PanelResults.cov", "panel/panel/linearmodels.panel.results.PanelResults.df_model", "panel/panel/linearmodels.panel.results.PanelResults.df_resid", "panel/panel/linearmodels.panel.results.PanelResults.entity_info", "panel/panel/linearmodels.panel.results.PanelResults.estimated_effects", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.PanelResults.fitted_values", "panel/panel/linearmodels.panel.results.PanelResults.idiosyncratic", "panel/panel/linearmodels.panel.results.PanelResults.loglik", "panel/panel/linearmodels.panel.results.PanelResults.model_ss", "panel/panel/linearmodels.panel.results.PanelResults.name", "panel/panel/linearmodels.panel.results.PanelResults.nobs", "panel/panel/linearmodels.panel.results.PanelResults.params", "panel/panel/linearmodels.panel.results.PanelResults.predict", "panel/panel/linearmodels.panel.results.PanelResults.pvalues", "panel/panel/linearmodels.panel.results.PanelResults.resid_ss", "panel/panel/linearmodels.panel.results.PanelResults.resids", "panel/panel/linearmodels.panel.results.PanelResults.rsquared", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_between", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_within", "panel/panel/linearmodels.panel.results.PanelResults.s2", "panel/panel/linearmodels.panel.results.PanelResults.std_errors", "panel/panel/linearmodels.panel.results.PanelResults.summary", "panel/panel/linearmodels.panel.results.PanelResults.time_info", "panel/panel/linearmodels.panel.results.PanelResults.total_ss", "panel/panel/linearmodels.panel.results.PanelResults.tstats", "panel/panel/linearmodels.panel.results.PanelResults.wald_test", "panel/panel/linearmodels.panel.results.PanelResults.wresids", "panel/panel/linearmodels.panel.results.RandomEffectsResults", "panel/panel/linearmodels.panel.results.RandomEffectsResults.conf_int", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_between", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_within", "panel/panel/linearmodels.panel.results.RandomEffectsResults.cov", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_model", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_resid", "panel/panel/linearmodels.panel.results.RandomEffectsResults.entity_info", "panel/panel/linearmodels.panel.results.RandomEffectsResults.estimated_effects", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.RandomEffectsResults.fitted_values", "panel/panel/linearmodels.panel.results.RandomEffectsResults.idiosyncratic", "panel/panel/linearmodels.panel.results.RandomEffectsResults.loglik", "panel/panel/linearmodels.panel.results.RandomEffectsResults.model_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.name", "panel/panel/linearmodels.panel.results.RandomEffectsResults.nobs", "panel/panel/linearmodels.panel.results.RandomEffectsResults.params", "panel/panel/linearmodels.panel.results.RandomEffectsResults.predict", "panel/panel/linearmodels.panel.results.RandomEffectsResults.pvalues", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resid_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resids", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_between", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_overall", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_within", "panel/panel/linearmodels.panel.results.RandomEffectsResults.s2", "panel/panel/linearmodels.panel.results.RandomEffectsResults.std_errors", "panel/panel/linearmodels.panel.results.RandomEffectsResults.summary", "panel/panel/linearmodels.panel.results.RandomEffectsResults.theta", "panel/panel/linearmodels.panel.results.RandomEffectsResults.time_info", "panel/panel/linearmodels.panel.results.RandomEffectsResults.total_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.tstats", "panel/panel/linearmodels.panel.results.RandomEffectsResults.variance_decomposition", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wald_test", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wresids", "panel/panel/linearmodels.panel.utility.generate_panel_data", "panel/reference", "plan", "references", "system/examples/examples", "system/examples/formulas", "system/examples/three-stage-ls", "system/index", "system/mathematical-formula", "system/reference", "system/system/linearmodels.system.covariance.ClusteredCovariance", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov_config", "system/system/linearmodels.system.covariance.ClusteredCovariance.sigma", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMKernelCovariance", "system/system/linearmodels.system.covariance.GMMKernelCovariance.bandwidth", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMKernelCovariance.kernel", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.sigma", "system/system/linearmodels.system.covariance.HomoskedasticCovariance", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.sigma", "system/system/linearmodels.system.covariance.KernelCovariance", "system/system/linearmodels.system.covariance.KernelCovariance.bandwidth", "system/system/linearmodels.system.covariance.KernelCovariance.cov", "system/system/linearmodels.system.covariance.KernelCovariance.cov_config", "system/system/linearmodels.system.covariance.KernelCovariance.kernel", "system/system/linearmodels.system.covariance.KernelCovariance.sigma", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.config", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.config", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix", "system/system/linearmodels.system.gmm.KernelWeightMatrix", "system/system/linearmodels.system.gmm.KernelWeightMatrix.bandwidth", "system/system/linearmodels.system.gmm.KernelWeightMatrix.config", "system/system/linearmodels.system.gmm.KernelWeightMatrix.kernel", "system/system/linearmodels.system.gmm.KernelWeightMatrix.sigma", "system/system/linearmodels.system.gmm.KernelWeightMatrix.weight_matrix", "system/system/linearmodels.system.model.IV3SLS", "system/system/linearmodels.system.model.IV3SLS.add_constraints", "system/system/linearmodels.system.model.IV3SLS.constraints", "system/system/linearmodels.system.model.IV3SLS.fit", "system/system/linearmodels.system.model.IV3SLS.formula", "system/system/linearmodels.system.model.IV3SLS.from_formula", "system/system/linearmodels.system.model.IV3SLS.has_constant", "system/system/linearmodels.system.model.IV3SLS.multivariate_iv", "system/system/linearmodels.system.model.IV3SLS.param_names", "system/system/linearmodels.system.model.IV3SLS.predict", "system/system/linearmodels.system.model.IV3SLS.reset_constraints", "system/system/linearmodels.system.model.IVSystemGMM", "system/system/linearmodels.system.model.IVSystemGMM.add_constraints", "system/system/linearmodels.system.model.IVSystemGMM.constraints", "system/system/linearmodels.system.model.IVSystemGMM.fit", "system/system/linearmodels.system.model.IVSystemGMM.formula", "system/system/linearmodels.system.model.IVSystemGMM.from_formula", "system/system/linearmodels.system.model.IVSystemGMM.has_constant", "system/system/linearmodels.system.model.IVSystemGMM.param_names", "system/system/linearmodels.system.model.IVSystemGMM.predict", "system/system/linearmodels.system.model.IVSystemGMM.reset_constraints", "system/system/linearmodels.system.model.SUR", "system/system/linearmodels.system.model.SUR.add_constraints", "system/system/linearmodels.system.model.SUR.constraints", "system/system/linearmodels.system.model.SUR.fit", "system/system/linearmodels.system.model.SUR.formula", "system/system/linearmodels.system.model.SUR.from_formula", "system/system/linearmodels.system.model.SUR.has_constant", "system/system/linearmodels.system.model.SUR.multivariate_ls", "system/system/linearmodels.system.model.SUR.param_names", "system/system/linearmodels.system.model.SUR.predict", "system/system/linearmodels.system.model.SUR.reset_constraints", "system/system/linearmodels.system.results.GMMSystemResults", "system/system/linearmodels.system.results.GMMSystemResults.breusch_pagan", "system/system/linearmodels.system.results.GMMSystemResults.conf_int", "system/system/linearmodels.system.results.GMMSystemResults.cov", "system/system/linearmodels.system.results.GMMSystemResults.cov_config", "system/system/linearmodels.system.results.GMMSystemResults.cov_estimator", "system/system/linearmodels.system.results.GMMSystemResults.debiased", "system/system/linearmodels.system.results.GMMSystemResults.df_model", "system/system/linearmodels.system.results.GMMSystemResults.df_resid", "system/system/linearmodels.system.results.GMMSystemResults.equation_labels", "system/system/linearmodels.system.results.GMMSystemResults.equations", "system/system/linearmodels.system.results.GMMSystemResults.fitted_values", "system/system/linearmodels.system.results.GMMSystemResults.iterations", "system/system/linearmodels.system.results.GMMSystemResults.j_stat", "system/system/linearmodels.system.results.GMMSystemResults.likelihood_ratio", "system/system/linearmodels.system.results.GMMSystemResults.method", "system/system/linearmodels.system.results.GMMSystemResults.model", "system/system/linearmodels.system.results.GMMSystemResults.model_ss", "system/system/linearmodels.system.results.GMMSystemResults.nobs", "system/system/linearmodels.system.results.GMMSystemResults.params", "system/system/linearmodels.system.results.GMMSystemResults.predict", "system/system/linearmodels.system.results.GMMSystemResults.pvalues", "system/system/linearmodels.system.results.GMMSystemResults.resid_ss", "system/system/linearmodels.system.results.GMMSystemResults.resids", "system/system/linearmodels.system.results.GMMSystemResults.rsquared", "system/system/linearmodels.system.results.GMMSystemResults.sigma", "system/system/linearmodels.system.results.GMMSystemResults.std_errors", "system/system/linearmodels.system.results.GMMSystemResults.summary", "system/system/linearmodels.system.results.GMMSystemResults.system_rsquared", "system/system/linearmodels.system.results.GMMSystemResults.total_ss", "system/system/linearmodels.system.results.GMMSystemResults.tstats", "system/system/linearmodels.system.results.GMMSystemResults.w", "system/system/linearmodels.system.results.GMMSystemResults.weight_config", "system/system/linearmodels.system.results.GMMSystemResults.weight_type", "system/system/linearmodels.system.results.GMMSystemResults.wresids", "system/system/linearmodels.system.results.SystemResults", "system/system/linearmodels.system.results.SystemResults.breusch_pagan", "system/system/linearmodels.system.results.SystemResults.conf_int", "system/system/linearmodels.system.results.SystemResults.cov", "system/system/linearmodels.system.results.SystemResults.cov_config", "system/system/linearmodels.system.results.SystemResults.cov_estimator", "system/system/linearmodels.system.results.SystemResults.debiased", "system/system/linearmodels.system.results.SystemResults.df_model", "system/system/linearmodels.system.results.SystemResults.df_resid", "system/system/linearmodels.system.results.SystemResults.equation_labels", "system/system/linearmodels.system.results.SystemResults.equations", "system/system/linearmodels.system.results.SystemResults.fitted_values", "system/system/linearmodels.system.results.SystemResults.iterations", "system/system/linearmodels.system.results.SystemResults.likelihood_ratio", "system/system/linearmodels.system.results.SystemResults.method", "system/system/linearmodels.system.results.SystemResults.model", "system/system/linearmodels.system.results.SystemResults.model_ss", "system/system/linearmodels.system.results.SystemResults.nobs", "system/system/linearmodels.system.results.SystemResults.params", "system/system/linearmodels.system.results.SystemResults.predict", "system/system/linearmodels.system.results.SystemResults.pvalues", "system/system/linearmodels.system.results.SystemResults.resid_ss", "system/system/linearmodels.system.results.SystemResults.resids", "system/system/linearmodels.system.results.SystemResults.rsquared", "system/system/linearmodels.system.results.SystemResults.sigma", "system/system/linearmodels.system.results.SystemResults.std_errors", "system/system/linearmodels.system.results.SystemResults.summary", "system/system/linearmodels.system.results.SystemResults.system_rsquared", "system/system/linearmodels.system.results.SystemResults.total_ss", "system/system/linearmodels.system.results.SystemResults.tstats", "system/system/linearmodels.system.results.SystemResults.wresids", "utility", "utility/linearmodels.shared.covariance.cov_cluster", "utility/linearmodels.shared.covariance.cov_kernel", "utility/linearmodels.shared.covariance.group_debias_coefficient", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.null", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.pval", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.stat", "utility/linearmodels.shared.hypotheses.WaldTestStatistic", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.critical_values", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.null", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.pval", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.stat", "utility/linearmodels.shared.utility.AttrDict", "utility/linearmodels.shared.utility.AttrDict.clear", "utility/linearmodels.shared.utility.AttrDict.copy", "utility/linearmodels.shared.utility.AttrDict.get", "utility/linearmodels.shared.utility.AttrDict.items", "utility/linearmodels.shared.utility.AttrDict.keys", "utility/linearmodels.shared.utility.AttrDict.pop", "utility/linearmodels.shared.utility.AttrDict.popitem", "utility/linearmodels.shared.utility.AttrDict.setdefault", "utility/linearmodels.shared.utility.AttrDict.update", "utility/linearmodels.shared.utility.AttrDict.values"], "filenames": ["asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.config.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.kernel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.s.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.square.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.alphas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.betas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.name.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.nobs.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.params.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.tstats.rst", "asset-pricing/examples/examples.ipynb", "asset-pricing/examples/formulas.ipynb", "asset-pricing/index.rst", "asset-pricing/introduction.rst", "asset-pricing/mathematical-formula.rst", "asset-pricing/reference.rst", "changes.rst", "contributing.rst", "index.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.dependent.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.exog.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.fit.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.has_constant.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.instruments.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.resids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.weights.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.wresids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.conf_int.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_config.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_type.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.debiased.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_model.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_resid.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.has_constant.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.method.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.model_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.nobs.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.params.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.pvalues.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.s2.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.std_errors.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.summary.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.total_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.tstats.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wald_test.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wresids.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cat.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cont.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.drop.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.from_frame.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.hash.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.isnull.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.nobs.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.sparse.rst", "iv/examples/absorbing-regression.ipynb", "iv/examples/advanced-examples.ipynb", "iv/examples/basic-examples.ipynb", "iv/examples/using-formulas.ipynb", "iv/index.rst", "iv/introduction.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_bartlett.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_parzen.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_quadratic_spectral.rst", "iv/iv/linearmodels.iv.data.IVData.rst", "iv/iv/linearmodels.iv.data.IVData.cols.rst", "iv/iv/linearmodels.iv.data.IVData.drop.rst", "iv/iv/linearmodels.iv.data.IVData.isnull.rst", "iv/iv/linearmodels.iv.data.IVData.labels.rst", "iv/iv/linearmodels.iv.data.IVData.ndarray.rst", "iv/iv/linearmodels.iv.data.IVData.ndim.rst", "iv/iv/linearmodels.iv.data.IVData.pandas.rst", "iv/iv/linearmodels.iv.data.IVData.rows.rst", "iv/iv/linearmodels.iv.data.IVData.shape.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.config.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.cov.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.debiased.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s2.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.bandwidth.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.model.IV2SLS.rst", "iv/iv/linearmodels.iv.model.IV2SLS.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IV2SLS.fit.rst", "iv/iv/linearmodels.iv.model.IV2SLS.formula.rst", "iv/iv/linearmodels.iv.model.IV2SLS.from_formula.rst", "iv/iv/linearmodels.iv.model.IV2SLS.has_constant.rst", "iv/iv/linearmodels.iv.model.IV2SLS.isnull.rst", "iv/iv/linearmodels.iv.model.IV2SLS.notnull.rst", "iv/iv/linearmodels.iv.model.IV2SLS.predict.rst", "iv/iv/linearmodels.iv.model.IV2SLS.resids.rst", "iv/iv/linearmodels.iv.model.IV2SLS.wresids.rst", "iv/iv/linearmodels.iv.model.IVGMM.rst", "iv/iv/linearmodels.iv.model.IVGMM.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVGMM.fit.rst", "iv/iv/linearmodels.iv.model.IVGMM.formula.rst", "iv/iv/linearmodels.iv.model.IVGMM.from_formula.rst", "iv/iv/linearmodels.iv.model.IVGMM.has_constant.rst", "iv/iv/linearmodels.iv.model.IVGMM.isnull.rst", "iv/iv/linearmodels.iv.model.IVGMM.notnull.rst", "iv/iv/linearmodels.iv.model.IVGMM.predict.rst", "iv/iv/linearmodels.iv.model.IVGMM.resids.rst", "iv/iv/linearmodels.iv.model.IVGMM.wresids.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.fit.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.formula.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.from_formula.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.has_constant.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.isnull.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.j.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.notnull.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.predict.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.resids.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.wresids.rst", "iv/iv/linearmodels.iv.model.IVLIML.rst", "iv/iv/linearmodels.iv.model.IVLIML.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVLIML.fit.rst", "iv/iv/linearmodels.iv.model.IVLIML.formula.rst", "iv/iv/linearmodels.iv.model.IVLIML.from_formula.rst", "iv/iv/linearmodels.iv.model.IVLIML.has_constant.rst", "iv/iv/linearmodels.iv.model.IVLIML.isnull.rst", "iv/iv/linearmodels.iv.model.IVLIML.notnull.rst", "iv/iv/linearmodels.iv.model.IVLIML.predict.rst", "iv/iv/linearmodels.iv.model.IVLIML.resids.rst", "iv/iv/linearmodels.iv.model.IVLIML.wresids.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.diagnostics.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.individual.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.summary.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.c_stat.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.conf_int.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_config.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_type.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.debiased.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.df_model.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.df_resid.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.first_stage.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.has_constant.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.iterations.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.j_stat.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.kappa.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.method.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.model_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.nobs.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.params.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.predict.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.pvalues.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.resids.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.s2.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.std_errors.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.summary.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.total_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.tstats.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.wald_test.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_config.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_matrix.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_type.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.wresids.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.estimator_method.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.nobs.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.params.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.pvalues.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.std_errors.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.summary.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.tstats.rst", "iv/iv/linearmodels.iv.results.IVResults.rst", "iv/iv/linearmodels.iv.results.IVResults.anderson_rubin.rst", "iv/iv/linearmodels.iv.results.IVResults.basmann.rst", "iv/iv/linearmodels.iv.results.IVResults.basmann_f.rst", "iv/iv/linearmodels.iv.results.IVResults.conf_int.rst", "iv/iv/linearmodels.iv.results.IVResults.cov.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_config.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_type.rst", "iv/iv/linearmodels.iv.results.IVResults.debiased.rst", "iv/iv/linearmodels.iv.results.IVResults.df_model.rst", "iv/iv/linearmodels.iv.results.IVResults.df_resid.rst", "iv/iv/linearmodels.iv.results.IVResults.durbin.rst", "iv/iv/linearmodels.iv.results.IVResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVResults.first_stage.rst", "iv/iv/linearmodels.iv.results.IVResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.IVResults.has_constant.rst", "iv/iv/linearmodels.iv.results.IVResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.IVResults.kappa.rst", "iv/iv/linearmodels.iv.results.IVResults.method.rst", "iv/iv/linearmodels.iv.results.IVResults.model_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.nobs.rst", "iv/iv/linearmodels.iv.results.IVResults.params.rst", "iv/iv/linearmodels.iv.results.IVResults.predict.rst", "iv/iv/linearmodels.iv.results.IVResults.pvalues.rst", "iv/iv/linearmodels.iv.results.IVResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.resids.rst", "iv/iv/linearmodels.iv.results.IVResults.rsquared.rst", "iv/iv/linearmodels.iv.results.IVResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVResults.s2.rst", "iv/iv/linearmodels.iv.results.IVResults.sargan.rst", "iv/iv/linearmodels.iv.results.IVResults.std_errors.rst", "iv/iv/linearmodels.iv.results.IVResults.summary.rst", "iv/iv/linearmodels.iv.results.IVResults.total_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.tstats.rst", "iv/iv/linearmodels.iv.results.IVResults.wald_test.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_overid.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_regression.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_score.rst", "iv/iv/linearmodels.iv.results.IVResults.wresids.rst", "iv/iv/linearmodels.iv.results.IVResults.wu_hausman.rst", "iv/iv/linearmodels.iv.results.OLSResults.rst", "iv/iv/linearmodels.iv.results.OLSResults.conf_int.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_config.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_type.rst", "iv/iv/linearmodels.iv.results.OLSResults.debiased.rst", "iv/iv/linearmodels.iv.results.OLSResults.df_model.rst", "iv/iv/linearmodels.iv.results.OLSResults.df_resid.rst", "iv/iv/linearmodels.iv.results.OLSResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.OLSResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.OLSResults.has_constant.rst", "iv/iv/linearmodels.iv.results.OLSResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.OLSResults.kappa.rst", "iv/iv/linearmodels.iv.results.OLSResults.method.rst", "iv/iv/linearmodels.iv.results.OLSResults.model_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.nobs.rst", "iv/iv/linearmodels.iv.results.OLSResults.params.rst", "iv/iv/linearmodels.iv.results.OLSResults.predict.rst", "iv/iv/linearmodels.iv.results.OLSResults.pvalues.rst", "iv/iv/linearmodels.iv.results.OLSResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.resids.rst", "iv/iv/linearmodels.iv.results.OLSResults.rsquared.rst", "iv/iv/linearmodels.iv.results.OLSResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.OLSResults.s2.rst", "iv/iv/linearmodels.iv.results.OLSResults.std_errors.rst", "iv/iv/linearmodels.iv.results.OLSResults.summary.rst", "iv/iv/linearmodels.iv.results.OLSResults.total_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.tstats.rst", "iv/iv/linearmodels.iv.results.OLSResults.wald_test.rst", "iv/iv/linearmodels.iv.results.OLSResults.wresids.rst", "iv/iv/linearmodels.iv.results.compare.rst", "iv/mathematical-formula.rst", "iv/reference.rst", "panel/examples/data-formats.ipynb", "panel/examples/examples.ipynb", "panel/examples/using-formulas.ipynb", "panel/faq.rst", "panel/index.rst", "panel/introduction.rst", "panel/mathematical-formula.rst", "panel/pandas.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.cov.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.eps.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.name.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.s2.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.all_params.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.s2.rst", "panel/panel/linearmodels.panel.data.PanelData.rst", "panel/panel/linearmodels.panel.data.PanelData.copy.rst", "panel/panel/linearmodels.panel.data.PanelData.count.rst", "panel/panel/linearmodels.panel.data.PanelData.dataframe.rst", "panel/panel/linearmodels.panel.data.PanelData.demean.rst", "panel/panel/linearmodels.panel.data.PanelData.drop.rst", "panel/panel/linearmodels.panel.data.PanelData.dummies.rst", "panel/panel/linearmodels.panel.data.PanelData.entities.rst", "panel/panel/linearmodels.panel.data.PanelData.entity_ids.rst", "panel/panel/linearmodels.panel.data.PanelData.first_difference.rst", "panel/panel/linearmodels.panel.data.PanelData.general_demean.rst", "panel/panel/linearmodels.panel.data.PanelData.index.rst", "panel/panel/linearmodels.panel.data.PanelData.isnull.rst", "panel/panel/linearmodels.panel.data.PanelData.mean.rst", "panel/panel/linearmodels.panel.data.PanelData.ndim.rst", "panel/panel/linearmodels.panel.data.PanelData.nentity.rst", "panel/panel/linearmodels.panel.data.PanelData.nobs.rst", "panel/panel/linearmodels.panel.data.PanelData.nvar.rst", "panel/panel/linearmodels.panel.data.PanelData.panel.rst", "panel/panel/linearmodels.panel.data.PanelData.shape.rst", "panel/panel/linearmodels.panel.data.PanelData.time.rst", "panel/panel/linearmodels.panel.data.PanelData.time_ids.rst", "panel/panel/linearmodels.panel.data.PanelData.values2d.rst", "panel/panel/linearmodels.panel.data.PanelData.values3d.rst", "panel/panel/linearmodels.panel.data.PanelData.vars.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.fit.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.formula.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.not_null.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.predict.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.fit.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.formula.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.from_formula.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.has_constant.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.not_null.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.predict.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.fit.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.formula.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.not_null.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.predict.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.PanelOLS.rst", "panel/panel/linearmodels.panel.model.PanelOLS.entity_effects.rst", "panel/panel/linearmodels.panel.model.PanelOLS.fit.rst", "panel/panel/linearmodels.panel.model.PanelOLS.formula.rst", "panel/panel/linearmodels.panel.model.PanelOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.PanelOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.PanelOLS.not_null.rst", "panel/panel/linearmodels.panel.model.PanelOLS.other_effects.rst", "panel/panel/linearmodels.panel.model.PanelOLS.predict.rst", "panel/panel/linearmodels.panel.model.PanelOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.PanelOLS.time_effects.rst", "panel/panel/linearmodels.panel.model.PooledOLS.rst", "panel/panel/linearmodels.panel.model.PooledOLS.fit.rst", "panel/panel/linearmodels.panel.model.PooledOLS.formula.rst", "panel/panel/linearmodels.panel.model.PooledOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.PooledOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.PooledOLS.not_null.rst", "panel/panel/linearmodels.panel.model.PooledOLS.predict.rst", "panel/panel/linearmodels.panel.model.PooledOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.RandomEffects.rst", "panel/panel/linearmodels.panel.model.RandomEffects.fit.rst", "panel/panel/linearmodels.panel.model.RandomEffects.formula.rst", "panel/panel/linearmodels.panel.model.RandomEffects.from_formula.rst", "panel/panel/linearmodels.panel.model.RandomEffects.has_constant.rst", "panel/panel/linearmodels.panel.model.RandomEffects.not_null.rst", "panel/panel/linearmodels.panel.model.RandomEffects.predict.rst", "panel/panel/linearmodels.panel.model.RandomEffects.reformat_clusters.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.all_params.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.conf_int.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.cov.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_model.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_resid.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.entity_info.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.loglik.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.model_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.name.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.nobs.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.params.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.predict.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.pvalues.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resids.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.s2.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.std_errors.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.summary.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.time_info.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.total_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.tstats.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wald_test.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wresids.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.conf_int.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.cov.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_model.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_resid.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.entity_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_pooled.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.included_effects.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.loglik.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.model_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.name.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.nobs.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.other_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.params.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.predict.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resids.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.s2.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.summary.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.time_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.total_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.tstats.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.variance_decomposition.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wald_test.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wresids.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.cov_estimator.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.estimator_method.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.nobs.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.params.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.summary.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.tstats.rst", "panel/panel/linearmodels.panel.results.PanelResults.rst", "panel/panel/linearmodels.panel.results.PanelResults.conf_int.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.PanelResults.cov.rst", "panel/panel/linearmodels.panel.results.PanelResults.df_model.rst", "panel/panel/linearmodels.panel.results.PanelResults.df_resid.rst", "panel/panel/linearmodels.panel.results.PanelResults.entity_info.rst", "panel/panel/linearmodels.panel.results.PanelResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.PanelResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.PanelResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.PanelResults.loglik.rst", "panel/panel/linearmodels.panel.results.PanelResults.model_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.name.rst", "panel/panel/linearmodels.panel.results.PanelResults.nobs.rst", "panel/panel/linearmodels.panel.results.PanelResults.params.rst", "panel/panel/linearmodels.panel.results.PanelResults.predict.rst", "panel/panel/linearmodels.panel.results.PanelResults.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.resids.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelResults.s2.rst", "panel/panel/linearmodels.panel.results.PanelResults.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelResults.summary.rst", "panel/panel/linearmodels.panel.results.PanelResults.time_info.rst", "panel/panel/linearmodels.panel.results.PanelResults.total_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.tstats.rst", "panel/panel/linearmodels.panel.results.PanelResults.wald_test.rst", "panel/panel/linearmodels.panel.results.PanelResults.wresids.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.conf_int.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.cov.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_model.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_resid.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.entity_info.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.loglik.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.model_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.name.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.nobs.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.params.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.predict.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.pvalues.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resids.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.s2.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.std_errors.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.summary.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.theta.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.time_info.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.total_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.tstats.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.variance_decomposition.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wald_test.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wresids.rst", "panel/panel/linearmodels.panel.utility.generate_panel_data.rst", "panel/reference.rst", "plan.rst", "references.rst", "system/examples/examples.ipynb", "system/examples/formulas.ipynb", "system/examples/three-stage-ls.ipynb", "system/index.rst", "system/mathematical-formula.rst", "system/reference.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.sigma.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.bandwidth.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.kernel.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.sigma.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.sigma.rst", "system/system/linearmodels.system.covariance.KernelCovariance.rst", "system/system/linearmodels.system.covariance.KernelCovariance.bandwidth.rst", "system/system/linearmodels.system.covariance.KernelCovariance.cov.rst", "system/system/linearmodels.system.covariance.KernelCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.KernelCovariance.kernel.rst", "system/system/linearmodels.system.covariance.KernelCovariance.sigma.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.bandwidth.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.kernel.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.model.IV3SLS.rst", "system/system/linearmodels.system.model.IV3SLS.add_constraints.rst", "system/system/linearmodels.system.model.IV3SLS.constraints.rst", "system/system/linearmodels.system.model.IV3SLS.fit.rst", "system/system/linearmodels.system.model.IV3SLS.formula.rst", "system/system/linearmodels.system.model.IV3SLS.from_formula.rst", "system/system/linearmodels.system.model.IV3SLS.has_constant.rst", "system/system/linearmodels.system.model.IV3SLS.multivariate_iv.rst", "system/system/linearmodels.system.model.IV3SLS.param_names.rst", "system/system/linearmodels.system.model.IV3SLS.predict.rst", "system/system/linearmodels.system.model.IV3SLS.reset_constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.rst", "system/system/linearmodels.system.model.IVSystemGMM.add_constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.fit.rst", "system/system/linearmodels.system.model.IVSystemGMM.formula.rst", "system/system/linearmodels.system.model.IVSystemGMM.from_formula.rst", "system/system/linearmodels.system.model.IVSystemGMM.has_constant.rst", "system/system/linearmodels.system.model.IVSystemGMM.param_names.rst", "system/system/linearmodels.system.model.IVSystemGMM.predict.rst", "system/system/linearmodels.system.model.IVSystemGMM.reset_constraints.rst", "system/system/linearmodels.system.model.SUR.rst", "system/system/linearmodels.system.model.SUR.add_constraints.rst", "system/system/linearmodels.system.model.SUR.constraints.rst", "system/system/linearmodels.system.model.SUR.fit.rst", "system/system/linearmodels.system.model.SUR.formula.rst", "system/system/linearmodels.system.model.SUR.from_formula.rst", "system/system/linearmodels.system.model.SUR.has_constant.rst", "system/system/linearmodels.system.model.SUR.multivariate_ls.rst", "system/system/linearmodels.system.model.SUR.param_names.rst", "system/system/linearmodels.system.model.SUR.predict.rst", "system/system/linearmodels.system.model.SUR.reset_constraints.rst", "system/system/linearmodels.system.results.GMMSystemResults.rst", "system/system/linearmodels.system.results.GMMSystemResults.breusch_pagan.rst", "system/system/linearmodels.system.results.GMMSystemResults.conf_int.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov_config.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov_estimator.rst", "system/system/linearmodels.system.results.GMMSystemResults.debiased.rst", "system/system/linearmodels.system.results.GMMSystemResults.df_model.rst", "system/system/linearmodels.system.results.GMMSystemResults.df_resid.rst", "system/system/linearmodels.system.results.GMMSystemResults.equation_labels.rst", "system/system/linearmodels.system.results.GMMSystemResults.equations.rst", "system/system/linearmodels.system.results.GMMSystemResults.fitted_values.rst", "system/system/linearmodels.system.results.GMMSystemResults.iterations.rst", "system/system/linearmodels.system.results.GMMSystemResults.j_stat.rst", "system/system/linearmodels.system.results.GMMSystemResults.likelihood_ratio.rst", "system/system/linearmodels.system.results.GMMSystemResults.method.rst", "system/system/linearmodels.system.results.GMMSystemResults.model.rst", "system/system/linearmodels.system.results.GMMSystemResults.model_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.nobs.rst", "system/system/linearmodels.system.results.GMMSystemResults.params.rst", "system/system/linearmodels.system.results.GMMSystemResults.predict.rst", "system/system/linearmodels.system.results.GMMSystemResults.pvalues.rst", "system/system/linearmodels.system.results.GMMSystemResults.resid_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.resids.rst", "system/system/linearmodels.system.results.GMMSystemResults.rsquared.rst", "system/system/linearmodels.system.results.GMMSystemResults.sigma.rst", "system/system/linearmodels.system.results.GMMSystemResults.std_errors.rst", "system/system/linearmodels.system.results.GMMSystemResults.summary.rst", "system/system/linearmodels.system.results.GMMSystemResults.system_rsquared.rst", "system/system/linearmodels.system.results.GMMSystemResults.total_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.tstats.rst", "system/system/linearmodels.system.results.GMMSystemResults.w.rst", "system/system/linearmodels.system.results.GMMSystemResults.weight_config.rst", "system/system/linearmodels.system.results.GMMSystemResults.weight_type.rst", "system/system/linearmodels.system.results.GMMSystemResults.wresids.rst", "system/system/linearmodels.system.results.SystemResults.rst", "system/system/linearmodels.system.results.SystemResults.breusch_pagan.rst", "system/system/linearmodels.system.results.SystemResults.conf_int.rst", "system/system/linearmodels.system.results.SystemResults.cov.rst", "system/system/linearmodels.system.results.SystemResults.cov_config.rst", "system/system/linearmodels.system.results.SystemResults.cov_estimator.rst", "system/system/linearmodels.system.results.SystemResults.debiased.rst", "system/system/linearmodels.system.results.SystemResults.df_model.rst", "system/system/linearmodels.system.results.SystemResults.df_resid.rst", "system/system/linearmodels.system.results.SystemResults.equation_labels.rst", "system/system/linearmodels.system.results.SystemResults.equations.rst", "system/system/linearmodels.system.results.SystemResults.fitted_values.rst", "system/system/linearmodels.system.results.SystemResults.iterations.rst", "system/system/linearmodels.system.results.SystemResults.likelihood_ratio.rst", "system/system/linearmodels.system.results.SystemResults.method.rst", "system/system/linearmodels.system.results.SystemResults.model.rst", "system/system/linearmodels.system.results.SystemResults.model_ss.rst", "system/system/linearmodels.system.results.SystemResults.nobs.rst", "system/system/linearmodels.system.results.SystemResults.params.rst", "system/system/linearmodels.system.results.SystemResults.predict.rst", "system/system/linearmodels.system.results.SystemResults.pvalues.rst", "system/system/linearmodels.system.results.SystemResults.resid_ss.rst", "system/system/linearmodels.system.results.SystemResults.resids.rst", "system/system/linearmodels.system.results.SystemResults.rsquared.rst", "system/system/linearmodels.system.results.SystemResults.sigma.rst", "system/system/linearmodels.system.results.SystemResults.std_errors.rst", "system/system/linearmodels.system.results.SystemResults.summary.rst", "system/system/linearmodels.system.results.SystemResults.system_rsquared.rst", "system/system/linearmodels.system.results.SystemResults.total_ss.rst", "system/system/linearmodels.system.results.SystemResults.tstats.rst", "system/system/linearmodels.system.results.SystemResults.wresids.rst", "utility.rst", "utility/linearmodels.shared.covariance.cov_cluster.rst", "utility/linearmodels.shared.covariance.cov_kernel.rst", "utility/linearmodels.shared.covariance.group_debias_coefficient.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.null.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.pval.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.stat.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.critical_values.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.null.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.pval.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.stat.rst", "utility/linearmodels.shared.utility.AttrDict.rst", "utility/linearmodels.shared.utility.AttrDict.clear.rst", "utility/linearmodels.shared.utility.AttrDict.copy.rst", "utility/linearmodels.shared.utility.AttrDict.get.rst", "utility/linearmodels.shared.utility.AttrDict.items.rst", "utility/linearmodels.shared.utility.AttrDict.keys.rst", "utility/linearmodels.shared.utility.AttrDict.pop.rst", "utility/linearmodels.shared.utility.AttrDict.popitem.rst", "utility/linearmodels.shared.utility.AttrDict.setdefault.rst", "utility/linearmodels.shared.utility.AttrDict.update.rst", "utility/linearmodels.shared.utility.AttrDict.values.rst"], "titles": ["linearmodels.asset_pricing.covariance.HeteroskedasticCovariance", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square", "linearmodels.asset_pricing.covariance.KernelCovariance", "linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth", "linearmodels.asset_pricing.covariance.KernelCovariance.config", "linearmodels.asset_pricing.covariance.KernelCovariance.cov", "linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian", "linearmodels.asset_pricing.covariance.KernelCovariance.jacobian", "linearmodels.asset_pricing.covariance.KernelCovariance.kernel", "linearmodels.asset_pricing.covariance.KernelCovariance.s", "linearmodels.asset_pricing.covariance.KernelCovariance.square", "linearmodels.asset_pricing.model.LinearFactorModel", "linearmodels.asset_pricing.model.LinearFactorModel.fit", "linearmodels.asset_pricing.model.LinearFactorModel.formula", "linearmodels.asset_pricing.model.LinearFactorModel.from_formula", "linearmodels.asset_pricing.model.LinearFactorModelGMM", "linearmodels.asset_pricing.model.LinearFactorModelGMM.fit", "linearmodels.asset_pricing.model.LinearFactorModelGMM.formula", "linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula", "linearmodels.asset_pricing.model.TradedFactorModel", "linearmodels.asset_pricing.model.TradedFactorModel.fit", "linearmodels.asset_pricing.model.TradedFactorModel.formula", "linearmodels.asset_pricing.model.TradedFactorModel.from_formula", "linearmodels.asset_pricing.results.LinearFactorModelResults", "linearmodels.asset_pricing.results.LinearFactorModelResults.alphas", "linearmodels.asset_pricing.results.LinearFactorModelResults.betas", "linearmodels.asset_pricing.results.LinearFactorModelResults.cov", "linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator", "linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary", "linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic", "linearmodels.asset_pricing.results.LinearFactorModelResults.name", "linearmodels.asset_pricing.results.LinearFactorModelResults.nobs", "linearmodels.asset_pricing.results.LinearFactorModelResults.params", "linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues", "linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats", "linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared", "linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors", "linearmodels.asset_pricing.results.LinearFactorModelResults.summary", "linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss", "linearmodels.asset_pricing.results.LinearFactorModelResults.tstats", "Examples", "Using Formulas", "Linear Factor Models for Asset Pricing", "Introduction", "Formulas and Mathematical Detail", "Module Reference", "Change Log", "Contributing", "linearmodels", "linearmodels.iv.absorbing.AbsorbingLS", "linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent", "linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog", "linearmodels.iv.absorbing.AbsorbingLS.dependent", "linearmodels.iv.absorbing.AbsorbingLS.exog", "linearmodels.iv.absorbing.AbsorbingLS.fit", "linearmodels.iv.absorbing.AbsorbingLS.has_constant", "linearmodels.iv.absorbing.AbsorbingLS.instruments", "linearmodels.iv.absorbing.AbsorbingLS.resids", "linearmodels.iv.absorbing.AbsorbingLS.weights", "linearmodels.iv.absorbing.AbsorbingLS.wresids", "linearmodels.iv.absorbing.AbsorbingLSResults", "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects", "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared", "linearmodels.iv.absorbing.AbsorbingLSResults.conf_int", "linearmodels.iv.absorbing.AbsorbingLSResults.cov", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_config", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_type", "linearmodels.iv.absorbing.AbsorbingLSResults.debiased", "linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed", "linearmodels.iv.absorbing.AbsorbingLSResults.df_model", "linearmodels.iv.absorbing.AbsorbingLSResults.df_resid", "linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic", "linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values", "linearmodels.iv.absorbing.AbsorbingLSResults.has_constant", "linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic", "linearmodels.iv.absorbing.AbsorbingLSResults.method", "linearmodels.iv.absorbing.AbsorbingLSResults.model_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.nobs", "linearmodels.iv.absorbing.AbsorbingLSResults.params", "linearmodels.iv.absorbing.AbsorbingLSResults.pvalues", "linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.resids", "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared", "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj", "linearmodels.iv.absorbing.AbsorbingLSResults.s2", "linearmodels.iv.absorbing.AbsorbingLSResults.std_errors", "linearmodels.iv.absorbing.AbsorbingLSResults.summary", "linearmodels.iv.absorbing.AbsorbingLSResults.total_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.tstats", "linearmodels.iv.absorbing.AbsorbingLSResults.wald_test", "linearmodels.iv.absorbing.AbsorbingLSResults.wresids", "linearmodels.iv.absorbing.Interaction", "linearmodels.iv.absorbing.Interaction.cat", "linearmodels.iv.absorbing.Interaction.cont", "linearmodels.iv.absorbing.Interaction.drop", "linearmodels.iv.absorbing.Interaction.from_frame", "linearmodels.iv.absorbing.Interaction.hash", "linearmodels.iv.absorbing.Interaction.isnull", "linearmodels.iv.absorbing.Interaction.nobs", "linearmodels.iv.absorbing.Interaction.sparse", "Absorbing Regression", "Further Examples", "Basic Examples", "Using formulas to specify models", "Instrumental Variable Estimation", "Introduction", "linearmodels.iv.covariance.ClusteredCovariance", "linearmodels.iv.covariance.ClusteredCovariance.config", "linearmodels.iv.covariance.ClusteredCovariance.cov", "linearmodels.iv.covariance.ClusteredCovariance.debiased", "linearmodels.iv.covariance.ClusteredCovariance.s", "linearmodels.iv.covariance.ClusteredCovariance.s2", "linearmodels.iv.covariance.HeteroskedasticCovariance", "linearmodels.iv.covariance.HeteroskedasticCovariance.config", "linearmodels.iv.covariance.HeteroskedasticCovariance.cov", "linearmodels.iv.covariance.HeteroskedasticCovariance.debiased", "linearmodels.iv.covariance.HeteroskedasticCovariance.s", "linearmodels.iv.covariance.HeteroskedasticCovariance.s2", "linearmodels.iv.covariance.HomoskedasticCovariance", "linearmodels.iv.covariance.HomoskedasticCovariance.config", "linearmodels.iv.covariance.HomoskedasticCovariance.cov", "linearmodels.iv.covariance.HomoskedasticCovariance.debiased", "linearmodels.iv.covariance.HomoskedasticCovariance.s", "linearmodels.iv.covariance.HomoskedasticCovariance.s2", "linearmodels.iv.covariance.KernelCovariance", "linearmodels.iv.covariance.KernelCovariance.config", "linearmodels.iv.covariance.KernelCovariance.cov", "linearmodels.iv.covariance.KernelCovariance.debiased", "linearmodels.iv.covariance.KernelCovariance.s", "linearmodels.iv.covariance.KernelCovariance.s2", "linearmodels.iv.covariance.kernel_weight_bartlett", "linearmodels.iv.covariance.kernel_weight_parzen", "linearmodels.iv.covariance.kernel_weight_quadratic_spectral", "linearmodels.iv.data.IVData", "linearmodels.iv.data.IVData.cols", "linearmodels.iv.data.IVData.drop", "linearmodels.iv.data.IVData.isnull", "linearmodels.iv.data.IVData.labels", "linearmodels.iv.data.IVData.ndarray", "linearmodels.iv.data.IVData.ndim", "linearmodels.iv.data.IVData.pandas", "linearmodels.iv.data.IVData.rows", "linearmodels.iv.data.IVData.shape", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix", "linearmodels.iv.gmm.HomoskedasticWeightMatrix", "linearmodels.iv.gmm.HomoskedasticWeightMatrix.config", "linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix", "linearmodels.iv.gmm.IVGMMCovariance", "linearmodels.iv.gmm.IVGMMCovariance.config", "linearmodels.iv.gmm.IVGMMCovariance.cov", "linearmodels.iv.gmm.IVGMMCovariance.debiased", "linearmodels.iv.gmm.IVGMMCovariance.s", "linearmodels.iv.gmm.IVGMMCovariance.s2", "linearmodels.iv.gmm.KernelWeightMatrix", "linearmodels.iv.gmm.KernelWeightMatrix.bandwidth", "linearmodels.iv.gmm.KernelWeightMatrix.config", "linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix", "linearmodels.iv.model.IV2SLS", "linearmodels.iv.model.IV2SLS.estimate_parameters", "linearmodels.iv.model.IV2SLS.fit", "linearmodels.iv.model.IV2SLS.formula", "linearmodels.iv.model.IV2SLS.from_formula", "linearmodels.iv.model.IV2SLS.has_constant", "linearmodels.iv.model.IV2SLS.isnull", "linearmodels.iv.model.IV2SLS.notnull", "linearmodels.iv.model.IV2SLS.predict", "linearmodels.iv.model.IV2SLS.resids", "linearmodels.iv.model.IV2SLS.wresids", "linearmodels.iv.model.IVGMM", "linearmodels.iv.model.IVGMM.estimate_parameters", "linearmodels.iv.model.IVGMM.fit", "linearmodels.iv.model.IVGMM.formula", "linearmodels.iv.model.IVGMM.from_formula", "linearmodels.iv.model.IVGMM.has_constant", "linearmodels.iv.model.IVGMM.isnull", "linearmodels.iv.model.IVGMM.notnull", "linearmodels.iv.model.IVGMM.predict", "linearmodels.iv.model.IVGMM.resids", "linearmodels.iv.model.IVGMM.wresids", "linearmodels.iv.model.IVGMMCUE", "linearmodels.iv.model.IVGMMCUE.estimate_parameters", "linearmodels.iv.model.IVGMMCUE.fit", "linearmodels.iv.model.IVGMMCUE.formula", "linearmodels.iv.model.IVGMMCUE.from_formula", "linearmodels.iv.model.IVGMMCUE.has_constant", "linearmodels.iv.model.IVGMMCUE.isnull", "linearmodels.iv.model.IVGMMCUE.j", "linearmodels.iv.model.IVGMMCUE.notnull", "linearmodels.iv.model.IVGMMCUE.predict", "linearmodels.iv.model.IVGMMCUE.resids", "linearmodels.iv.model.IVGMMCUE.wresids", "linearmodels.iv.model.IVLIML", "linearmodels.iv.model.IVLIML.estimate_parameters", "linearmodels.iv.model.IVLIML.fit", "linearmodels.iv.model.IVLIML.formula", "linearmodels.iv.model.IVLIML.from_formula", "linearmodels.iv.model.IVLIML.has_constant", "linearmodels.iv.model.IVLIML.isnull", "linearmodels.iv.model.IVLIML.notnull", "linearmodels.iv.model.IVLIML.predict", "linearmodels.iv.model.IVLIML.resids", "linearmodels.iv.model.IVLIML.wresids", "linearmodels.iv.results.FirstStageResults", "linearmodels.iv.results.FirstStageResults.diagnostics", "linearmodels.iv.results.FirstStageResults.individual", "linearmodels.iv.results.FirstStageResults.summary", "linearmodels.iv.results.IVGMMResults", "linearmodels.iv.results.IVGMMResults.c_stat", "linearmodels.iv.results.IVGMMResults.conf_int", "linearmodels.iv.results.IVGMMResults.cov", "linearmodels.iv.results.IVGMMResults.cov_config", "linearmodels.iv.results.IVGMMResults.cov_estimator", "linearmodels.iv.results.IVGMMResults.cov_type", "linearmodels.iv.results.IVGMMResults.debiased", "linearmodels.iv.results.IVGMMResults.df_model", "linearmodels.iv.results.IVGMMResults.df_resid", "linearmodels.iv.results.IVGMMResults.f_statistic", "linearmodels.iv.results.IVGMMResults.first_stage", "linearmodels.iv.results.IVGMMResults.fitted_values", "linearmodels.iv.results.IVGMMResults.has_constant", "linearmodels.iv.results.IVGMMResults.idiosyncratic", "linearmodels.iv.results.IVGMMResults.iterations", "linearmodels.iv.results.IVGMMResults.j_stat", "linearmodels.iv.results.IVGMMResults.kappa", "linearmodels.iv.results.IVGMMResults.method", "linearmodels.iv.results.IVGMMResults.model_ss", "linearmodels.iv.results.IVGMMResults.nobs", "linearmodels.iv.results.IVGMMResults.params", "linearmodels.iv.results.IVGMMResults.predict", "linearmodels.iv.results.IVGMMResults.pvalues", "linearmodels.iv.results.IVGMMResults.resid_ss", "linearmodels.iv.results.IVGMMResults.resids", "linearmodels.iv.results.IVGMMResults.rsquared", "linearmodels.iv.results.IVGMMResults.rsquared_adj", "linearmodels.iv.results.IVGMMResults.s2", "linearmodels.iv.results.IVGMMResults.std_errors", "linearmodels.iv.results.IVGMMResults.summary", "linearmodels.iv.results.IVGMMResults.total_ss", "linearmodels.iv.results.IVGMMResults.tstats", "linearmodels.iv.results.IVGMMResults.wald_test", "linearmodels.iv.results.IVGMMResults.weight_config", "linearmodels.iv.results.IVGMMResults.weight_matrix", "linearmodels.iv.results.IVGMMResults.weight_type", "linearmodels.iv.results.IVGMMResults.wresids", "linearmodels.iv.results.IVModelComparison", "linearmodels.iv.results.IVModelComparison.cov_estimator", "linearmodels.iv.results.IVModelComparison.estimator_method", "linearmodels.iv.results.IVModelComparison.f_statistic", "linearmodels.iv.results.IVModelComparison.nobs", "linearmodels.iv.results.IVModelComparison.params", "linearmodels.iv.results.IVModelComparison.pvalues", "linearmodels.iv.results.IVModelComparison.rsquared", "linearmodels.iv.results.IVModelComparison.rsquared_adj", "linearmodels.iv.results.IVModelComparison.std_errors", "linearmodels.iv.results.IVModelComparison.summary", "linearmodels.iv.results.IVModelComparison.tstats", "linearmodels.iv.results.IVResults", "linearmodels.iv.results.IVResults.anderson_rubin", "linearmodels.iv.results.IVResults.basmann", "linearmodels.iv.results.IVResults.basmann_f", "linearmodels.iv.results.IVResults.conf_int", "linearmodels.iv.results.IVResults.cov", "linearmodels.iv.results.IVResults.cov_config", "linearmodels.iv.results.IVResults.cov_estimator", "linearmodels.iv.results.IVResults.cov_type", "linearmodels.iv.results.IVResults.debiased", "linearmodels.iv.results.IVResults.df_model", "linearmodels.iv.results.IVResults.df_resid", "linearmodels.iv.results.IVResults.durbin", "linearmodels.iv.results.IVResults.f_statistic", "linearmodels.iv.results.IVResults.first_stage", "linearmodels.iv.results.IVResults.fitted_values", "linearmodels.iv.results.IVResults.has_constant", "linearmodels.iv.results.IVResults.idiosyncratic", "linearmodels.iv.results.IVResults.kappa", "linearmodels.iv.results.IVResults.method", "linearmodels.iv.results.IVResults.model_ss", "linearmodels.iv.results.IVResults.nobs", "linearmodels.iv.results.IVResults.params", "linearmodels.iv.results.IVResults.predict", "linearmodels.iv.results.IVResults.pvalues", "linearmodels.iv.results.IVResults.resid_ss", "linearmodels.iv.results.IVResults.resids", "linearmodels.iv.results.IVResults.rsquared", "linearmodels.iv.results.IVResults.rsquared_adj", "linearmodels.iv.results.IVResults.s2", "linearmodels.iv.results.IVResults.sargan", "linearmodels.iv.results.IVResults.std_errors", "linearmodels.iv.results.IVResults.summary", "linearmodels.iv.results.IVResults.total_ss", "linearmodels.iv.results.IVResults.tstats", "linearmodels.iv.results.IVResults.wald_test", "linearmodels.iv.results.IVResults.wooldridge_overid", "linearmodels.iv.results.IVResults.wooldridge_regression", "linearmodels.iv.results.IVResults.wooldridge_score", "linearmodels.iv.results.IVResults.wresids", "linearmodels.iv.results.IVResults.wu_hausman", "linearmodels.iv.results.OLSResults", "linearmodels.iv.results.OLSResults.conf_int", "linearmodels.iv.results.OLSResults.cov", "linearmodels.iv.results.OLSResults.cov_config", "linearmodels.iv.results.OLSResults.cov_estimator", "linearmodels.iv.results.OLSResults.cov_type", "linearmodels.iv.results.OLSResults.debiased", "linearmodels.iv.results.OLSResults.df_model", "linearmodels.iv.results.OLSResults.df_resid", "linearmodels.iv.results.OLSResults.f_statistic", "linearmodels.iv.results.OLSResults.fitted_values", "linearmodels.iv.results.OLSResults.has_constant", "linearmodels.iv.results.OLSResults.idiosyncratic", "linearmodels.iv.results.OLSResults.kappa", "linearmodels.iv.results.OLSResults.method", "linearmodels.iv.results.OLSResults.model_ss", "linearmodels.iv.results.OLSResults.nobs", "linearmodels.iv.results.OLSResults.params", "linearmodels.iv.results.OLSResults.predict", "linearmodels.iv.results.OLSResults.pvalues", "linearmodels.iv.results.OLSResults.resid_ss", "linearmodels.iv.results.OLSResults.resids", "linearmodels.iv.results.OLSResults.rsquared", "linearmodels.iv.results.OLSResults.rsquared_adj", "linearmodels.iv.results.OLSResults.s2", "linearmodels.iv.results.OLSResults.std_errors", "linearmodels.iv.results.OLSResults.summary", "linearmodels.iv.results.OLSResults.total_ss", "linearmodels.iv.results.OLSResults.tstats", "linearmodels.iv.results.OLSResults.wald_test", "linearmodels.iv.results.OLSResults.wresids", "linearmodels.iv.results.compare", "Formulas and Mathematical Detail", "Module Reference", "Data Formats for Panel Data Analysis", "Examples", "Using formulas to specify models", "Implementation Choices", "Panel Data Model Estimation", "Introduction", "Formulas and Mathematical Detail", "Comparison with pandas PanelOLS and FamaMacBeth", "linearmodels.panel.covariance.ACCovariance", "linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.ACCovariance.cov", "linearmodels.panel.covariance.ACCovariance.deferred_cov", "linearmodels.panel.covariance.ACCovariance.eps", "linearmodels.panel.covariance.ACCovariance.name", "linearmodels.panel.covariance.ACCovariance.s2", "linearmodels.panel.covariance.ClusteredCovariance", "linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.ClusteredCovariance.cov", "linearmodels.panel.covariance.ClusteredCovariance.deferred_cov", "linearmodels.panel.covariance.ClusteredCovariance.eps", "linearmodels.panel.covariance.ClusteredCovariance.name", "linearmodels.panel.covariance.ClusteredCovariance.s2", "linearmodels.panel.covariance.DriscollKraay", "linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS", "linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL", "linearmodels.panel.covariance.DriscollKraay.cov", "linearmodels.panel.covariance.DriscollKraay.deferred_cov", "linearmodels.panel.covariance.DriscollKraay.eps", "linearmodels.panel.covariance.DriscollKraay.name", "linearmodels.panel.covariance.DriscollKraay.s2", "linearmodels.panel.covariance.FamaMacBethCovariance", "linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.FamaMacBethCovariance.all_params", "linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth", "linearmodels.panel.covariance.FamaMacBethCovariance.cov", "linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov", "linearmodels.panel.covariance.FamaMacBethCovariance.eps", "linearmodels.panel.covariance.FamaMacBethCovariance.name", "linearmodels.panel.covariance.FamaMacBethCovariance.s2", "linearmodels.panel.covariance.HeteroskedasticCovariance", "linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.HeteroskedasticCovariance.cov", "linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov", "linearmodels.panel.covariance.HeteroskedasticCovariance.eps", "linearmodels.panel.covariance.HeteroskedasticCovariance.name", "linearmodels.panel.covariance.HeteroskedasticCovariance.s2", "linearmodels.panel.covariance.HomoskedasticCovariance", "linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.HomoskedasticCovariance.cov", "linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov", "linearmodels.panel.covariance.HomoskedasticCovariance.eps", "linearmodels.panel.covariance.HomoskedasticCovariance.name", "linearmodels.panel.covariance.HomoskedasticCovariance.s2", "linearmodels.panel.data.PanelData", "linearmodels.panel.data.PanelData.copy", "linearmodels.panel.data.PanelData.count", "linearmodels.panel.data.PanelData.dataframe", "linearmodels.panel.data.PanelData.demean", "linearmodels.panel.data.PanelData.drop", "linearmodels.panel.data.PanelData.dummies", "linearmodels.panel.data.PanelData.entities", "linearmodels.panel.data.PanelData.entity_ids", "linearmodels.panel.data.PanelData.first_difference", "linearmodels.panel.data.PanelData.general_demean", "linearmodels.panel.data.PanelData.index", "linearmodels.panel.data.PanelData.isnull", "linearmodels.panel.data.PanelData.mean", "linearmodels.panel.data.PanelData.ndim", "linearmodels.panel.data.PanelData.nentity", "linearmodels.panel.data.PanelData.nobs", "linearmodels.panel.data.PanelData.nvar", "linearmodels.panel.data.PanelData.panel", "linearmodels.panel.data.PanelData.shape", "linearmodels.panel.data.PanelData.time", "linearmodels.panel.data.PanelData.time_ids", "linearmodels.panel.data.PanelData.values2d", "linearmodels.panel.data.PanelData.values3d", "linearmodels.panel.data.PanelData.vars", "linearmodels.panel.model.BetweenOLS", "linearmodels.panel.model.BetweenOLS.fit", "linearmodels.panel.model.BetweenOLS.formula", "linearmodels.panel.model.BetweenOLS.from_formula", "linearmodels.panel.model.BetweenOLS.has_constant", "linearmodels.panel.model.BetweenOLS.not_null", "linearmodels.panel.model.BetweenOLS.predict", "linearmodels.panel.model.BetweenOLS.reformat_clusters", "linearmodels.panel.model.FamaMacBeth", "linearmodels.panel.model.FamaMacBeth.fit", "linearmodels.panel.model.FamaMacBeth.formula", "linearmodels.panel.model.FamaMacBeth.from_formula", "linearmodels.panel.model.FamaMacBeth.has_constant", "linearmodels.panel.model.FamaMacBeth.not_null", "linearmodels.panel.model.FamaMacBeth.predict", "linearmodels.panel.model.FamaMacBeth.reformat_clusters", "linearmodels.panel.model.FirstDifferenceOLS", "linearmodels.panel.model.FirstDifferenceOLS.fit", "linearmodels.panel.model.FirstDifferenceOLS.formula", "linearmodels.panel.model.FirstDifferenceOLS.from_formula", "linearmodels.panel.model.FirstDifferenceOLS.has_constant", "linearmodels.panel.model.FirstDifferenceOLS.not_null", "linearmodels.panel.model.FirstDifferenceOLS.predict", "linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters", "linearmodels.panel.model.PanelOLS", "linearmodels.panel.model.PanelOLS.entity_effects", "linearmodels.panel.model.PanelOLS.fit", "linearmodels.panel.model.PanelOLS.formula", "linearmodels.panel.model.PanelOLS.from_formula", "linearmodels.panel.model.PanelOLS.has_constant", "linearmodels.panel.model.PanelOLS.not_null", "linearmodels.panel.model.PanelOLS.other_effects", "linearmodels.panel.model.PanelOLS.predict", "linearmodels.panel.model.PanelOLS.reformat_clusters", "linearmodels.panel.model.PanelOLS.time_effects", "linearmodels.panel.model.PooledOLS", "linearmodels.panel.model.PooledOLS.fit", "linearmodels.panel.model.PooledOLS.formula", "linearmodels.panel.model.PooledOLS.from_formula", "linearmodels.panel.model.PooledOLS.has_constant", "linearmodels.panel.model.PooledOLS.not_null", "linearmodels.panel.model.PooledOLS.predict", "linearmodels.panel.model.PooledOLS.reformat_clusters", "linearmodels.panel.model.RandomEffects", "linearmodels.panel.model.RandomEffects.fit", "linearmodels.panel.model.RandomEffects.formula", "linearmodels.panel.model.RandomEffects.from_formula", "linearmodels.panel.model.RandomEffects.has_constant", "linearmodels.panel.model.RandomEffects.not_null", "linearmodels.panel.model.RandomEffects.predict", "linearmodels.panel.model.RandomEffects.reformat_clusters", "linearmodels.panel.results.FamaMacBethResults", "linearmodels.panel.results.FamaMacBethResults.all_params", "linearmodels.panel.results.FamaMacBethResults.conf_int", "linearmodels.panel.results.FamaMacBethResults.corr_squared_between", "linearmodels.panel.results.FamaMacBethResults.corr_squared_overall", "linearmodels.panel.results.FamaMacBethResults.corr_squared_within", "linearmodels.panel.results.FamaMacBethResults.cov", "linearmodels.panel.results.FamaMacBethResults.df_model", "linearmodels.panel.results.FamaMacBethResults.df_resid", "linearmodels.panel.results.FamaMacBethResults.entity_info", "linearmodels.panel.results.FamaMacBethResults.estimated_effects", "linearmodels.panel.results.FamaMacBethResults.f_statistic", "linearmodels.panel.results.FamaMacBethResults.f_statistic_robust", "linearmodels.panel.results.FamaMacBethResults.fitted_values", "linearmodels.panel.results.FamaMacBethResults.idiosyncratic", "linearmodels.panel.results.FamaMacBethResults.loglik", "linearmodels.panel.results.FamaMacBethResults.model_ss", "linearmodels.panel.results.FamaMacBethResults.name", "linearmodels.panel.results.FamaMacBethResults.nobs", "linearmodels.panel.results.FamaMacBethResults.params", "linearmodels.panel.results.FamaMacBethResults.predict", "linearmodels.panel.results.FamaMacBethResults.pvalues", "linearmodels.panel.results.FamaMacBethResults.resid_ss", "linearmodels.panel.results.FamaMacBethResults.resids", "linearmodels.panel.results.FamaMacBethResults.rsquared", "linearmodels.panel.results.FamaMacBethResults.rsquared_between", "linearmodels.panel.results.FamaMacBethResults.rsquared_overall", "linearmodels.panel.results.FamaMacBethResults.rsquared_within", "linearmodels.panel.results.FamaMacBethResults.s2", "linearmodels.panel.results.FamaMacBethResults.std_errors", "linearmodels.panel.results.FamaMacBethResults.summary", "linearmodels.panel.results.FamaMacBethResults.time_info", "linearmodels.panel.results.FamaMacBethResults.total_ss", "linearmodels.panel.results.FamaMacBethResults.tstats", "linearmodels.panel.results.FamaMacBethResults.wald_test", "linearmodels.panel.results.FamaMacBethResults.wresids", "linearmodels.panel.results.PanelEffectsResults", "linearmodels.panel.results.PanelEffectsResults.conf_int", "linearmodels.panel.results.PanelEffectsResults.corr_squared_between", "linearmodels.panel.results.PanelEffectsResults.corr_squared_overall", "linearmodels.panel.results.PanelEffectsResults.corr_squared_within", "linearmodels.panel.results.PanelEffectsResults.cov", "linearmodels.panel.results.PanelEffectsResults.df_model", "linearmodels.panel.results.PanelEffectsResults.df_resid", "linearmodels.panel.results.PanelEffectsResults.entity_info", "linearmodels.panel.results.PanelEffectsResults.estimated_effects", "linearmodels.panel.results.PanelEffectsResults.f_pooled", "linearmodels.panel.results.PanelEffectsResults.f_statistic", "linearmodels.panel.results.PanelEffectsResults.f_statistic_robust", "linearmodels.panel.results.PanelEffectsResults.fitted_values", "linearmodels.panel.results.PanelEffectsResults.idiosyncratic", "linearmodels.panel.results.PanelEffectsResults.included_effects", "linearmodels.panel.results.PanelEffectsResults.loglik", "linearmodels.panel.results.PanelEffectsResults.model_ss", "linearmodels.panel.results.PanelEffectsResults.name", "linearmodels.panel.results.PanelEffectsResults.nobs", "linearmodels.panel.results.PanelEffectsResults.other_info", "linearmodels.panel.results.PanelEffectsResults.params", "linearmodels.panel.results.PanelEffectsResults.predict", "linearmodels.panel.results.PanelEffectsResults.pvalues", "linearmodels.panel.results.PanelEffectsResults.resid_ss", "linearmodels.panel.results.PanelEffectsResults.resids", "linearmodels.panel.results.PanelEffectsResults.rsquared", "linearmodels.panel.results.PanelEffectsResults.rsquared_between", "linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive", "linearmodels.panel.results.PanelEffectsResults.rsquared_overall", "linearmodels.panel.results.PanelEffectsResults.rsquared_within", "linearmodels.panel.results.PanelEffectsResults.s2", "linearmodels.panel.results.PanelEffectsResults.std_errors", "linearmodels.panel.results.PanelEffectsResults.summary", "linearmodels.panel.results.PanelEffectsResults.time_info", "linearmodels.panel.results.PanelEffectsResults.total_ss", "linearmodels.panel.results.PanelEffectsResults.tstats", "linearmodels.panel.results.PanelEffectsResults.variance_decomposition", "linearmodels.panel.results.PanelEffectsResults.wald_test", "linearmodels.panel.results.PanelEffectsResults.wresids", "linearmodels.panel.results.PanelModelComparison", "linearmodels.panel.results.PanelModelComparison.cov_estimator", "linearmodels.panel.results.PanelModelComparison.estimator_method", "linearmodels.panel.results.PanelModelComparison.f_statistic", "linearmodels.panel.results.PanelModelComparison.nobs", "linearmodels.panel.results.PanelModelComparison.params", "linearmodels.panel.results.PanelModelComparison.pvalues", "linearmodels.panel.results.PanelModelComparison.rsquared", "linearmodels.panel.results.PanelModelComparison.rsquared_between", "linearmodels.panel.results.PanelModelComparison.rsquared_overall", "linearmodels.panel.results.PanelModelComparison.rsquared_within", "linearmodels.panel.results.PanelModelComparison.std_errors", "linearmodels.panel.results.PanelModelComparison.summary", "linearmodels.panel.results.PanelModelComparison.tstats", "linearmodels.panel.results.PanelResults", "linearmodels.panel.results.PanelResults.conf_int", "linearmodels.panel.results.PanelResults.corr_squared_between", "linearmodels.panel.results.PanelResults.corr_squared_overall", "linearmodels.panel.results.PanelResults.corr_squared_within", "linearmodels.panel.results.PanelResults.cov", "linearmodels.panel.results.PanelResults.df_model", "linearmodels.panel.results.PanelResults.df_resid", "linearmodels.panel.results.PanelResults.entity_info", "linearmodels.panel.results.PanelResults.estimated_effects", "linearmodels.panel.results.PanelResults.f_statistic", "linearmodels.panel.results.PanelResults.f_statistic_robust", "linearmodels.panel.results.PanelResults.fitted_values", "linearmodels.panel.results.PanelResults.idiosyncratic", "linearmodels.panel.results.PanelResults.loglik", "linearmodels.panel.results.PanelResults.model_ss", "linearmodels.panel.results.PanelResults.name", "linearmodels.panel.results.PanelResults.nobs", "linearmodels.panel.results.PanelResults.params", "linearmodels.panel.results.PanelResults.predict", "linearmodels.panel.results.PanelResults.pvalues", "linearmodels.panel.results.PanelResults.resid_ss", "linearmodels.panel.results.PanelResults.resids", "linearmodels.panel.results.PanelResults.rsquared", "linearmodels.panel.results.PanelResults.rsquared_between", "linearmodels.panel.results.PanelResults.rsquared_overall", "linearmodels.panel.results.PanelResults.rsquared_within", "linearmodels.panel.results.PanelResults.s2", "linearmodels.panel.results.PanelResults.std_errors", "linearmodels.panel.results.PanelResults.summary", "linearmodels.panel.results.PanelResults.time_info", "linearmodels.panel.results.PanelResults.total_ss", "linearmodels.panel.results.PanelResults.tstats", "linearmodels.panel.results.PanelResults.wald_test", "linearmodels.panel.results.PanelResults.wresids", "linearmodels.panel.results.RandomEffectsResults", "linearmodels.panel.results.RandomEffectsResults.conf_int", "linearmodels.panel.results.RandomEffectsResults.corr_squared_between", "linearmodels.panel.results.RandomEffectsResults.corr_squared_overall", "linearmodels.panel.results.RandomEffectsResults.corr_squared_within", "linearmodels.panel.results.RandomEffectsResults.cov", "linearmodels.panel.results.RandomEffectsResults.df_model", "linearmodels.panel.results.RandomEffectsResults.df_resid", "linearmodels.panel.results.RandomEffectsResults.entity_info", "linearmodels.panel.results.RandomEffectsResults.estimated_effects", "linearmodels.panel.results.RandomEffectsResults.f_statistic", "linearmodels.panel.results.RandomEffectsResults.f_statistic_robust", "linearmodels.panel.results.RandomEffectsResults.fitted_values", "linearmodels.panel.results.RandomEffectsResults.idiosyncratic", "linearmodels.panel.results.RandomEffectsResults.loglik", "linearmodels.panel.results.RandomEffectsResults.model_ss", "linearmodels.panel.results.RandomEffectsResults.name", "linearmodels.panel.results.RandomEffectsResults.nobs", "linearmodels.panel.results.RandomEffectsResults.params", "linearmodels.panel.results.RandomEffectsResults.predict", "linearmodels.panel.results.RandomEffectsResults.pvalues", "linearmodels.panel.results.RandomEffectsResults.resid_ss", "linearmodels.panel.results.RandomEffectsResults.resids", "linearmodels.panel.results.RandomEffectsResults.rsquared", "linearmodels.panel.results.RandomEffectsResults.rsquared_between", "linearmodels.panel.results.RandomEffectsResults.rsquared_overall", "linearmodels.panel.results.RandomEffectsResults.rsquared_within", "linearmodels.panel.results.RandomEffectsResults.s2", "linearmodels.panel.results.RandomEffectsResults.std_errors", "linearmodels.panel.results.RandomEffectsResults.summary", "linearmodels.panel.results.RandomEffectsResults.theta", "linearmodels.panel.results.RandomEffectsResults.time_info", "linearmodels.panel.results.RandomEffectsResults.total_ss", "linearmodels.panel.results.RandomEffectsResults.tstats", "linearmodels.panel.results.RandomEffectsResults.variance_decomposition", "linearmodels.panel.results.RandomEffectsResults.wald_test", "linearmodels.panel.results.RandomEffectsResults.wresids", "linearmodels.panel.utility.generate_panel_data", "Module Reference", "Module Plans", "References", "Examples", "Using formulas to specify models", "Three-stage Least Squares (3SLS)", "System Regression Models", "Seemingly Unrelated Regression (SUR/SURE)", "Module Reference", "linearmodels.system.covariance.ClusteredCovariance", "linearmodels.system.covariance.ClusteredCovariance.cov", "linearmodels.system.covariance.ClusteredCovariance.cov_config", "linearmodels.system.covariance.ClusteredCovariance.sigma", "linearmodels.system.covariance.GMMHeteroskedasticCovariance", "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov", "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config", "linearmodels.system.covariance.GMMHomoskedasticCovariance", "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov", "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config", "linearmodels.system.covariance.GMMKernelCovariance", "linearmodels.system.covariance.GMMKernelCovariance.bandwidth", "linearmodels.system.covariance.GMMKernelCovariance.cov", "linearmodels.system.covariance.GMMKernelCovariance.cov_config", "linearmodels.system.covariance.GMMKernelCovariance.kernel", "linearmodels.system.covariance.HeteroskedasticCovariance", "linearmodels.system.covariance.HeteroskedasticCovariance.cov", "linearmodels.system.covariance.HeteroskedasticCovariance.cov_config", "linearmodels.system.covariance.HeteroskedasticCovariance.sigma", "linearmodels.system.covariance.HomoskedasticCovariance", "linearmodels.system.covariance.HomoskedasticCovariance.cov", "linearmodels.system.covariance.HomoskedasticCovariance.cov_config", "linearmodels.system.covariance.HomoskedasticCovariance.sigma", "linearmodels.system.covariance.KernelCovariance", "linearmodels.system.covariance.KernelCovariance.bandwidth", "linearmodels.system.covariance.KernelCovariance.cov", "linearmodels.system.covariance.KernelCovariance.cov_config", "linearmodels.system.covariance.KernelCovariance.kernel", "linearmodels.system.covariance.KernelCovariance.sigma", "linearmodels.system.gmm.HeteroskedasticWeightMatrix", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.config", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix", "linearmodels.system.gmm.HomoskedasticWeightMatrix", "linearmodels.system.gmm.HomoskedasticWeightMatrix.config", "linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma", "linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix", "linearmodels.system.gmm.KernelWeightMatrix", "linearmodels.system.gmm.KernelWeightMatrix.bandwidth", "linearmodels.system.gmm.KernelWeightMatrix.config", "linearmodels.system.gmm.KernelWeightMatrix.kernel", "linearmodels.system.gmm.KernelWeightMatrix.sigma", "linearmodels.system.gmm.KernelWeightMatrix.weight_matrix", "linearmodels.system.model.IV3SLS", "linearmodels.system.model.IV3SLS.add_constraints", "linearmodels.system.model.IV3SLS.constraints", "linearmodels.system.model.IV3SLS.fit", "linearmodels.system.model.IV3SLS.formula", "linearmodels.system.model.IV3SLS.from_formula", "linearmodels.system.model.IV3SLS.has_constant", "linearmodels.system.model.IV3SLS.multivariate_iv", "linearmodels.system.model.IV3SLS.param_names", "linearmodels.system.model.IV3SLS.predict", "linearmodels.system.model.IV3SLS.reset_constraints", "linearmodels.system.model.IVSystemGMM", "linearmodels.system.model.IVSystemGMM.add_constraints", "linearmodels.system.model.IVSystemGMM.constraints", "linearmodels.system.model.IVSystemGMM.fit", "linearmodels.system.model.IVSystemGMM.formula", "linearmodels.system.model.IVSystemGMM.from_formula", "linearmodels.system.model.IVSystemGMM.has_constant", "linearmodels.system.model.IVSystemGMM.param_names", "linearmodels.system.model.IVSystemGMM.predict", "linearmodels.system.model.IVSystemGMM.reset_constraints", "linearmodels.system.model.SUR", "linearmodels.system.model.SUR.add_constraints", "linearmodels.system.model.SUR.constraints", "linearmodels.system.model.SUR.fit", "linearmodels.system.model.SUR.formula", "linearmodels.system.model.SUR.from_formula", "linearmodels.system.model.SUR.has_constant", "linearmodels.system.model.SUR.multivariate_ls", "linearmodels.system.model.SUR.param_names", "linearmodels.system.model.SUR.predict", "linearmodels.system.model.SUR.reset_constraints", "linearmodels.system.results.GMMSystemResults", "linearmodels.system.results.GMMSystemResults.breusch_pagan", "linearmodels.system.results.GMMSystemResults.conf_int", "linearmodels.system.results.GMMSystemResults.cov", "linearmodels.system.results.GMMSystemResults.cov_config", "linearmodels.system.results.GMMSystemResults.cov_estimator", "linearmodels.system.results.GMMSystemResults.debiased", "linearmodels.system.results.GMMSystemResults.df_model", "linearmodels.system.results.GMMSystemResults.df_resid", "linearmodels.system.results.GMMSystemResults.equation_labels", "linearmodels.system.results.GMMSystemResults.equations", "linearmodels.system.results.GMMSystemResults.fitted_values", "linearmodels.system.results.GMMSystemResults.iterations", "linearmodels.system.results.GMMSystemResults.j_stat", "linearmodels.system.results.GMMSystemResults.likelihood_ratio", "linearmodels.system.results.GMMSystemResults.method", "linearmodels.system.results.GMMSystemResults.model", "linearmodels.system.results.GMMSystemResults.model_ss", "linearmodels.system.results.GMMSystemResults.nobs", "linearmodels.system.results.GMMSystemResults.params", "linearmodels.system.results.GMMSystemResults.predict", "linearmodels.system.results.GMMSystemResults.pvalues", "linearmodels.system.results.GMMSystemResults.resid_ss", "linearmodels.system.results.GMMSystemResults.resids", "linearmodels.system.results.GMMSystemResults.rsquared", "linearmodels.system.results.GMMSystemResults.sigma", "linearmodels.system.results.GMMSystemResults.std_errors", "linearmodels.system.results.GMMSystemResults.summary", "linearmodels.system.results.GMMSystemResults.system_rsquared", "linearmodels.system.results.GMMSystemResults.total_ss", "linearmodels.system.results.GMMSystemResults.tstats", "linearmodels.system.results.GMMSystemResults.w", "linearmodels.system.results.GMMSystemResults.weight_config", "linearmodels.system.results.GMMSystemResults.weight_type", "linearmodels.system.results.GMMSystemResults.wresids", "linearmodels.system.results.SystemResults", "linearmodels.system.results.SystemResults.breusch_pagan", "linearmodels.system.results.SystemResults.conf_int", "linearmodels.system.results.SystemResults.cov", "linearmodels.system.results.SystemResults.cov_config", "linearmodels.system.results.SystemResults.cov_estimator", "linearmodels.system.results.SystemResults.debiased", "linearmodels.system.results.SystemResults.df_model", "linearmodels.system.results.SystemResults.df_resid", "linearmodels.system.results.SystemResults.equation_labels", "linearmodels.system.results.SystemResults.equations", "linearmodels.system.results.SystemResults.fitted_values", "linearmodels.system.results.SystemResults.iterations", "linearmodels.system.results.SystemResults.likelihood_ratio", "linearmodels.system.results.SystemResults.method", "linearmodels.system.results.SystemResults.model", "linearmodels.system.results.SystemResults.model_ss", "linearmodels.system.results.SystemResults.nobs", "linearmodels.system.results.SystemResults.params", "linearmodels.system.results.SystemResults.predict", "linearmodels.system.results.SystemResults.pvalues", "linearmodels.system.results.SystemResults.resid_ss", "linearmodels.system.results.SystemResults.resids", "linearmodels.system.results.SystemResults.rsquared", "linearmodels.system.results.SystemResults.sigma", "linearmodels.system.results.SystemResults.std_errors", "linearmodels.system.results.SystemResults.summary", "linearmodels.system.results.SystemResults.system_rsquared", "linearmodels.system.results.SystemResults.total_ss", "linearmodels.system.results.SystemResults.tstats", "linearmodels.system.results.SystemResults.wresids", "Utilities", "linearmodels.shared.covariance.cov_cluster", "linearmodels.shared.covariance.cov_kernel", "linearmodels.shared.covariance.group_debias_coefficient", "linearmodels.shared.hypotheses.InvalidTestStatistic", "linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values", "linearmodels.shared.hypotheses.InvalidTestStatistic.null", "linearmodels.shared.hypotheses.InvalidTestStatistic.pval", "linearmodels.shared.hypotheses.InvalidTestStatistic.stat", "linearmodels.shared.hypotheses.WaldTestStatistic", "linearmodels.shared.hypotheses.WaldTestStatistic.critical_values", "linearmodels.shared.hypotheses.WaldTestStatistic.null", "linearmodels.shared.hypotheses.WaldTestStatistic.pval", "linearmodels.shared.hypotheses.WaldTestStatistic.stat", "linearmodels.shared.utility.AttrDict", "linearmodels.shared.utility.AttrDict.clear", "linearmodels.shared.utility.AttrDict.copy", "linearmodels.shared.utility.AttrDict.get", "linearmodels.shared.utility.AttrDict.items", "linearmodels.shared.utility.AttrDict.keys", "linearmodels.shared.utility.AttrDict.pop", "linearmodels.shared.utility.AttrDict.popitem", "linearmodels.shared.utility.AttrDict.setdefault", "linearmodels.shared.utility.AttrDict.update", "linearmodels.shared.utility.AttrDict.values"], "terms": {"class": [0, 7, 16, 17, 20, 21, 24, 25, 28, 54, 55, 57, 68, 100, 110, 113, 114, 115, 121, 127, 133, 142, 152, 155, 158, 164, 168, 171, 172, 182, 193, 205, 206, 209, 216, 220, 237, 258, 270, 288, 311, 324, 349, 353, 361, 369, 377, 387, 395, 403, 428, 436, 444, 452, 463, 471, 479, 515, 555, 569, 604, 641, 643, 648, 651, 655, 658, 661, 666, 670, 674, 680, 684, 688, 694, 705, 715, 726, 761, 796, 801, 806], "xe": [0, 7], "jacobian": [0, 3, 6, 7, 11, 15, 52], "none": [0, 7, 16, 19, 21, 23, 27, 57, 62, 98, 100, 103, 110, 111, 112, 114, 115, 133, 142, 144, 153, 156, 159, 164, 166, 169, 171, 175, 179, 182, 184, 186, 190, 193, 194, 195, 197, 202, 205, 209, 213, 221, 242, 253, 282, 293, 305, 310, 329, 340, 353, 361, 369, 377, 407, 408, 413, 416, 428, 431, 434, 436, 437, 439, 442, 444, 447, 450, 452, 454, 456, 460, 463, 466, 469, 471, 474, 477, 499, 513, 537, 553, 588, 602, 623, 639, 641, 645, 646, 647, 648, 651, 655, 658, 661, 666, 670, 674, 683, 687, 688, 693, 694, 695, 696, 697, 698, 699, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 724, 725, 746, 780, 796, 797, 801, 807, 809, 812, 815], "inv_jacobian": [0, 7], "center": [0, 7, 21, 152, 155, 164, 168, 193, 343, 348, 647, 649, 680, 684, 688], "true": [0, 7, 17, 21, 25, 38, 48, 49, 51, 54, 62, 71, 80, 88, 109, 110, 115, 121, 127, 133, 142, 193, 221, 222, 230, 242, 243, 274, 283, 293, 294, 312, 320, 329, 330, 343, 345, 346, 350, 352, 353, 361, 369, 387, 395, 403, 407, 428, 429, 431, 436, 437, 439, 444, 445, 447, 452, 454, 456, 463, 464, 466, 471, 472, 474, 481, 491, 499, 500, 513, 516, 527, 537, 538, 553, 570, 580, 588, 589, 602, 605, 615, 623, 624, 639, 641, 645, 646, 647, 697, 718, 728, 746, 747, 763, 780, 781], "debias": [0, 7, 17, 21, 25, 38, 62, 68, 71, 80, 88, 110, 111, 112, 114, 115, 120, 121, 126, 127, 132, 133, 138, 152, 155, 158, 163, 164, 168, 173, 184, 195, 207, 220, 222, 230, 243, 270, 274, 283, 294, 311, 312, 320, 330, 343, 351, 352, 353, 361, 369, 377, 387, 395, 429, 437, 445, 454, 464, 472, 481, 491, 500, 516, 527, 538, 570, 580, 589, 605, 615, 624, 645, 646, 647, 649, 651, 655, 658, 661, 666, 670, 674, 680, 684, 688, 697, 708, 718, 726, 728, 747, 761, 763, 781, 795], "fals": [0, 7, 16, 19, 20, 21, 23, 54, 57, 62, 109, 110, 111, 112, 114, 115, 121, 127, 133, 152, 155, 158, 164, 168, 173, 184, 194, 195, 207, 242, 258, 293, 329, 342, 346, 348, 353, 361, 369, 377, 387, 395, 407, 409, 429, 452, 454, 456, 472, 499, 537, 555, 588, 623, 641, 645, 646, 647, 651, 655, 658, 661, 666, 670, 674, 680, 684, 688, 697, 718, 746, 780], "df": [0, 7, 52, 353, 369, 387, 395, 491, 527, 580, 615, 647, 801], "0": [0, 7, 21, 48, 49, 51, 52, 71, 98, 100, 104, 109, 110, 111, 112, 114, 133, 140, 142, 184, 205, 209, 222, 253, 274, 305, 307, 312, 340, 343, 345, 346, 347, 349, 350, 351, 352, 353, 361, 369, 377, 387, 395, 403, 431, 439, 447, 456, 466, 474, 481, 513, 516, 553, 570, 602, 605, 639, 641, 645, 646, 647, 648, 649, 694, 695, 705, 706, 715, 716, 727, 728, 740, 762, 763, 774], "sourc": [0, 7, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 38, 47, 52, 57, 62, 65, 67, 68, 69, 100, 103, 104, 110, 115, 121, 127, 133, 139, 140, 141, 142, 144, 152, 154, 155, 157, 158, 164, 167, 168, 170, 171, 175, 182, 183, 184, 186, 193, 194, 195, 197, 200, 205, 209, 216, 217, 218, 220, 221, 258, 270, 271, 272, 273, 282, 300, 306, 307, 308, 310, 311, 329, 342, 343, 351, 353, 356, 361, 364, 369, 372, 377, 381, 382, 387, 390, 395, 398, 399, 403, 404, 405, 407, 408, 409, 412, 413, 416, 428, 429, 431, 436, 437, 439, 444, 445, 447, 452, 454, 456, 463, 464, 466, 469, 471, 472, 474, 479, 515, 555, 569, 570, 574, 588, 589, 602, 604, 641, 649, 651, 655, 658, 661, 666, 670, 674, 680, 683, 684, 686, 687, 688, 693, 694, 699, 701, 705, 708, 710, 715, 720, 722, 726, 761, 762, 774, 780, 793, 794, 795, 796, 801, 806, 807, 808, 810, 811, 812, 815, 816], "heteroskedast": [0, 7, 25, 48, 50, 51, 52, 54, 62, 110, 111, 112, 114, 121, 125, 152, 158, 164, 173, 182, 184, 193, 207, 343, 369, 429, 437, 445, 454, 464, 472, 646, 647, 651, 666, 680, 688, 697, 708, 710, 718], "robust": [0, 7, 17, 21, 25, 48, 49, 50, 51, 52, 54, 62, 80, 109, 110, 111, 112, 114, 121, 125, 152, 158, 164, 173, 182, 184, 186, 193, 195, 197, 207, 230, 283, 320, 343, 345, 347, 350, 352, 353, 369, 377, 429, 437, 445, 454, 464, 472, 491, 527, 580, 615, 644, 646, 647, 649, 680, 688, 697, 705, 708, 710, 718], "estim": [0, 7, 8, 13, 16, 17, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 37, 40, 41, 44, 45, 49, 50, 51, 54, 56, 57, 62, 68, 72, 73, 74, 75, 80, 83, 84, 87, 90, 93, 94, 95, 99, 109, 115, 117, 119, 120, 121, 123, 125, 126, 127, 129, 131, 132, 133, 135, 137, 138, 152, 153, 155, 156, 158, 160, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 175, 178, 179, 182, 183, 184, 186, 189, 190, 193, 194, 195, 197, 200, 201, 202, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 230, 234, 235, 236, 237, 238, 241, 242, 245, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 268, 270, 271, 273, 275, 276, 277, 278, 283, 287, 288, 289, 292, 293, 296, 299, 300, 301, 302, 307, 309, 311, 313, 314, 315, 316, 320, 323, 324, 325, 328, 329, 332, 335, 336, 337, 341, 342, 345, 347, 348, 350, 352, 353, 356, 359, 361, 364, 367, 369, 372, 375, 377, 380, 381, 382, 385, 387, 390, 393, 395, 398, 401, 407, 428, 429, 431, 435, 436, 437, 439, 443, 444, 445, 447, 451, 452, 454, 456, 461, 463, 464, 466, 470, 471, 472, 474, 478, 479, 480, 485, 489, 491, 493, 497, 498, 499, 502, 504, 505, 506, 507, 508, 509, 515, 520, 524, 527, 529, 534, 536, 537, 540, 542, 544, 545, 546, 547, 548, 555, 556, 557, 567, 569, 574, 578, 580, 582, 586, 587, 588, 591, 593, 594, 595, 596, 597, 598, 604, 609, 613, 615, 617, 621, 622, 623, 626, 628, 629, 630, 631, 632, 633, 641, 644, 648, 651, 655, 658, 661, 662, 665, 666, 670, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 697, 699, 703, 705, 708, 710, 713, 715, 718, 720, 722, 724, 726, 727, 729, 730, 731, 739, 740, 741, 742, 745, 746, 749, 751, 752, 753, 754, 757, 758, 759, 760, 761, 762, 764, 765, 766, 774, 775, 776, 779, 780, 783, 785, 786, 787, 788, 791, 793, 794], "paramet": [0, 2, 7, 10, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 31, 34, 37, 38, 44, 47, 48, 49, 50, 51, 52, 54, 57, 62, 65, 67, 68, 71, 72, 73, 80, 83, 84, 87, 88, 94, 97, 98, 100, 104, 109, 110, 111, 112, 113, 114, 115, 117, 121, 123, 127, 129, 133, 135, 139, 140, 141, 142, 152, 154, 155, 157, 158, 160, 164, 167, 168, 170, 171, 172, 173, 175, 179, 180, 181, 182, 183, 184, 186, 190, 191, 192, 193, 194, 195, 197, 200, 202, 203, 204, 205, 206, 207, 209, 213, 214, 215, 220, 221, 222, 223, 224, 230, 234, 238, 241, 242, 243, 249, 252, 253, 258, 262, 263, 264, 267, 269, 270, 274, 275, 276, 282, 283, 287, 289, 292, 293, 294, 301, 304, 305, 310, 311, 312, 313, 314, 320, 323, 325, 328, 329, 330, 336, 339, 340, 342, 345, 347, 348, 349, 350, 351, 352, 353, 361, 369, 377, 380, 387, 395, 403, 405, 407, 408, 409, 413, 416, 428, 429, 431, 434, 435, 436, 437, 439, 442, 443, 444, 445, 447, 450, 451, 452, 454, 456, 460, 461, 463, 464, 466, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 485, 491, 493, 498, 499, 500, 508, 512, 513, 515, 516, 520, 527, 529, 536, 537, 538, 547, 551, 553, 555, 559, 560, 561, 566, 568, 569, 570, 574, 580, 582, 587, 588, 589, 597, 601, 602, 604, 605, 609, 615, 617, 622, 623, 624, 632, 637, 639, 641, 645, 646, 647, 648, 651, 652, 655, 656, 658, 659, 661, 663, 666, 667, 670, 671, 674, 676, 680, 682, 683, 684, 686, 687, 688, 692, 693, 694, 695, 697, 699, 701, 702, 703, 705, 706, 708, 710, 712, 713, 715, 716, 718, 720, 722, 723, 724, 726, 728, 729, 745, 746, 747, 752, 756, 761, 763, 764, 779, 780, 781, 786, 790, 793, 794, 795, 796, 801], "ndarrai": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 65, 67, 98, 100, 115, 117, 119, 120, 121, 123, 125, 126, 127, 129, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 153, 154, 156, 157, 158, 159, 160, 162, 163, 166, 167, 168, 169, 170, 172, 177, 178, 180, 181, 183, 184, 188, 189, 191, 192, 194, 195, 199, 200, 201, 203, 204, 206, 211, 212, 214, 215, 253, 255, 305, 340, 353, 356, 357, 358, 361, 364, 365, 366, 369, 372, 373, 374, 377, 382, 383, 384, 387, 390, 391, 392, 395, 398, 399, 400, 403, 407, 408, 411, 424, 425, 426, 433, 441, 449, 458, 468, 476, 513, 553, 602, 639, 651, 652, 654, 655, 656, 658, 659, 661, 663, 666, 667, 669, 670, 671, 673, 674, 676, 679, 682, 683, 686, 687, 692, 693, 708, 757, 793, 794, 795], "score": [0, 5, 7, 14, 52, 110, 111, 114, 115, 119, 121, 125, 127, 131, 133, 137, 158, 162, 270, 306, 308, 343, 361, 649, 651, 666, 674, 680, 688], "moment": [0, 5, 7, 14, 20, 21, 48, 52, 56, 110, 114, 152, 154, 155, 157, 158, 164, 167, 168, 170, 182, 184, 186, 193, 197, 200, 221, 236, 643, 644, 647, 648, 655, 658, 661, 680, 683, 684, 687, 688, 689, 693, 705, 710, 739], "condit": [0, 5, 7, 14, 21, 48, 52, 54, 109, 110, 114, 152, 154, 155, 157, 158, 164, 167, 168, 170, 182, 184, 186, 193, 197, 200, 221, 236, 343, 351, 647, 649, 655, 661, 680, 683, 684, 687, 688, 689, 693, 694, 705, 710, 715, 739], "default": [0, 7, 21, 48, 51, 54, 62, 80, 110, 111, 114, 171, 173, 175, 182, 184, 186, 193, 194, 195, 197, 205, 207, 209, 221, 230, 258, 282, 283, 310, 320, 342, 346, 347, 352, 353, 361, 369, 377, 387, 395, 437, 445, 454, 464, 472, 555, 641, 645, 647, 651, 683, 687, 693, 697, 718, 720, 809, 812], "One": [0, 7, 52, 62, 114, 173, 207, 361, 429, 445, 452, 454, 464, 471, 472, 645, 795], "onli": [0, 7, 16, 19, 23, 27, 48, 52, 54, 56, 68, 69, 83, 110, 111, 112, 205, 234, 282, 287, 310, 323, 343, 345, 346, 351, 352, 403, 407, 413, 454, 490, 493, 499, 525, 526, 529, 537, 579, 582, 588, 614, 617, 623, 645, 647, 649, 697, 705, 718, 750, 754, 784, 788], "one": [0, 7, 17, 19, 21, 23, 25, 27, 48, 54, 98, 109, 110, 111, 114, 158, 168, 182, 184, 193, 221, 253, 271, 273, 305, 340, 343, 345, 346, 351, 352, 353, 361, 369, 377, 403, 436, 490, 513, 526, 553, 579, 602, 614, 639, 641, 645, 646, 647, 649, 694, 699, 701, 703, 710, 713, 720, 724, 746, 750, 780, 784], "must": [0, 7, 19, 23, 24, 48, 50, 57, 110, 112, 142, 175, 179, 186, 190, 197, 202, 209, 213, 242, 293, 329, 346, 347, 352, 429, 434, 442, 445, 450, 460, 469, 477, 499, 537, 588, 623, 641, 645, 646, 651, 694, 699, 701, 703, 705, 710, 713, 715, 720, 724, 746, 780], "provid": [0, 7, 16, 19, 21, 23, 27, 62, 112, 113, 114, 115, 142, 158, 173, 184, 195, 205, 207, 209, 345, 347, 349, 352, 353, 361, 369, 377, 407, 429, 445, 454, 464, 472, 491, 527, 580, 615, 641, 645, 649, 661, 674, 688, 694, 699, 701, 705, 715, 720, 801, 810, 811, 816], "invers": [0, 3, 7, 11, 428, 431, 436, 439, 444, 447, 452, 456, 463, 466, 471, 474, 646], "bool": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 57, 62, 63, 76, 82, 115, 118, 121, 124, 127, 130, 133, 136, 142, 152, 153, 155, 156, 158, 159, 161, 164, 166, 168, 169, 173, 176, 184, 187, 194, 195, 198, 207, 210, 227, 233, 242, 258, 279, 286, 293, 317, 322, 329, 342, 353, 361, 369, 377, 387, 395, 403, 407, 409, 429, 431, 432, 437, 439, 440, 445, 447, 448, 452, 453, 454, 456, 457, 459, 462, 463, 464, 466, 467, 472, 474, 475, 499, 537, 555, 588, 623, 641, 651, 666, 670, 674, 680, 684, 688, 697, 718, 730, 732, 746, 765, 767, 780], "flag": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 48, 57, 62, 68, 76, 82, 115, 118, 121, 124, 127, 130, 133, 136, 142, 152, 155, 158, 161, 164, 168, 171, 173, 176, 182, 184, 187, 193, 194, 195, 198, 205, 207, 210, 220, 227, 233, 242, 270, 279, 286, 293, 311, 317, 322, 329, 343, 353, 361, 369, 377, 387, 395, 403, 407, 409, 428, 429, 431, 432, 436, 437, 439, 440, 444, 445, 447, 448, 452, 453, 454, 456, 457, 459, 462, 463, 464, 466, 467, 471, 472, 474, 475, 499, 537, 588, 623, 641, 649, 651, 666, 670, 674, 680, 684, 688, 697, 718, 726, 732, 746, 761, 767, 780], "indic": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 48, 54, 57, 62, 68, 76, 82, 110, 111, 112, 114, 115, 118, 121, 124, 127, 130, 133, 136, 142, 152, 155, 158, 161, 164, 168, 171, 173, 175, 176, 182, 184, 186, 187, 193, 194, 195, 197, 198, 205, 207, 209, 210, 220, 221, 227, 233, 236, 242, 270, 271, 273, 279, 286, 293, 311, 317, 322, 329, 343, 350, 351, 353, 361, 369, 377, 387, 395, 403, 407, 408, 409, 428, 429, 431, 432, 436, 437, 439, 440, 444, 445, 447, 448, 452, 453, 454, 456, 457, 459, 462, 463, 464, 466, 467, 471, 472, 474, 475, 499, 537, 588, 623, 641, 651, 666, 670, 674, 680, 684, 688, 694, 697, 700, 705, 711, 715, 718, 721, 726, 732, 739, 746, 761, 767, 780], "when": [0, 7, 21, 48, 49, 50, 51, 52, 54, 57, 62, 98, 105, 109, 110, 111, 112, 114, 142, 158, 164, 179, 190, 195, 202, 205, 213, 217, 242, 253, 293, 305, 308, 329, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 403, 407, 429, 434, 437, 442, 445, 450, 454, 460, 464, 469, 472, 477, 489, 499, 513, 524, 537, 553, 578, 588, 602, 613, 623, 639, 645, 646, 647, 648, 649, 651, 666, 670, 674, 688, 694, 697, 699, 703, 708, 710, 713, 715, 718, 720, 724, 727, 740, 746, 762, 774, 780], "comput": [0, 2, 7, 10, 21, 28, 32, 52, 65, 67, 68, 74, 80, 100, 141, 152, 155, 158, 164, 168, 179, 180, 181, 190, 191, 192, 195, 200, 202, 203, 204, 205, 209, 213, 214, 215, 220, 221, 225, 230, 242, 270, 271, 273, 277, 283, 293, 306, 311, 315, 320, 329, 343, 346, 351, 361, 412, 416, 434, 436, 437, 442, 445, 450, 454, 460, 464, 469, 472, 477, 645, 649, 651, 666, 670, 674, 680, 684, 688, 703, 713, 724, 726, 730, 731, 746, 761, 765, 766, 780, 795], "us": [0, 7, 8, 13, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 32, 34, 38, 45, 50, 51, 54, 57, 58, 59, 62, 67, 68, 71, 74, 75, 76, 80, 84, 88, 95, 98, 104, 105, 109, 110, 111, 113, 114, 115, 121, 127, 133, 139, 140, 141, 142, 152, 155, 158, 164, 165, 168, 171, 173, 174, 175, 179, 181, 182, 184, 185, 186, 190, 192, 193, 195, 196, 197, 202, 204, 205, 207, 208, 209, 213, 215, 217, 219, 220, 221, 222, 225, 226, 227, 230, 235, 238, 242, 243, 250, 253, 254, 255, 256, 258, 268, 270, 274, 277, 278, 279, 283, 289, 293, 294, 302, 305, 307, 308, 311, 312, 315, 316, 317, 320, 325, 329, 330, 337, 340, 342, 343, 345, 348, 349, 350, 351, 352, 353, 361, 369, 377, 387, 403, 407, 413, 416, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 450, 451, 452, 454, 455, 456, 460, 461, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 478, 479, 481, 482, 483, 484, 491, 497, 499, 500, 504, 505, 506, 509, 513, 515, 516, 517, 518, 519, 527, 534, 537, 538, 542, 544, 545, 548, 553, 555, 567, 569, 570, 571, 572, 573, 580, 586, 588, 589, 593, 594, 595, 598, 602, 604, 605, 606, 607, 608, 615, 621, 623, 624, 628, 629, 630, 633, 634, 639, 641, 644, 647, 648, 649, 651, 653, 655, 657, 658, 660, 661, 662, 664, 665, 666, 668, 670, 672, 674, 675, 677, 678, 680, 684, 688, 689, 691, 694, 695, 697, 698, 699, 701, 703, 705, 706, 708, 709, 710, 713, 715, 716, 718, 719, 720, 722, 724, 726, 727, 728, 730, 731, 732, 740, 742, 746, 747, 750, 753, 757, 758, 759, 761, 762, 763, 765, 766, 767, 774, 776, 780, 781, 784, 787, 801], "int": [0, 7, 21, 36, 77, 78, 79, 86, 107, 133, 139, 140, 141, 142, 146, 148, 151, 153, 156, 159, 164, 165, 166, 169, 179, 184, 190, 194, 202, 213, 228, 229, 235, 240, 280, 281, 291, 318, 319, 327, 353, 361, 369, 377, 387, 395, 417, 418, 419, 420, 422, 434, 442, 450, 460, 469, 477, 486, 487, 497, 521, 522, 534, 575, 576, 586, 610, 611, 621, 641, 697, 703, 708, 713, 718, 724, 733, 734, 738, 744, 768, 769, 773, 778, 801], "degre": [0, 7, 17, 21, 25, 52, 62, 68, 78, 79, 173, 184, 195, 207, 220, 228, 229, 236, 270, 272, 280, 281, 300, 311, 318, 319, 343, 346, 348, 351, 352, 353, 361, 369, 387, 395, 429, 437, 445, 454, 464, 472, 479, 486, 487, 490, 491, 515, 521, 522, 525, 526, 527, 569, 575, 576, 579, 580, 604, 610, 611, 614, 615, 726, 733, 734, 739, 761, 768, 769, 801], "freedom": [0, 7, 17, 21, 25, 52, 62, 68, 78, 79, 173, 184, 195, 207, 220, 228, 229, 236, 270, 272, 280, 281, 300, 311, 318, 319, 343, 346, 348, 351, 352, 353, 361, 369, 387, 395, 429, 437, 445, 454, 464, 472, 479, 486, 487, 490, 491, 515, 521, 522, 525, 526, 527, 569, 575, 576, 579, 580, 604, 610, 611, 614, 615, 726, 733, 734, 739, 761, 768, 769, 801], "valu": [0, 7, 16, 20, 21, 24, 48, 49, 50, 51, 52, 54, 62, 68, 69, 73, 80, 81, 98, 109, 110, 111, 112, 114, 115, 121, 127, 133, 171, 172, 177, 179, 182, 184, 188, 190, 193, 194, 195, 199, 202, 205, 206, 209, 211, 213, 217, 220, 221, 224, 230, 232, 237, 242, 253, 258, 261, 270, 271, 272, 273, 276, 282, 283, 285, 288, 293, 300, 305, 306, 307, 308, 310, 311, 314, 320, 321, 324, 329, 340, 342, 345, 346, 347, 348, 350, 351, 352, 353, 369, 377, 407, 412, 429, 434, 435, 442, 443, 445, 450, 451, 454, 460, 461, 464, 469, 470, 472, 477, 478, 479, 490, 491, 492, 499, 513, 515, 525, 526, 527, 528, 537, 553, 555, 558, 569, 579, 580, 581, 588, 602, 604, 614, 615, 616, 623, 634, 639, 641, 645, 646, 647, 648, 649, 651, 694, 695, 699, 703, 705, 706, 710, 713, 715, 716, 720, 724, 726, 737, 746, 761, 772, 780, 801, 802, 804, 812, 813], "ot": [0, 7, 403], "attribut": [0, 7, 16, 20, 24, 28, 57, 68, 100, 111, 115, 121, 127, 133, 142, 152, 155, 158, 164, 168, 171, 182, 193, 205, 216, 220, 258, 270, 311, 353, 361, 369, 377, 387, 395, 403, 428, 436, 444, 452, 463, 471, 479, 515, 555, 569, 604, 645, 651, 655, 658, 661, 666, 670, 674, 680, 684, 688, 694, 705, 715, 726, 761, 796, 801, 806], "config": [0, 7, 115, 121, 127, 133, 152, 155, 158, 164, 168, 680, 684, 688], "cov": [0, 7, 28, 48, 49, 51, 68, 109, 110, 111, 112, 114, 115, 121, 127, 133, 158, 220, 270, 311, 345, 346, 347, 350, 352, 353, 361, 369, 377, 387, 395, 479, 515, 569, 604, 645, 646, 647, 648, 651, 655, 658, 661, 666, 670, 674, 726, 761], "The": [0, 4, 7, 12, 16, 17, 19, 20, 21, 23, 24, 25, 27, 48, 49, 50, 51, 57, 62, 68, 83, 98, 108, 109, 110, 111, 112, 114, 152, 155, 164, 171, 173, 175, 179, 182, 186, 190, 197, 200, 202, 205, 207, 209, 213, 217, 220, 221, 234, 236, 253, 270, 271, 272, 273, 282, 287, 300, 305, 306, 307, 308, 310, 311, 323, 340, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 361, 369, 377, 380, 387, 395, 403, 428, 436, 437, 444, 452, 454, 463, 471, 479, 480, 482, 483, 484, 490, 491, 493, 504, 505, 506, 513, 517, 518, 519, 525, 526, 527, 529, 542, 544, 545, 553, 571, 572, 573, 579, 580, 582, 593, 594, 595, 602, 606, 607, 608, 614, 615, 617, 628, 629, 630, 639, 641, 643, 644, 645, 646, 647, 648, 649, 655, 658, 661, 680, 682, 684, 686, 688, 692, 694, 695, 697, 699, 705, 706, 710, 715, 716, 718, 720, 727, 739, 740, 750, 754, 762, 774, 784, 788, 795, 801], "s": [0, 7, 48, 49, 50, 51, 52, 54, 110, 111, 113, 114, 115, 121, 127, 133, 155, 158, 164, 205, 209, 217, 221, 270, 272, 273, 282, 306, 307, 308, 343, 345, 346, 349, 351, 353, 361, 369, 387, 395, 429, 445, 454, 464, 472, 645, 646, 647, 649, 651, 661, 666, 674, 688, 750, 754, 784, 788, 801, 810, 811, 816], "squar": [0, 7, 28, 39, 46, 48, 49, 51, 54, 56, 68, 85, 89, 96, 109, 110, 111, 112, 114, 171, 217, 220, 239, 244, 251, 270, 282, 290, 295, 303, 310, 311, 326, 331, 338, 345, 346, 347, 350, 351, 352, 407, 454, 479, 482, 483, 484, 490, 495, 501, 511, 515, 517, 518, 519, 525, 526, 532, 539, 550, 569, 571, 572, 573, 579, 584, 590, 600, 604, 606, 607, 608, 614, 619, 625, 636, 645, 646, 648, 694, 726, 743, 748, 755, 761, 777, 782, 789], "method": [0, 7, 16, 20, 24, 28, 45, 48, 49, 54, 56, 57, 62, 68, 95, 100, 109, 110, 112, 113, 114, 115, 121, 127, 133, 142, 152, 155, 158, 164, 168, 171, 172, 182, 183, 193, 205, 206, 216, 219, 220, 250, 256, 258, 260, 268, 270, 302, 311, 337, 345, 346, 349, 352, 353, 361, 369, 377, 387, 395, 403, 428, 436, 444, 452, 463, 471, 479, 509, 515, 548, 555, 557, 567, 569, 598, 604, 633, 643, 644, 645, 646, 647, 648, 651, 655, 658, 661, 666, 670, 674, 680, 684, 688, 694, 697, 705, 715, 718, 726, 753, 761, 787, 796, 801, 806, 815], "properti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 174, 176, 177, 178, 182, 185, 187, 188, 189, 193, 196, 198, 199, 201, 205, 208, 210, 211, 212, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 350, 352, 353, 356, 358, 359, 360, 361, 364, 366, 367, 368, 369, 372, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 390, 392, 393, 394, 395, 398, 400, 401, 402, 403, 406, 410, 411, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 436, 438, 440, 441, 444, 446, 448, 449, 452, 453, 455, 457, 458, 459, 462, 463, 465, 467, 468, 471, 473, 475, 476, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 685, 688, 689, 690, 691, 694, 695, 696, 698, 700, 702, 705, 706, 707, 709, 711, 712, 715, 716, 717, 719, 721, 723, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805], "dict": [1, 9, 21, 25, 28, 62, 68, 73, 116, 122, 128, 134, 146, 153, 156, 159, 166, 169, 194, 195, 218, 220, 224, 254, 258, 270, 276, 311, 314, 342, 346, 555, 647, 648, 694, 698, 699, 703, 705, 709, 710, 713, 715, 719, 720, 724, 730, 746, 758, 765, 780, 802], "str": [1, 7, 9, 13, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 32, 35, 62, 68, 73, 74, 75, 84, 98, 105, 111, 116, 122, 128, 133, 134, 142, 153, 156, 158, 159, 164, 166, 169, 173, 174, 175, 182, 184, 185, 186, 193, 195, 196, 197, 207, 208, 209, 218, 220, 221, 224, 225, 226, 238, 253, 254, 256, 270, 276, 277, 278, 282, 289, 305, 310, 311, 314, 315, 316, 325, 340, 345, 353, 354, 359, 362, 367, 369, 370, 375, 377, 378, 385, 388, 393, 396, 401, 403, 429, 430, 431, 437, 438, 439, 445, 446, 447, 454, 455, 456, 464, 465, 466, 472, 473, 474, 496, 513, 530, 533, 553, 585, 602, 620, 639, 647, 661, 665, 674, 678, 688, 691, 697, 698, 699, 702, 705, 708, 709, 710, 712, 718, 719, 720, 723, 730, 731, 735, 741, 758, 759, 765, 766, 770, 775, 796, 798, 801, 802, 803], "union": [1, 9, 98, 110, 111, 112, 153, 156, 159, 166, 169, 173, 184, 195, 207, 236, 253, 271, 272, 273, 300, 305, 306, 340, 345, 346, 350, 352, 407, 513, 553, 602, 639, 641, 645, 646, 698, 709, 719, 727, 740, 746, 762, 774, 780], "float": [1, 8, 9, 39, 43, 46, 70, 71, 85, 89, 91, 92, 93, 96, 115, 121, 127, 133, 141, 184, 200, 205, 209, 222, 237, 239, 244, 246, 247, 248, 251, 274, 288, 290, 295, 297, 298, 299, 303, 312, 324, 326, 331, 333, 334, 335, 338, 360, 368, 376, 381, 386, 394, 402, 437, 481, 482, 483, 484, 494, 495, 501, 503, 504, 505, 506, 507, 511, 516, 517, 518, 519, 531, 532, 539, 541, 542, 543, 544, 545, 546, 550, 570, 571, 572, 573, 583, 584, 590, 592, 593, 594, 595, 596, 600, 605, 606, 607, 608, 618, 619, 625, 627, 628, 629, 630, 631, 636, 641, 661, 662, 674, 675, 688, 689, 697, 708, 718, 728, 743, 748, 750, 755, 763, 777, 782, 784, 789, 795, 799, 800, 801, 802, 804, 805], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 337, 338, 340, 342, 343, 346, 348, 349, 357, 358, 359, 360, 365, 366, 367, 368, 373, 374, 375, 376, 380, 383, 384, 385, 386, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 652, 653, 654, 656, 657, 659, 660, 662, 663, 664, 665, 667, 668, 669, 671, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 685, 686, 687, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 810, 811, 812, 813, 815, 816], "type": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 302, 303, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 337, 338, 340, 342, 343, 345, 346, 357, 358, 359, 360, 365, 366, 367, 368, 373, 374, 375, 376, 380, 383, 384, 385, 386, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 652, 653, 654, 656, 657, 659, 660, 662, 663, 664, 665, 667, 668, 669, 671, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 685, 686, 687, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 810, 811, 812, 815, 816], "kernel": [7, 17, 21, 25, 48, 49, 50, 51, 52, 54, 62, 110, 114, 133, 139, 140, 141, 158, 164, 173, 182, 184, 193, 207, 351, 353, 354, 369, 370, 377, 436, 437, 445, 454, 464, 472, 661, 674, 688, 697, 718, 794], "bandwidth": [7, 17, 21, 25, 48, 49, 51, 52, 54, 114, 133, 141, 158, 164, 353, 354, 369, 370, 377, 437, 445, 454, 464, 472, 645, 661, 674, 688], "autocorrel": [7, 25, 48, 62, 110, 114, 158, 164, 173, 182, 184, 193, 207, 343, 353, 369, 377, 688, 697, 718], "hac": [7, 25, 48, 50, 51, 52, 54, 133, 137, 351, 377, 437, 445, 454, 464, 472, 674], "name": [7, 17, 21, 25, 28, 48, 54, 62, 80, 110, 111, 133, 142, 158, 164, 173, 182, 184, 186, 193, 195, 197, 207, 218, 230, 258, 283, 320, 342, 345, 346, 353, 361, 369, 377, 387, 395, 403, 410, 423, 427, 429, 437, 445, 454, 456, 464, 472, 479, 515, 555, 569, 604, 641, 645, 646, 661, 674, 688, 694, 697, 699, 702, 705, 708, 710, 712, 715, 718, 720, 723, 796, 801], "see": [7, 17, 21, 25, 48, 49, 51, 54, 62, 109, 110, 112, 114, 158, 173, 184, 195, 207, 351, 429, 437, 445, 454, 456, 464, 472, 504, 505, 506, 542, 544, 545, 593, 594, 595, 628, 629, 630, 645, 699, 710, 720, 727, 740, 762, 774], "note": [7, 16, 17, 19, 20, 21, 23, 24, 25, 27, 34, 48, 52, 57, 62, 67, 71, 80, 83, 98, 100, 108, 110, 111, 114, 115, 121, 127, 133, 139, 140, 141, 152, 155, 158, 164, 171, 172, 173, 175, 179, 181, 182, 183, 186, 190, 192, 193, 194, 195, 197, 200, 202, 204, 205, 206, 207, 209, 213, 215, 221, 222, 230, 234, 236, 242, 253, 271, 272, 273, 274, 282, 283, 287, 293, 300, 305, 306, 307, 308, 310, 312, 320, 323, 329, 340, 343, 346, 348, 350, 351, 352, 353, 361, 369, 377, 387, 395, 403, 407, 413, 428, 429, 431, 434, 435, 436, 437, 439, 442, 443, 444, 445, 447, 450, 451, 452, 454, 460, 461, 463, 464, 466, 469, 470, 471, 472, 474, 477, 478, 481, 482, 483, 484, 486, 487, 489, 490, 491, 493, 499, 502, 504, 505, 506, 513, 516, 517, 518, 519, 521, 522, 524, 525, 526, 527, 529, 537, 540, 542, 544, 545, 553, 570, 571, 572, 573, 575, 576, 578, 579, 580, 582, 588, 591, 593, 594, 595, 602, 605, 606, 607, 608, 610, 611, 613, 614, 615, 617, 623, 626, 628, 629, 630, 639, 645, 651, 655, 658, 661, 666, 670, 674, 680, 684, 688, 694, 695, 699, 701, 703, 705, 706, 710, 713, 715, 716, 720, 722, 724, 727, 728, 739, 740, 746, 750, 754, 762, 763, 774, 780, 784, 788, 795], "avail": [7, 48, 51, 54, 62, 110, 113, 114, 141, 158, 173, 182, 184, 193, 195, 207, 343, 346, 349, 352, 361, 436, 499, 537, 588, 623, 643, 645, 646, 649], "bartlett": [7, 17, 21, 25, 48, 50, 51, 114, 133, 139, 141, 164, 343, 351, 353, 369, 445, 454, 464, 472, 645, 661, 674, 688], "non": [7, 16, 20, 48, 49, 51, 56, 57, 110, 114, 133, 343, 353, 369, 377, 428, 433, 436, 441, 444, 449, 452, 458, 463, 468, 471, 476, 479, 490, 491, 515, 526, 527, 569, 579, 580, 604, 614, 615, 641, 645], "neg": [7, 21, 110, 111, 133, 353, 369, 377, 641, 649], "integ": [7, 17, 21, 25, 346, 353, 369, 377, 429, 445, 454, 464, 472, 651], "If": [7, 16, 19, 20, 21, 23, 52, 58, 59, 62, 80, 109, 110, 114, 115, 121, 127, 133, 142, 158, 164, 179, 184, 190, 195, 202, 205, 209, 213, 221, 230, 242, 258, 282, 283, 293, 310, 320, 329, 342, 343, 345, 351, 352, 353, 369, 377, 403, 407, 429, 434, 437, 442, 445, 450, 452, 454, 460, 464, 469, 472, 477, 491, 527, 555, 580, 615, 641, 645, 649, 651, 661, 666, 670, 674, 683, 687, 688, 693, 694, 695, 699, 703, 705, 706, 708, 710, 713, 715, 716, 720, 724, 746, 780, 801, 812, 815], "optim": [7, 20, 21, 48, 54, 110, 114, 164, 184, 194, 195, 200, 343, 661, 674, 688], "iv": [7, 54, 56, 109, 110, 112, 113, 114, 343, 643, 647, 648, 649, 655, 658, 661, 674, 694, 701, 705], "kernel_weight_bartlett": [7, 133, 164, 674], "kernel_weight_parzen": [7, 133, 164, 674], "kernel_weight_quadratic_spectr": [7, 133, 164, 674], "portfolio": [16, 19, 20, 23, 24, 27, 34, 50, 51, 52, 722], "factor": [16, 19, 20, 23, 24, 27, 28, 30, 33, 40, 41, 48, 51, 54, 56, 57, 111, 345, 643, 644, 645, 722], "risk_fre": [16, 19, 20, 23, 48, 49], "sigma": [16, 19, 50, 52, 111, 343, 351, 353, 361, 369, 387, 395, 491, 527, 580, 615, 645, 646, 649, 651, 655, 658, 661, 666, 670, 674, 683, 684, 687, 693, 694, 699, 705, 715, 720, 726, 740, 754, 761, 774, 788], "linear": [16, 20, 24, 28, 48, 51, 54, 55, 56, 57, 98, 114, 253, 305, 340, 346, 513, 553, 602, 639, 643, 644, 645, 705], "array_lik": [16, 19, 20, 21, 23, 24, 27, 142, 171, 175, 179, 182, 186, 190, 193, 197, 202, 205, 209, 213, 242, 293, 329, 428, 431, 434, 435, 436, 439, 442, 443, 444, 447, 450, 451, 452, 456, 460, 461, 463, 466, 469, 470, 471, 474, 477, 478, 499, 537, 588, 623, 694, 699, 701, 703, 705, 713, 715, 720, 722, 724], "test": [16, 17, 19, 20, 21, 23, 24, 25, 27, 34, 48, 50, 51, 52, 54, 56, 80, 98, 111, 113, 217, 220, 221, 230, 236, 253, 270, 271, 272, 273, 282, 283, 300, 305, 306, 307, 308, 310, 320, 340, 345, 346, 347, 349, 350, 352, 435, 443, 451, 461, 470, 478, 479, 490, 491, 513, 515, 525, 526, 527, 553, 569, 579, 580, 602, 604, 614, 615, 639, 644, 645, 648, 726, 727, 739, 740, 762, 774, 796, 800, 801, 802, 804, 805], "nob": [16, 20, 24, 28, 54, 57, 68, 100, 109, 111, 115, 121, 127, 133, 142, 154, 157, 158, 164, 167, 170, 171, 172, 179, 182, 183, 190, 193, 194, 200, 202, 205, 206, 213, 220, 242, 258, 270, 293, 311, 329, 361, 377, 380, 403, 434, 442, 450, 460, 469, 477, 479, 480, 487, 499, 515, 522, 537, 555, 569, 576, 588, 604, 611, 623, 645, 651, 655, 658, 661, 666, 670, 674, 683, 687, 688, 693, 701, 722, 726, 761], "nportfolio": [16, 19, 20, 24], "price": [16, 20, 24, 34, 48, 49, 51, 52, 54, 56, 111, 644], "nfactor": [16, 20, 24], "option": [16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 48, 49, 51, 52, 54, 57, 62, 98, 100, 110, 115, 121, 127, 133, 142, 152, 153, 155, 156, 158, 159, 164, 165, 166, 168, 169, 173, 184, 193, 195, 207, 242, 253, 293, 305, 329, 340, 343, 347, 348, 351, 352, 403, 407, 409, 410, 413, 416, 423, 427, 428, 429, 430, 431, 436, 437, 438, 439, 444, 445, 446, 447, 452, 454, 455, 456, 463, 464, 465, 466, 471, 472, 473, 474, 499, 513, 535, 537, 553, 588, 602, 623, 639, 647, 651, 653, 655, 657, 658, 660, 661, 664, 666, 668, 670, 672, 674, 677, 680, 684, 688, 694, 695, 696, 697, 698, 701, 705, 706, 707, 708, 709, 710, 715, 716, 717, 718, 719, 726, 746, 758, 780, 796, 801, 802], "whether": [16, 17, 19, 20, 21, 23, 25, 48, 50, 54, 57, 62, 68, 76, 98, 110, 111, 114, 115, 121, 127, 133, 142, 152, 155, 158, 164, 168, 173, 184, 194, 195, 207, 220, 227, 236, 242, 253, 270, 271, 273, 279, 293, 305, 306, 307, 308, 311, 317, 329, 340, 343, 347, 351, 353, 361, 369, 377, 387, 395, 403, 407, 429, 431, 437, 439, 445, 447, 452, 453, 454, 456, 459, 462, 463, 464, 466, 472, 474, 499, 513, 537, 553, 588, 602, 623, 639, 649, 651, 680, 684, 688, 697, 718, 726, 732, 739, 746, 761, 767, 780], "risk": [16, 19, 20, 23, 24, 28, 40, 41, 42, 48, 49, 50, 51, 52], "free": [16, 19, 20, 23, 48, 49, 50, 52], "rate": [16, 19, 20, 23, 48, 49, 50, 52, 111, 346, 645], "should": [16, 19, 20, 23, 51, 57, 62, 110, 111, 112, 142, 193, 205, 343, 345, 346, 347, 403, 409, 428, 429, 431, 436, 439, 444, 445, 447, 452, 454, 456, 463, 464, 466, 471, 472, 474, 641, 643, 649, 727, 740, 762, 774], "from": [16, 19, 20, 23, 27, 28, 48, 49, 51, 52, 54, 56, 57, 62, 68, 69, 73, 83, 98, 100, 104, 108, 109, 110, 111, 112, 113, 114, 139, 140, 141, 175, 179, 186, 190, 197, 202, 209, 213, 216, 217, 218, 220, 224, 234, 242, 253, 270, 276, 282, 287, 293, 300, 305, 307, 308, 310, 311, 314, 323, 329, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 361, 408, 429, 431, 434, 437, 439, 442, 445, 447, 450, 454, 456, 460, 464, 466, 469, 472, 474, 477, 490, 491, 493, 502, 513, 525, 526, 527, 529, 540, 553, 579, 580, 582, 591, 602, 614, 615, 617, 626, 639, 645, 646, 647, 648, 649, 682, 683, 686, 687, 692, 693, 699, 701, 703, 710, 713, 720, 722, 724, 726, 746, 750, 754, 761, 780, 784, 788, 807, 815], "along": [16, 19, 20, 23, 48, 221, 645, 647], "other": [16, 19, 20, 23, 48, 49, 55, 57, 100, 104, 109, 110, 111, 112, 113, 172, 183, 194, 206, 217, 343, 347, 348, 349, 350, 351, 352, 429, 445, 452, 454, 459, 464, 472, 515, 535, 641, 645, 647, 697, 718], "premia": [16, 19, 20, 23, 24, 28, 40, 41, 42, 48, 49, 50, 51, 52], "ar": [16, 19, 20, 21, 23, 24, 25, 34, 48, 49, 50, 51, 52, 54, 55, 56, 57, 62, 67, 80, 98, 100, 104, 109, 110, 111, 112, 113, 114, 133, 141, 158, 173, 175, 179, 181, 182, 184, 186, 190, 192, 193, 195, 197, 202, 204, 207, 209, 213, 215, 217, 218, 221, 230, 236, 242, 253, 282, 283, 293, 300, 305, 307, 308, 310, 320, 329, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 361, 369, 387, 395, 403, 407, 429, 434, 436, 437, 442, 445, 450, 452, 453, 454, 456, 459, 460, 462, 464, 469, 472, 477, 499, 502, 513, 515, 525, 537, 540, 553, 588, 591, 602, 623, 626, 639, 641, 645, 646, 647, 648, 649, 688, 694, 695, 697, 703, 705, 706, 708, 710, 713, 715, 716, 718, 724, 727, 739, 740, 746, 754, 762, 774, 780, 788], "assum": [16, 19, 20, 23, 48, 52, 110, 111, 114, 158, 182, 184, 193, 195, 221, 343, 403, 428, 429, 431, 436, 439, 444, 445, 447, 452, 454, 456, 463, 464, 466, 471, 472, 474, 645, 646, 647, 649, 651, 666, 670, 674, 710], "excess": [16, 19, 20, 23, 24, 51, 52], "correct": [16, 19, 20, 23, 52, 54, 111, 114, 343, 454, 472, 490, 525, 526, 579, 614, 645], "posit": [16, 17, 19, 21, 25, 52, 139, 140, 141, 182, 221, 343, 705], "definit": [16, 19, 182, 343, 352, 504, 505, 506, 542, 544, 545, 593, 594, 595, 628, 629, 630, 705], "residu": [16, 19, 28, 39, 52, 65, 67, 68, 79, 85, 89, 90, 93, 99, 109, 110, 111, 115, 120, 121, 126, 127, 132, 133, 138, 158, 163, 180, 181, 191, 192, 203, 204, 214, 215, 220, 229, 236, 239, 244, 245, 248, 257, 270, 281, 282, 290, 295, 296, 299, 300, 306, 307, 308, 309, 310, 311, 319, 326, 331, 332, 335, 341, 343, 346, 351, 353, 358, 361, 366, 369, 374, 377, 384, 387, 392, 395, 400, 428, 429, 431, 436, 439, 444, 445, 447, 452, 454, 456, 463, 464, 466, 471, 472, 474, 479, 487, 490, 491, 495, 501, 502, 507, 514, 515, 522, 525, 526, 527, 532, 539, 540, 546, 552, 554, 569, 576, 579, 580, 584, 590, 591, 596, 603, 604, 611, 614, 615, 619, 625, 626, 631, 638, 640, 647, 649, 651, 655, 658, 661, 666, 670, 674, 682, 684, 686, 692, 694, 699, 705, 715, 720, 726, 727, 734, 740, 743, 748, 749, 750, 751, 754, 760, 761, 762, 769, 774, 777, 782, 783, 784, 785, 788, 791], "covari": [16, 17, 19, 21, 25, 28, 31, 32, 34, 48, 49, 50, 51, 52, 54, 62, 68, 72, 73, 74, 75, 76, 80, 111, 112, 113, 154, 157, 158, 160, 161, 162, 164, 167, 170, 173, 184, 195, 207, 217, 220, 223, 224, 225, 226, 227, 230, 258, 259, 270, 275, 276, 277, 278, 279, 283, 307, 311, 313, 314, 315, 316, 317, 320, 349, 350, 352, 429, 436, 437, 445, 454, 464, 472, 479, 485, 491, 515, 520, 527, 555, 556, 569, 574, 580, 604, 609, 615, 641, 644, 647, 648, 682, 683, 684, 686, 687, 688, 689, 692, 693, 694, 697, 699, 705, 708, 715, 718, 720, 726, 729, 730, 731, 732, 740, 751, 754, 761, 764, 765, 766, 767, 774, 785, 788], "suitabl": [16, 20], "trade": [16, 20, 24, 48, 50, 51, 54, 56, 643], "implement": [16, 20, 24, 34, 48, 50, 51, 52, 80, 111, 221, 230, 283, 307, 308, 320, 343, 346, 347, 349, 350, 352, 361, 407, 416, 436, 491, 527, 580, 615, 643, 645, 649, 694, 699, 705, 715, 720], "2": [16, 21, 28, 43, 49, 50, 51, 52, 56, 57, 68, 70, 91, 92, 98, 100, 104, 109, 110, 111, 112, 114, 115, 121, 127, 140, 141, 155, 158, 164, 175, 184, 186, 197, 209, 220, 246, 247, 253, 258, 265, 266, 270, 297, 298, 300, 305, 306, 308, 311, 333, 334, 340, 342, 343, 345, 346, 347, 348, 350, 352, 361, 387, 395, 403, 407, 429, 445, 452, 454, 464, 472, 513, 553, 555, 562, 563, 564, 565, 602, 639, 641, 643, 644, 645, 646, 647, 648, 651, 666, 674, 688, 697, 708, 718, 727, 740, 750, 754, 762, 774, 784, 788, 813], "step": [16, 21, 50, 51, 52, 54, 56, 110, 111, 114, 184, 220, 255, 643, 645, 646, 647, 649, 708], "load": [16, 19, 20, 23, 24, 27, 28, 30, 33, 48, 49, 50, 51, 52, 98, 110, 111, 112, 114, 175, 186, 197, 209, 253, 305, 340, 345, 350, 513, 553, 602, 639, 645, 646, 647, 648, 722], "first": [16, 19, 23, 27, 48, 50, 51, 52, 54, 56, 111, 112, 114, 142, 184, 216, 217, 218, 220, 221, 231, 270, 284, 306, 345, 350, 352, 403, 409, 412, 444, 445, 643, 645, 647, 649, 699, 708, 710, 720], "stage": [16, 48, 52, 54, 56, 111, 112, 114, 171, 216, 217, 218, 220, 231, 270, 284, 306, 643, 645, 648, 694], "r_": [16, 20, 24, 50, 52, 343, 351, 649], "c_i": [16, 108], "f_t": [16, 20, 24], "beta_i": [16, 24, 50, 307, 645, 694, 705, 715], "epsilon_": [16, 20, 24, 52, 343, 346, 350, 351, 353, 436, 444, 452, 463, 471, 649, 680, 688, 694, 705, 715], "where": [16, 20, 24, 48, 50, 51, 52, 54, 57, 98, 108, 109, 110, 111, 112, 114, 115, 121, 127, 133, 141, 152, 155, 164, 182, 184, 193, 200, 205, 217, 221, 236, 253, 258, 271, 272, 273, 282, 300, 305, 306, 307, 308, 310, 340, 342, 343, 345, 346, 347, 350, 351, 353, 361, 369, 387, 395, 428, 431, 435, 439, 443, 447, 451, 452, 456, 461, 466, 470, 471, 474, 478, 490, 491, 513, 525, 526, 527, 553, 555, 579, 580, 602, 614, 615, 639, 645, 646, 647, 648, 649, 651, 655, 658, 661, 666, 670, 674, 680, 684, 688, 694, 699, 703, 705, 710, 713, 715, 720, 724, 727, 739, 740, 746, 750, 754, 762, 774, 780, 784, 788, 795], "i": [16, 20, 24, 49, 52, 54, 57, 98, 104, 108, 109, 111, 115, 121, 127, 133, 139, 140, 141, 152, 155, 164, 193, 205, 253, 305, 306, 307, 308, 340, 343, 346, 350, 351, 353, 369, 387, 428, 471, 645, 646, 649, 680, 688, 694, 705, 715, 727, 740, 762, 774], "requir": [16, 48, 50, 51, 54, 55, 110, 114, 175, 186, 197, 209, 221, 272, 300, 343, 345, 346, 347, 350, 431, 439, 445, 447, 452, 454, 456, 463, 466, 474, 645, 647, 649, 703, 713, 724, 740, 746, 774, 780], "allow": [16, 48, 49, 50, 54, 62, 110, 111, 112, 114, 158, 182, 184, 193, 346, 347, 348, 351, 645, 647, 648, 649, 680, 688, 697, 710, 718], "econom": [16, 50, 111, 644, 645], "interest": [16, 49, 57, 109, 111, 343, 350, 645], "These": [16, 48, 54, 55, 83, 110, 111, 114, 234, 287, 323, 343, 345, 346, 352, 452, 493, 502, 529, 540, 582, 591, 617, 626, 645, 646, 647, 649, 703, 713, 724, 746, 750, 780, 784], "report": [16, 52, 54, 110, 111, 112, 343, 346, 348, 352, 436, 645, 649], "second": [16, 19, 23, 27, 48, 50, 51, 52, 109, 110, 111, 221, 343, 351, 645, 699, 710, 720], "bar": [16, 52, 155, 193, 200, 236, 343, 351, 428, 482, 484, 517, 519, 571, 573, 606, 608, 649, 739], "r": [16, 28, 43, 48, 49, 51, 52, 54, 68, 70, 91, 92, 109, 110, 111, 112, 114, 217, 220, 246, 247, 258, 265, 266, 270, 297, 298, 306, 308, 311, 333, 334, 343, 345, 346, 347, 348, 349, 350, 352, 555, 562, 563, 564, 565, 644, 645, 646, 647, 648, 695, 706, 716, 754, 788], "_i": [16, 24, 34, 115, 121, 127, 133, 164, 200, 236, 306, 307, 353, 387, 482, 484, 517, 519, 571, 573, 606, 608, 688, 740, 774], "lambda_0": [16, 50], "hat": [16, 24, 34, 50, 52, 115, 121, 127, 133, 171, 182, 193, 200, 205, 236, 271, 273, 282, 300, 306, 307, 308, 310, 343, 351, 353, 361, 369, 387, 395, 436, 482, 483, 484, 491, 517, 518, 519, 527, 571, 572, 573, 580, 606, 607, 608, 615, 645, 649, 651, 666, 674, 688, 694, 705, 715, 727, 740, 750, 754, 762, 774, 784, 788], "beta": [16, 20, 28, 48, 52, 57, 109, 171, 182, 193, 200, 205, 343, 346, 350, 351, 428, 436, 444, 452, 463, 471, 482, 483, 484, 491, 517, 518, 519, 527, 571, 572, 573, 580, 606, 607, 608, 615, 645, 649, 694, 695, 705, 706, 715, 716], "prime": [16, 50, 52, 115, 121, 133, 300, 343, 351, 428, 436, 444, 452, 463, 471, 645, 649, 688, 754, 788], "lambda": [16, 20, 28, 40, 50, 52], "eta_i": [16, 308], "averag": [16, 24, 50, 52, 109, 111, 114, 184, 200, 343, 346, 350, 351, 407, 416, 428, 482, 504, 517, 542, 571, 593, 606, 628, 645, 649, 708, 739, 754, 788], "includ": [16, 28, 33, 48, 49, 52, 68, 82, 110, 111, 112, 115, 121, 127, 133, 171, 175, 176, 178, 182, 186, 187, 189, 193, 197, 198, 201, 205, 209, 210, 212, 217, 220, 233, 236, 242, 258, 270, 286, 293, 311, 322, 329, 342, 343, 345, 347, 348, 350, 351, 352, 431, 436, 439, 447, 452, 453, 459, 462, 466, 474, 483, 486, 487, 489, 490, 491, 499, 505, 515, 518, 521, 522, 524, 525, 526, 527, 530, 537, 543, 544, 555, 569, 572, 575, 576, 578, 579, 580, 588, 594, 607, 610, 611, 613, 614, 615, 623, 629, 641, 645, 649, 661, 674, 688, 694, 699, 710, 720, 746, 750, 780, 784], "gl": [16, 54, 111, 346, 643, 646, 647, 648, 649, 651, 666, 670, 674, 694, 697, 699, 705, 708, 715, 718, 720, 726, 727, 738, 740, 761, 762, 773, 774], "alpha": [16, 24, 28, 34, 48, 50, 52, 114, 205, 209, 343, 351, 722], "eta": [16, 52, 343, 649, 750, 754, 784, 788], "formula": [16, 19, 20, 23, 24, 27, 50, 54, 98, 113, 171, 175, 179, 182, 186, 190, 193, 197, 202, 205, 209, 213, 242, 253, 293, 305, 329, 340, 349, 350, 352, 428, 431, 434, 436, 439, 442, 444, 447, 450, 452, 456, 460, 463, 466, 469, 471, 474, 477, 499, 513, 537, 553, 588, 602, 623, 639, 648, 649, 694, 699, 703, 705, 710, 713, 715, 720, 724, 746, 780], "cov_typ": [17, 21, 25, 48, 49, 50, 51, 62, 68, 110, 111, 112, 114, 158, 173, 184, 195, 207, 216, 220, 270, 311, 346, 350, 429, 436, 437, 445, 454, 456, 464, 472, 645, 646, 647, 648, 697, 708, 718], "cov_config": [17, 21, 25, 62, 68, 158, 173, 184, 195, 207, 216, 220, 270, 311, 429, 445, 454, 464, 472, 651, 655, 658, 661, 666, 670, 674, 697, 708, 718, 726, 761], "debia": [17, 21, 25, 158, 351, 353, 361, 369, 377, 387, 395, 645, 651, 795], "adjust": [17, 21, 25, 62, 68, 76, 92, 115, 120, 121, 126, 127, 132, 133, 138, 152, 155, 163, 164, 168, 173, 184, 195, 205, 207, 220, 227, 242, 247, 258, 266, 270, 279, 293, 298, 311, 317, 329, 334, 343, 346, 348, 351, 353, 361, 369, 387, 395, 429, 437, 445, 454, 464, 472, 499, 537, 588, 623, 645, 649, 651, 666, 670, 674, 680, 684, 688, 697, 708, 718, 726, 732, 746, 761, 767, 780], "addit": [17, 21, 25, 54, 62, 110, 111, 114, 173, 179, 182, 184, 186, 190, 193, 194, 195, 197, 202, 207, 213, 346, 347, 353, 361, 369, 387, 395, 429, 434, 442, 445, 450, 454, 460, 464, 469, 472, 477, 645, 648, 697, 703, 705, 708, 710, 713, 718, 724], "specif": [17, 21, 25, 48, 50, 62, 80, 111, 112, 113, 141, 158, 173, 179, 184, 190, 195, 202, 207, 213, 230, 242, 283, 293, 320, 329, 346, 349, 350, 351, 429, 431, 434, 439, 442, 445, 447, 450, 452, 454, 456, 460, 463, 464, 466, 469, 472, 474, 477, 645, 646, 649, 701, 703, 713, 722, 724, 746, 780], "linearfactormodelresult": [17, 25], "result": [17, 21, 25, 48, 51, 54, 62, 68, 95, 111, 113, 173, 184, 195, 205, 207, 345, 346, 348, 349, 350, 351, 429, 431, 437, 439, 445, 447, 452, 454, 456, 463, 464, 466, 472, 474, 645, 646, 648, 697, 708, 718], "statist": [17, 20, 21, 25, 28, 34, 42, 47, 48, 49, 50, 51, 54, 68, 80, 97, 98, 109, 110, 111, 112, 114, 200, 217, 220, 221, 230, 236, 252, 253, 258, 261, 270, 271, 272, 273, 282, 283, 300, 304, 305, 306, 307, 308, 310, 311, 320, 339, 340, 345, 346, 347, 350, 351, 352, 479, 488, 490, 491, 510, 512, 513, 515, 523, 525, 526, 527, 535, 549, 551, 553, 555, 558, 569, 577, 579, 580, 599, 601, 602, 604, 612, 614, 615, 635, 637, 639, 644, 645, 647, 726, 727, 739, 740, 756, 761, 762, 774, 790, 796, 800, 801, 804, 805], "take": [17, 21, 25, 112, 343, 346, 350, 645], "argument": [17, 21, 25, 48, 49, 54, 57, 110, 111, 158, 182, 186, 193, 194, 197, 346, 351, 645, 646, 697, 705, 710, 718], "parzen": [17, 21, 25, 49, 50, 51, 54, 114, 133, 140, 141, 164, 343, 351, 353, 369, 437, 445, 454, 464, 472, 645, 661, 674, 688], "qs": [17, 21, 25, 50, 114, 133, 141, 164, 353, 369, 445, 454, 464, 472, 645, 661, 674, 688], "quadrat": [17, 21, 25, 50, 51, 54, 80, 114, 133, 141, 164, 230, 283, 320, 343, 351, 353, 369, 645, 661, 674, 688], "spectral": [17, 21, 25, 50, 51, 54, 114, 133, 141, 164, 343, 351, 353, 369, 645, 661, 674, 688], "classmethod": [19, 23, 27, 431, 439, 447, 456, 466, 474, 699, 701, 710, 720, 722], "data": [19, 23, 27, 51, 54, 56, 67, 83, 98, 109, 111, 114, 115, 121, 127, 172, 175, 179, 181, 183, 186, 190, 192, 194, 197, 202, 204, 206, 209, 213, 215, 234, 242, 253, 287, 293, 305, 323, 329, 340, 343, 348, 350, 351, 352, 428, 429, 431, 434, 435, 436, 439, 442, 443, 444, 447, 450, 451, 452, 456, 460, 461, 463, 466, 469, 470, 471, 474, 477, 478, 479, 493, 499, 502, 513, 515, 529, 537, 540, 553, 569, 582, 588, 591, 602, 604, 617, 623, 626, 639, 641, 644, 646, 648, 649, 655, 658, 661, 699, 703, 710, 713, 720, 722, 724, 746, 780, 793, 794], "modifi": [19, 23, 27, 49, 54, 175, 186, 197, 205, 209, 343, 646, 648], "syntax": [19, 23, 27, 57, 112, 175, 186, 197, 209, 347, 431, 439, 447, 466, 474, 645, 646, 647, 648, 699, 710, 720], "describ": [19, 23, 27, 52, 100, 110, 111, 114, 175, 186, 197, 209, 346, 349, 350, 452], "datafram": [19, 23, 27, 30, 31, 37, 38, 44, 47, 49, 54, 57, 58, 59, 69, 71, 72, 98, 100, 101, 102, 104, 109, 111, 112, 142, 149, 175, 179, 186, 190, 197, 202, 209, 213, 217, 222, 223, 242, 253, 261, 263, 264, 267, 269, 274, 275, 293, 305, 312, 313, 329, 340, 346, 347, 352, 380, 403, 405, 408, 409, 411, 414, 416, 424, 425, 431, 434, 439, 442, 447, 450, 456, 460, 466, 469, 474, 477, 480, 481, 485, 499, 513, 516, 520, 535, 537, 553, 558, 560, 561, 566, 568, 570, 574, 588, 602, 605, 609, 623, 634, 639, 641, 645, 646, 647, 695, 699, 703, 706, 710, 713, 716, 720, 724, 728, 729, 737, 746, 749, 751, 760, 763, 764, 772, 780, 783, 785, 791], "contain": [19, 23, 27, 49, 50, 54, 57, 62, 98, 100, 104, 111, 112, 113, 114, 115, 142, 146, 151, 152, 153, 155, 156, 158, 164, 166, 169, 173, 175, 182, 184, 186, 194, 195, 197, 205, 207, 209, 217, 218, 221, 231, 242, 253, 271, 272, 273, 282, 284, 293, 300, 305, 306, 307, 308, 310, 329, 340, 343, 345, 347, 349, 350, 351, 403, 411, 413, 424, 429, 431, 439, 445, 447, 454, 456, 464, 466, 472, 474, 479, 499, 513, 515, 537, 553, 569, 588, 602, 604, 623, 639, 641, 645, 647, 648, 649, 655, 658, 661, 681, 684, 685, 687, 690, 694, 699, 700, 703, 705, 708, 710, 711, 713, 715, 720, 721, 724, 746, 780, 795], "variabl": [19, 23, 27, 49, 54, 56, 57, 58, 59, 62, 68, 70, 77, 100, 101, 102, 104, 108, 109, 114, 115, 121, 127, 133, 142, 171, 175, 182, 184, 186, 193, 197, 205, 209, 217, 218, 221, 236, 272, 282, 300, 306, 307, 308, 310, 343, 345, 347, 350, 351, 352, 353, 361, 369, 377, 387, 395, 403, 407, 409, 412, 420, 427, 428, 429, 431, 435, 436, 439, 443, 444, 445, 447, 451, 452, 454, 456, 461, 463, 464, 466, 470, 471, 472, 474, 478, 482, 483, 484, 490, 499, 504, 505, 517, 518, 519, 526, 537, 542, 544, 571, 572, 573, 579, 588, 593, 594, 606, 607, 608, 614, 623, 628, 629, 641, 644, 645, 646, 647, 648, 649, 651, 666, 670, 674, 694, 699, 701, 703, 705, 708, 710, 713, 715, 720, 722, 724, 746, 754, 780, 788], "instanc": [19, 23, 27, 104, 142, 175, 186, 197, 209, 641, 699, 701, 710, 720, 722], "can": [19, 21, 23, 27, 48, 49, 50, 51, 52, 54, 55, 57, 62, 109, 110, 111, 112, 114, 179, 184, 190, 195, 202, 205, 213, 242, 293, 308, 329, 343, 345, 346, 347, 348, 349, 350, 351, 352, 403, 407, 431, 434, 439, 442, 447, 450, 452, 456, 460, 463, 466, 469, 474, 477, 499, 537, 588, 623, 645, 646, 647, 649, 694, 695, 699, 703, 705, 706, 710, 713, 715, 716, 720, 722, 724, 746, 780], "two": [19, 23, 27, 48, 49, 50, 51, 52, 54, 56, 110, 111, 114, 171, 184, 221, 345, 346, 350, 351, 361, 429, 437, 445, 452, 454, 456, 464, 472, 645, 646, 647, 649, 697, 699, 710, 718, 720, 750, 784], "wai": [19, 23, 27, 48, 49, 54, 62, 110, 114, 158, 168, 173, 182, 184, 193, 207, 343, 351, 361, 413, 429, 445, 452, 454, 464, 471, 472, 645, 697, 699, 710, 718, 720], "specifi": [19, 23, 27, 49, 54, 57, 100, 110, 111, 113, 114, 184, 346, 349, 350, 351, 352, 431, 439, 447, 452, 456, 466, 474, 499, 537, 588, 623, 645, 647, 648, 649, 699, 708, 710, 720, 812], "separ": [19, 23, 27, 49, 57, 98, 253, 305, 340, 343, 513, 553, 602, 639, 646, 647, 649, 694, 715], "exampl": [19, 23, 27, 49, 50, 51, 55, 57, 98, 100, 104, 112, 113, 175, 186, 197, 209, 253, 305, 340, 345, 349, 350, 351, 429, 431, 437, 439, 445, 447, 454, 456, 464, 466, 472, 474, 513, 553, 602, 639, 646, 647, 648, 649, 699, 710, 720, 722], "dataset": [19, 23, 27, 48, 49, 51, 54, 98, 110, 111, 112, 114, 175, 186, 197, 209, 253, 305, 340, 345, 346, 347, 350, 352, 513, 553, 602, 639, 641, 643, 645, 646, 647, 648, 722], "import": [19, 23, 27, 51, 55, 57, 98, 100, 104, 109, 111, 112, 114, 175, 186, 197, 209, 253, 305, 340, 345, 346, 347, 349, 350, 351, 352, 429, 431, 437, 439, 445, 447, 454, 456, 464, 466, 472, 474, 513, 553, 602, 639, 645, 646, 647, 648, 699, 710, 720, 722], "french": [19, 23, 27, 48, 49, 50, 51, 645, 722], "s1m1": [19, 23, 27, 48, 49], "s1m5": [19, 23, 27, 48, 49], "s3m3": [19, 23, 27, 48, 49], "s5m1": [19, 23, 27, 48, 49], "s5m5": [19, 23, 27, 48, 49], "mktrf": [19, 23, 27, 48, 49, 51, 645, 722], "smb": [19, 23, 27, 48, 49, 51], "hml": [19, 23, 27, 48, 49, 51], "mod": [19, 23, 27, 48, 49, 51, 57, 109, 111, 112, 114, 175, 186, 197, 209, 345, 346, 347, 350, 429, 431, 437, 439, 445, 447, 454, 456, 464, 466, 472, 474, 513, 553, 602, 639, 645, 646, 647, 648, 699, 710, 720, 722], "s3m1": [19, 23, 27, 48, 49], "s3m5": [19, 23, 27, 48, 49], "gmm": [20, 21, 50, 51, 54, 56, 113, 182, 183, 184, 186, 193, 195, 197, 200, 220, 221, 235, 255, 643, 644, 648, 705, 710, 726, 757, 758, 759], "left": [20, 49, 52, 221, 343, 351, 428, 436, 444, 452, 463, 471, 645, 647, 649, 694, 705, 715, 740, 774], "begin": [20, 52, 343, 351, 647, 649, 694, 705, 715], "arrai": [20, 49, 51, 52, 54, 98, 110, 114, 139, 140, 141, 142, 158, 168, 179, 190, 202, 213, 242, 253, 293, 305, 329, 340, 346, 353, 361, 369, 377, 387, 395, 403, 408, 411, 413, 424, 434, 442, 450, 454, 460, 469, 477, 499, 513, 537, 553, 588, 602, 623, 639, 645, 649, 651, 655, 658, 661, 670, 694, 701, 703, 705, 713, 715, 722, 724, 746, 780, 793, 794, 795], "c": [20, 52, 98, 221, 253, 305, 340, 343, 351, 513, 553, 602, 639, 649], "t": [20, 28, 38, 42, 47, 48, 49, 51, 52, 54, 68, 71, 88, 97, 109, 110, 111, 112, 114, 220, 222, 243, 252, 258, 269, 270, 274, 294, 304, 311, 312, 330, 339, 345, 346, 347, 350, 351, 352, 353, 369, 436, 437, 479, 481, 500, 512, 515, 516, 538, 551, 555, 568, 569, 570, 589, 601, 604, 605, 624, 637, 645, 646, 647, 648, 649, 726, 728, 747, 756, 761, 763, 781, 790], "otim": [20, 52, 645, 649, 658, 684, 694, 715], "f_": [20, 52, 273, 310, 343, 490, 491, 525, 526, 527, 579, 580, 614, 615], "mu": [20, 52, 649], "end": [20, 52, 343, 346, 351, 352, 647, 649, 694, 705, 715], "right": [20, 49, 52, 343, 351, 428, 436, 444, 452, 463, 471, 645, 647, 649, 694, 705, 715, 740, 774], "1_": [20, 52, 343], "n": [20, 52, 100, 104, 111, 115, 121, 127, 133, 141, 152, 155, 164, 193, 205, 236, 271, 272, 273, 282, 300, 306, 308, 310, 343, 345, 346, 350, 351, 352, 353, 361, 369, 387, 395, 645, 649, 680, 688, 727, 739, 740, 762, 774, 793, 794, 795], "object": [20, 21, 48, 110, 114, 195, 200, 221, 231, 271, 272, 273, 282, 284, 300, 306, 307, 308, 310, 342, 345, 407, 645, 696, 699, 707, 710, 717, 720, 806, 810, 811, 816], "function": [20, 21, 48, 52, 54, 104, 110, 111, 112, 164, 182, 184, 186, 193, 195, 197, 200, 343, 350, 351, 352, 353, 369, 701, 705, 710, 722], "usual": [20, 49, 52, 109, 110, 111, 114, 343, 345, 346, 350, 352, 645, 647], "j": [20, 28, 34, 48, 49, 50, 51, 110, 111, 133, 164, 220, 221, 236, 308, 343, 353, 369, 644, 645, 649, 680, 688, 705, 726, 727, 739, 762], "use_cu": [21, 48, 51], "disp": [21, 48], "10": [21, 48, 109, 110, 111, 258, 342, 345, 346, 347, 555, 644, 645, 647], "max_it": 21, "1000": [21, 57, 111], "start": [21, 109, 114, 193, 194, 195, 282, 310], "opt_opt": [21, 194, 195], "befor": [21, 54, 58, 59, 110, 152, 155, 164, 168, 242, 293, 329, 345, 346, 499, 537, 588, 623, 645, 680, 684, 688, 746, 780], "weight": [21, 48, 50, 52, 54, 57, 62, 67, 68, 98, 99, 113, 114, 133, 139, 140, 141, 152, 153, 155, 156, 158, 164, 165, 166, 168, 169, 171, 175, 181, 182, 183, 184, 186, 192, 193, 197, 200, 204, 205, 209, 215, 216, 220, 221, 253, 254, 255, 256, 257, 270, 305, 309, 311, 340, 341, 345, 346, 348, 351, 353, 369, 407, 413, 416, 428, 429, 431, 436, 439, 444, 447, 452, 456, 463, 466, 471, 474, 479, 482, 483, 484, 504, 505, 506, 513, 514, 515, 517, 518, 519, 542, 544, 545, 553, 554, 569, 571, 572, 573, 593, 594, 595, 602, 603, 604, 606, 607, 608, 628, 629, 630, 639, 640, 641, 645, 647, 651, 655, 658, 661, 666, 674, 680, 681, 683, 684, 685, 687, 688, 690, 693, 694, 699, 705, 708, 710, 715, 720, 726, 750, 754, 757, 758, 759, 760, 761, 784, 788, 791], "matrix": [21, 48, 49, 54, 98, 100, 108, 109, 111, 114, 115, 121, 127, 133, 152, 155, 158, 164, 165, 168, 172, 179, 182, 183, 184, 190, 193, 194, 200, 202, 206, 213, 220, 221, 253, 254, 255, 256, 282, 300, 305, 310, 340, 343, 431, 439, 447, 452, 456, 463, 466, 474, 513, 553, 602, 639, 644, 645, 649, 651, 655, 658, 661, 666, 670, 674, 680, 682, 683, 684, 686, 687, 688, 692, 693, 694, 695, 705, 706, 708, 715, 716, 726, 740, 757, 774], "continu": [21, 51, 54, 56, 57, 62, 100, 102, 104, 108, 114, 193, 645], "updat": [21, 51, 54, 56, 114, 193], "number": [21, 28, 36, 48, 49, 50, 54, 57, 68, 77, 80, 86, 98, 108, 110, 111, 115, 141, 142, 148, 179, 184, 190, 202, 213, 220, 221, 230, 240, 253, 270, 272, 282, 283, 291, 300, 305, 310, 311, 320, 327, 340, 343, 346, 347, 350, 351, 352, 353, 361, 369, 387, 395, 403, 405, 417, 418, 419, 420, 479, 486, 487, 490, 491, 497, 513, 515, 521, 522, 526, 527, 534, 553, 569, 575, 576, 579, 580, 586, 602, 604, 610, 611, 614, 615, 621, 639, 641, 645, 647, 649, 651, 658, 697, 699, 708, 710, 718, 720, 726, 738, 744, 761, 773, 778, 795], "correspond": [21, 52, 114, 179, 190, 202, 213, 221, 242, 258, 293, 329, 342, 343, 409, 411, 424, 434, 442, 450, 460, 469, 477, 555, 649, 655, 658, 661, 703, 713, 724, 746, 780, 812], "standard": [21, 28, 41, 44, 48, 49, 51, 54, 68, 94, 110, 142, 175, 186, 197, 209, 217, 220, 249, 258, 267, 270, 301, 311, 336, 346, 347, 348, 350, 431, 436, 437, 439, 447, 454, 466, 474, 479, 508, 515, 547, 555, 566, 569, 597, 604, 632, 645, 646, 699, 710, 720, 726, 752, 761, 786], "effici": [21, 48, 50, 51, 52, 110, 111, 184, 221, 343, 346, 350, 351, 645, 647, 648, 727, 740, 762, 774], "higher": 21, "iter": [21, 109, 110, 114, 184, 194, 220, 413, 647, 697, 708, 718, 726, 761, 815], "until": [21, 110, 184, 349, 357, 365, 373, 383, 391, 399, 413, 646, 647, 697, 718], "converg": [21, 110, 114, 184, 413, 647, 697, 708, 718], "up": [21, 54, 62, 346, 361], "given": [21, 109, 351, 428, 436, 444, 463, 471, 705, 812], "between": [21, 48, 49, 54, 55, 56, 57, 110, 111, 184, 217, 221, 272, 282, 300, 306, 307, 308, 310, 343, 345, 349, 350, 352, 428, 479, 482, 483, 484, 504, 505, 515, 517, 518, 519, 542, 544, 569, 571, 572, 573, 593, 594, 604, 606, 607, 608, 628, 629, 641, 643, 645, 649, 680, 688, 727, 762], "print": [21, 48, 49, 51, 109, 110, 111, 112, 114, 345, 346, 347, 645, 646, 647], "suppress": [21, 48], "output": [21, 48, 54, 110, 114, 194, 195, 242, 258, 293, 329, 342, 352, 499, 537, 555, 588, 623, 746, 780], "maximum": [21, 110, 114, 139, 140, 141, 184, 697, 708, 718], "minim": [21, 48, 194, 195, 343, 649], "2sl": [21, 54, 56, 111, 112, 171, 195, 643, 647, 649], "pass": [21, 49, 54, 62, 104, 110, 111, 114, 173, 182, 184, 186, 193, 194, 195, 197, 207, 346, 645, 646, 694, 697, 705, 708, 710, 718], "scipi": [21, 54, 57, 62, 109, 194, 195], "defer": [21, 54, 195, 357, 365, 373, 383, 391, 399], "choos": [21, 195, 437], "an": [21, 48, 49, 51, 52, 54, 57, 80, 109, 110, 111, 112, 114, 142, 195, 205, 230, 283, 307, 320, 343, 345, 346, 347, 350, 351, 352, 403, 429, 445, 452, 454, 456, 490, 491, 525, 526, 527, 579, 580, 614, 615, 645, 646, 647, 648, 649, 655, 658, 661, 694, 699, 703, 705, 710, 713, 715, 720, 724, 727, 740, 746, 750, 754, 762, 774, 780, 784, 788, 801, 810, 811, 816], "appropri": [21, 51, 52, 195, 343, 346, 351], "all": [21, 34, 48, 49, 50, 51, 52, 54, 67, 80, 100, 104, 109, 110, 111, 114, 141, 181, 192, 195, 204, 215, 217, 221, 230, 242, 258, 262, 263, 264, 267, 269, 282, 283, 293, 310, 320, 329, 343, 345, 346, 347, 348, 350, 351, 352, 377, 403, 429, 436, 445, 471, 490, 499, 525, 526, 537, 555, 559, 560, 561, 566, 568, 579, 588, 614, 623, 645, 647, 649, 680, 688, 694, 697, 701, 704, 705, 708, 714, 718, 722, 725, 727, 740, 754, 762, 774, 788, 807], "input": [21, 49, 51, 54, 105, 110, 112, 114, 142, 195, 242, 293, 329, 345, 346, 350, 403, 429, 445, 454, 464, 472, 499, 537, 588, 623, 645, 746, 780], "except": [21, 48, 52, 110, 111, 195, 343, 346, 403, 645, 647], "fun": [21, 195], "x0": [21, 195], "arg": [21, 139, 140, 195, 806, 815], "overridden": [21, 195, 348, 645], "gmmfactormodelresult": 21, "linearfactormodel": [23, 48, 49, 50, 51, 56, 643], "applic": [24, 54, 62, 111, 343, 350, 644, 647], "both": [24, 48, 49, 50, 51, 54, 57, 98, 112, 114, 152, 155, 164, 175, 182, 186, 197, 205, 209, 217, 221, 236, 253, 305, 340, 343, 346, 347, 407, 452, 454, 499, 513, 537, 553, 588, 602, 623, 639, 645, 646, 649, 684, 746, 780], "time": [24, 48, 49, 51, 52, 54, 100, 104, 108, 109, 110, 111, 112, 114, 306, 308, 343, 345, 350, 351, 352, 353, 361, 369, 377, 380, 387, 395, 403, 405, 407, 409, 416, 419, 424, 428, 431, 436, 439, 444, 447, 452, 454, 456, 462, 463, 464, 466, 471, 472, 474, 479, 480, 482, 504, 510, 515, 517, 542, 549, 569, 571, 593, 599, 604, 606, 628, 635, 641, 645, 646, 647, 648, 649], "seri": [24, 29, 40, 41, 42, 52, 54, 81, 83, 87, 88, 90, 94, 97, 98, 99, 100, 104, 106, 115, 121, 127, 133, 142, 145, 158, 232, 234, 241, 243, 245, 249, 252, 253, 257, 259, 260, 262, 265, 266, 285, 287, 292, 294, 296, 301, 304, 305, 309, 321, 323, 328, 330, 332, 336, 339, 340, 341, 345, 403, 415, 488, 489, 492, 493, 498, 500, 502, 508, 510, 512, 513, 514, 523, 524, 528, 529, 536, 538, 540, 547, 549, 551, 552, 553, 554, 556, 557, 559, 562, 563, 564, 565, 577, 578, 581, 582, 587, 589, 591, 597, 599, 601, 602, 603, 612, 613, 616, 617, 622, 624, 626, 632, 635, 637, 638, 639, 640, 645, 649, 695, 700, 706, 711, 716, 721, 727, 740, 745, 747, 752, 754, 756, 762, 774, 779, 781, 786, 788, 790], "zero": [24, 34, 48, 52, 80, 217, 230, 236, 283, 320, 343, 490, 513, 515, 525, 526, 553, 579, 602, 614, 639, 645, 727, 739, 762, 793, 794], "e": [24, 48, 50, 52, 54, 109, 111, 172, 183, 194, 206, 307, 343, 350, 351, 352, 353, 361, 369, 387, 395, 644, 645, 646, 647, 649, 699, 710, 720, 815], "alpha_i": [24, 346, 350, 452], "directli": [24, 80, 110, 111, 114, 230, 283, 320, 343, 346, 647, 649], "lambda_i": 24, "sampl": [24, 54, 68, 76, 92, 109, 110, 111, 114, 115, 120, 121, 126, 127, 132, 133, 138, 141, 152, 155, 163, 164, 168, 172, 183, 194, 206, 220, 227, 242, 247, 258, 266, 270, 272, 279, 293, 298, 311, 317, 329, 334, 343, 351, 361, 472, 499, 537, 588, 623, 645, 647, 649, 651, 666, 670, 674, 680, 684, 688, 697, 708, 718, 726, 727, 732, 740, 746, 761, 762, 767, 774, 780, 795], "which": [24, 48, 50, 51, 52, 54, 57, 109, 110, 111, 112, 114, 175, 179, 184, 186, 190, 197, 202, 205, 209, 213, 217, 242, 293, 329, 343, 345, 346, 347, 348, 350, 351, 352, 434, 442, 445, 450, 452, 454, 456, 460, 464, 469, 472, 477, 502, 540, 591, 626, 645, 646, 647, 648, 649, 688, 694, 697, 700, 701, 703, 705, 708, 711, 713, 715, 718, 721, 722, 724, 746, 780], "support": [25, 45, 50, 54, 62, 95, 111, 133, 164, 173, 184, 195, 207, 219, 250, 268, 302, 337, 345, 351, 353, 369, 377, 403, 429, 437, 445, 452, 454, 464, 472, 509, 548, 567, 598, 633, 643, 645, 646, 647, 649, 661, 674, 688, 697, 708, 718, 753, 787], "consist": [25, 48, 52, 57, 110, 111, 221, 236, 343, 346, 347, 350, 351, 352, 645, 646, 649, 694, 715, 739], "model": [28, 34, 35, 45, 48, 49, 51, 54, 55, 56, 57, 62, 65, 67, 68, 78, 80, 82, 83, 84, 95, 98, 109, 110, 111, 113, 115, 121, 127, 133, 142, 154, 157, 158, 167, 170, 216, 217, 218, 219, 220, 221, 228, 230, 233, 234, 236, 238, 242, 250, 253, 258, 262, 263, 264, 267, 268, 269, 270, 271, 273, 280, 282, 283, 286, 287, 289, 293, 302, 305, 306, 308, 310, 311, 318, 320, 322, 323, 325, 329, 337, 340, 342, 343, 345, 348, 350, 352, 353, 358, 361, 366, 369, 374, 377, 384, 387, 392, 395, 400, 479, 486, 489, 490, 491, 493, 494, 496, 497, 499, 502, 503, 504, 505, 506, 509, 514, 515, 521, 524, 525, 526, 527, 529, 530, 531, 533, 534, 537, 540, 541, 542, 543, 544, 545, 548, 554, 555, 559, 560, 561, 566, 567, 568, 569, 575, 578, 579, 580, 582, 583, 585, 586, 588, 591, 592, 593, 594, 595, 598, 603, 604, 610, 613, 614, 615, 617, 618, 620, 621, 623, 626, 627, 628, 629, 630, 633, 640, 641, 644, 645, 649, 651, 655, 658, 661, 666, 670, 674, 683, 684, 687, 693, 726, 727, 733, 739, 740, 746, 753, 761, 762, 768, 774, 780, 787, 796], "ani": [28, 68, 73, 83, 100, 105, 111, 112, 116, 122, 128, 134, 143, 146, 150, 220, 224, 234, 254, 270, 276, 287, 311, 314, 323, 343, 346, 452, 456, 483, 486, 487, 491, 493, 505, 518, 521, 522, 527, 529, 544, 572, 575, 576, 580, 582, 594, 607, 610, 611, 615, 617, 629, 645, 651, 655, 658, 661, 666, 670, 758, 810, 811, 812, 816], "A": [28, 50, 51, 68, 98, 109, 111, 112, 175, 186, 197, 209, 220, 253, 270, 305, 311, 340, 343, 346, 513, 553, 602, 639, 641, 644, 645, 646, 647, 649, 682, 686, 692, 722, 801], "dictionari": [28, 62, 68, 109, 110, 142, 146, 153, 156, 166, 169, 194, 218, 220, 270, 311, 346, 645, 647, 681, 685, 690, 694, 699, 701, 703, 705, 710, 713, 715, 720, 722, 724, 726, 746, 761, 780, 806, 815], "mispric": [28, 29, 33], "cov_estim": [28, 68, 220, 258, 270, 311, 555, 726, 761], "full_summari": [28, 48, 49, 51], "complet": [28, 33, 48, 49, 51, 62, 113, 173, 207, 347, 349, 648, 649, 697, 718], "summari": [28, 33, 48, 49, 51, 54, 68, 109, 110, 111, 112, 114, 216, 220, 258, 270, 311, 345, 346, 347, 350, 352, 479, 515, 555, 569, 604, 645, 646, 647, 648, 726, 761], "measur": [28, 33, 48, 54, 111, 112, 114, 184, 217, 348, 351, 352, 482, 483, 484, 504, 505, 506, 517, 518, 519, 542, 544, 545, 571, 572, 573, 593, 594, 595, 606, 607, 608, 628, 629, 630, 645, 648, 726, 754, 761, 788], "j_statist": 28, "observ": [28, 36, 48, 49, 51, 52, 54, 57, 68, 86, 109, 110, 111, 112, 114, 142, 171, 175, 177, 178, 182, 186, 188, 189, 193, 197, 199, 201, 205, 209, 211, 212, 220, 240, 242, 270, 291, 293, 311, 327, 329, 343, 345, 346, 347, 350, 351, 352, 361, 403, 405, 408, 415, 419, 428, 429, 433, 435, 436, 441, 443, 444, 449, 451, 452, 456, 458, 461, 463, 468, 470, 471, 476, 478, 479, 488, 497, 499, 510, 515, 523, 534, 535, 537, 549, 569, 577, 586, 588, 599, 604, 612, 621, 623, 635, 645, 646, 647, 648, 649, 680, 688, 694, 699, 705, 710, 715, 720, 726, 744, 746, 761, 778, 780], "param": [28, 65, 67, 68, 110, 111, 115, 121, 127, 133, 158, 179, 180, 181, 190, 191, 192, 200, 202, 203, 204, 213, 214, 215, 220, 258, 270, 311, 350, 353, 361, 369, 377, 387, 395, 434, 442, 450, 460, 469, 477, 479, 515, 555, 569, 604, 645, 647, 703, 713, 724, 726, 761], "pvalu": [28, 54, 68, 220, 258, 270, 311, 342, 479, 515, 555, 569, 604, 726, 761], "p": [28, 38, 48, 49, 50, 51, 52, 68, 80, 88, 109, 110, 111, 112, 114, 217, 220, 221, 230, 243, 258, 261, 264, 270, 271, 272, 273, 282, 283, 294, 300, 306, 307, 308, 310, 311, 320, 330, 342, 345, 346, 347, 350, 352, 479, 490, 491, 500, 515, 525, 526, 527, 538, 555, 558, 561, 569, 579, 580, 589, 604, 614, 615, 624, 645, 646, 647, 648, 649, 726, 747, 761, 781, 801, 804], "val": [28, 38, 68, 88, 220, 243, 258, 264, 270, 294, 311, 330, 479, 500, 515, 538, 555, 561, 569, 589, 604, 624, 726, 747, 761, 781], "residual_ss": 28, "sum": [28, 39, 46, 68, 85, 89, 96, 109, 220, 236, 239, 244, 251, 270, 282, 290, 295, 303, 310, 311, 326, 331, 338, 343, 351, 352, 361, 479, 490, 495, 501, 511, 515, 525, 526, 532, 539, 550, 569, 579, 584, 590, 600, 604, 614, 619, 625, 636, 645, 649, 726, 743, 748, 755, 761, 777, 782, 789], "risk_premia": 28, "risk_premia_s": 28, "error": [28, 41, 44, 48, 52, 54, 68, 83, 94, 110, 114, 154, 157, 167, 170, 172, 183, 194, 206, 220, 234, 249, 258, 267, 270, 287, 301, 308, 311, 323, 336, 342, 346, 348, 350, 353, 360, 361, 368, 369, 376, 377, 386, 387, 394, 395, 402, 454, 479, 493, 499, 508, 515, 529, 537, 547, 555, 566, 569, 582, 588, 597, 604, 617, 623, 632, 645, 651, 654, 666, 669, 670, 673, 674, 679, 680, 683, 687, 688, 693, 697, 718, 726, 752, 761, 786], "risk_premia_tstat": 28, "rsquar": [28, 68, 111, 217, 220, 258, 270, 311, 348, 479, 482, 483, 484, 504, 505, 506, 515, 517, 518, 519, 542, 544, 545, 555, 569, 571, 572, 573, 593, 594, 595, 604, 606, 607, 608, 628, 629, 630, 645, 726, 761], "coeffici": [28, 43, 52, 68, 70, 80, 91, 92, 109, 110, 111, 217, 220, 230, 246, 247, 258, 265, 266, 270, 283, 297, 298, 311, 320, 333, 334, 342, 346, 351, 352, 436, 463, 479, 482, 483, 484, 490, 503, 504, 505, 506, 513, 515, 517, 518, 519, 526, 541, 542, 543, 544, 545, 553, 555, 562, 563, 564, 565, 569, 571, 572, 573, 579, 592, 593, 594, 595, 602, 604, 606, 607, 608, 614, 627, 628, 629, 630, 639, 645, 649, 694, 705, 715, 726, 750, 761, 784, 795], "determin": [28, 43, 68, 70, 91, 92, 220, 246, 247, 258, 265, 266, 270, 297, 298, 311, 333, 334, 346, 347, 351, 479, 482, 483, 484, 503, 504, 505, 506, 515, 517, 518, 519, 541, 542, 543, 544, 545, 555, 562, 563, 564, 565, 569, 571, 572, 573, 592, 593, 594, 595, 604, 606, 607, 608, 627, 628, 629, 630, 646, 649, 695, 706, 716, 726, 750, 761, 784], "std_error": [28, 68, 220, 258, 270, 311, 342, 479, 515, 555, 569, 604, 645, 726, 761], "total_ss": [28, 68, 220, 270, 311, 479, 515, 569, 604, 726, 761], "total": [28, 46, 68, 96, 110, 111, 112, 114, 220, 251, 270, 303, 311, 338, 343, 479, 511, 515, 550, 552, 569, 600, 604, 636, 638, 645, 726, 754, 755, 761, 788, 789], "tstat": [28, 68, 110, 220, 258, 270, 311, 342, 350, 479, 515, 555, 569, 604, 726, 761], "waldteststatist": [34, 80, 98, 110, 111, 221, 230, 236, 253, 271, 272, 273, 282, 283, 300, 305, 306, 307, 308, 310, 320, 340, 490, 491, 513, 525, 526, 527, 553, 579, 580, 602, 614, 615, 639, 727, 739, 740, 762, 774, 796], "null": [34, 54, 80, 98, 110, 221, 230, 253, 271, 272, 273, 282, 283, 300, 305, 306, 307, 308, 310, 320, 340, 343, 513, 553, 602, 639, 649, 727, 740, 762, 774, 796, 801], "joint": [34, 479, 490, 491, 515, 525, 526, 527, 569, 579, 580, 604, 614, 615, 645, 648, 649], "wald": [34, 98, 110, 217, 253, 305, 307, 340, 343, 491, 513, 527, 553, 580, 602, 615, 639, 801], "df_resid": [38, 68, 71, 88, 220, 222, 243, 270, 274, 294, 311, 312, 330, 479, 481, 500, 515, 516, 538, 569, 570, 589, 604, 605, 624, 726, 728, 747, 761, 763, 781], "els": [38, 71, 88, 222, 243, 274, 294, 312, 330, 481, 500, 516, 538, 570, 589, 605, 624, 728, 747, 763, 781, 809], "normal": [38, 71, 88, 114, 184, 222, 243, 274, 294, 312, 330, 343, 435, 443, 451, 461, 470, 478, 481, 500, 516, 538, 570, 589, 605, 624, 702, 712, 723, 728, 747, 763, 781], "tabl": [45, 95, 219, 250, 268, 302, 337, 350, 509, 548, 567, 598, 633, 645, 753, 787], "export": [45, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "csv": [45, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "html": [45, 48, 49, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "latex": [45, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "as_csv": [45, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "as_html": [45, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "as_latex": [45, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "common": [48, 56, 111, 114, 221, 346, 353, 369, 452, 471, 649, 701, 722, 727, 740, 762, 774, 801, 802], "asset": [48, 49, 51, 54, 56, 644], "market": [48, 49, 50, 51, 111, 346, 347], "size": [48, 49, 50, 51, 57, 68, 92, 100, 104, 109, 110, 112, 220, 242, 247, 258, 266, 270, 293, 298, 311, 329, 334, 413, 499, 537, 588, 623, 645, 646, 727, 740, 746, 762, 774, 780, 795, 801, 802], "macroeconom": [48, 50], "shock": [48, 50, 51, 54, 83, 234, 242, 287, 293, 323, 329, 346, 351, 471, 493, 499, 529, 537, 582, 588, 617, 623, 727, 740, 746, 762, 774, 780], "uncertainti": 48, "set": [48, 49, 50, 52, 54, 57, 62, 109, 111, 114, 184, 258, 282, 300, 310, 342, 343, 345, 346, 347, 348, 352, 353, 361, 369, 377, 380, 387, 395, 436, 479, 480, 555, 645, 647, 649, 694, 695, 698, 699, 705, 706, 708, 709, 710, 715, 716, 719, 720, 814], "often": [48, 350], "although": [48, 50, 57, 110, 111, 112, 345, 346, 350, 429, 445, 454, 464, 472, 645, 649, 694], "thei": [48, 110, 111, 112, 114, 343, 346, 347, 351, 352, 407, 502, 540, 591, 626, 645, 646], "do": [48, 55, 111, 346, 350, 351, 454, 489, 524, 569, 578, 613, 645, 647, 750, 784], "need": [48, 49, 54, 98, 111, 112, 253, 305, 340, 435, 443, 451, 461, 470, 478, 645, 649], "come": [48, 49, 110, 343], "ken": [48, 49, 51], "websit": [48, 49], "4": [48, 49, 51, 62, 100, 104, 109, 110, 111, 112, 114, 179, 184, 190, 202, 213, 345, 346, 347, 350, 352, 434, 442, 450, 460, 469, 477, 641, 644, 645, 646, 647, 648, 694, 720], "momentum": [48, 49], "12": [48, 49, 52, 109, 110, 111, 345, 346, 347, 352, 645, 647, 648, 649], "industri": [48, 49, 111, 351, 645], "subset": [48, 49], "sort": [48, 49], "linearmodel": [48, 49, 51, 54, 109, 110, 111, 112, 114, 345, 346, 347, 350, 352, 643, 645, 646, 647, 648], "descr": [48, 49, 110, 111, 112, 346, 645], "39": [48, 49, 51, 110, 111, 645, 646, 647], "librari": [48, 49, 51, 645], "http": [48, 49, 644], "mba": [48, 49], "tuck": [48, 49], "dartmouth": [48, 49], "edu": [48, 49], "page": [48, 49], "faculti": [48, 49], "data_librari": [48, 49], "date": [48, 49, 51, 109, 110, 111, 112, 114, 345, 346, 347, 350, 352, 645, 646, 647, 648], "year": [48, 49, 110, 111, 112, 345, 346, 347, 350, 352, 513, 553, 602, 639, 645], "month": [48, 49], "mom": [48, 49, 111], "rf": [48, 49, 51], "nodur": [48, 49], "durabl": [48, 49], "durbl": [48, 49], "manuf": [48, 49], "manufactur": [48, 49], "enrgi": [48, 49], "energi": [48, 49], "chem": [48, 49], "chemic": [48, 49], "buseq": [48, 49], "busi": [48, 49, 644], "equip": [48, 49], "telcm": [48, 49], "telecom": [48, 49], "util": [48, 49, 56, 112, 114, 347, 645, 697, 701, 718, 722], "shop": [48, 49], "retail": [48, 49], "hlth": [48, 49], "health": [48, 49, 110, 112], "care": [48, 49], "monei": [48, 49], "financ": [48, 49, 644], "s1v1": [48, 49, 51, 645, 722], "small": [48, 49, 51, 54, 68, 76, 109, 111, 115, 120, 121, 126, 127, 132, 133, 138, 152, 155, 163, 164, 168, 220, 227, 270, 272, 279, 311, 317, 343, 347, 350, 351, 361, 472, 645, 649, 651, 666, 670, 674, 680, 684, 688, 697, 708, 718, 726, 732, 761, 767], "firm": [48, 49, 51, 109, 110, 111, 112, 345, 347, 350, 351, 352], "low": [48, 49, 51, 54, 110, 112, 351, 407, 454], "s1v3": [48, 49, 51, 645], "medium": [48, 49], "s1v5": [48, 49, 51, 645, 722], "high": [48, 49, 51, 54, 56, 57, 109, 344, 649], "s3v1": [48, 49], "3": [48, 49, 50, 51, 52, 100, 109, 110, 111, 112, 114, 140, 141, 258, 342, 343, 345, 346, 347, 350, 351, 352, 403, 513, 553, 555, 602, 639, 645, 646, 647, 648], "s3v3": [48, 49], "s3v5": [48, 49], "5": [48, 49, 100, 104, 109, 110, 111, 112, 114, 140, 141, 258, 342, 343, 345, 346, 347, 350, 352, 555, 641, 644, 645, 646, 647], "s5v1": [48, 49, 51, 645, 722], "larg": [48, 49, 51, 54, 62, 109, 111, 346, 350, 351, 352, 643, 645], "s5v3": [48, 49, 51, 645], "s5v5": [48, 49, 51, 645, 722], "loser": [48, 49], "s1m3": [48, 49], "neutral": [48, 49], "winner": [48, 49], "s5m3": [48, 49], "subtract": [48, 152, 155, 164, 168, 343, 346, 361, 680, 684, 688], "sinc": [48, 49, 50, 52, 62, 83, 109, 110, 111, 114, 155, 205, 234, 287, 323, 345, 346, 347, 352, 454, 493, 529, 582, 617, 643, 645, 646, 648, 649, 684, 750, 784], "invest": [48, 52, 347, 352], "iloc": [48, 49, 345, 645, 647], "6": [48, 49, 51, 100, 104, 109, 110, 111, 112, 141, 308, 343, 345, 346, 347, 645, 646, 647, 648], "themselv": 48, "so": [48, 49, 50, 51, 52, 54, 80, 110, 111, 112, 114, 141, 179, 190, 200, 202, 205, 213, 221, 230, 283, 308, 320, 343, 345, 346, 347, 348, 350, 351, 352, 403, 407, 491, 527, 580, 615, 645, 646, 649, 727, 740, 750, 762, 774, 784], "expect": [48, 50, 52, 110, 343, 352], "thi": [48, 49, 50, 51, 52, 54, 57, 62, 80, 83, 109, 110, 111, 112, 114, 155, 179, 190, 202, 213, 221, 230, 234, 283, 287, 306, 320, 323, 343, 345, 346, 347, 348, 349, 350, 351, 352, 431, 435, 439, 443, 445, 447, 451, 452, 454, 456, 461, 463, 466, 470, 474, 478, 482, 483, 484, 493, 504, 505, 506, 517, 518, 519, 529, 542, 544, 545, 571, 572, 573, 582, 593, 594, 595, 606, 607, 608, 617, 628, 629, 630, 643, 645, 646, 647, 648, 649, 680, 684, 688, 740, 774, 815], "also": [48, 49, 55, 57, 110, 111, 114, 200, 343, 345, 346, 351, 352, 403, 452, 491, 527, 580, 615, 641, 647, 648, 649, 699, 710, 720, 814], "each": [48, 52, 54, 57, 71, 98, 100, 108, 110, 111, 114, 217, 222, 253, 274, 282, 305, 310, 312, 340, 343, 346, 350, 351, 377, 380, 436, 452, 454, 456, 479, 480, 481, 513, 516, 553, 570, 602, 605, 639, 645, 646, 647, 648, 649, 655, 658, 661, 682, 686, 687, 692, 694, 699, 703, 705, 710, 713, 715, 720, 724, 728, 746, 754, 763, 780, 788], "constant": [48, 52, 62, 68, 80, 82, 110, 112, 171, 175, 176, 182, 186, 187, 193, 197, 198, 205, 209, 210, 220, 230, 233, 270, 283, 286, 311, 320, 322, 346, 351, 428, 431, 432, 436, 439, 440, 444, 447, 448, 452, 457, 463, 466, 467, 471, 474, 475, 479, 490, 491, 515, 526, 527, 569, 579, 580, 604, 614, 615, 641, 645, 649, 694, 700, 705, 711, 715, 721, 750, 754, 784, 788], "essenti": 48, "cap": [48, 50, 351, 722], "m": [48, 49, 50, 111, 139, 140, 141, 221, 343, 346, 644, 649, 658, 722, 794], "unsurprisingli": [48, 645], "unabl": 48, "asset_pr": [48, 49, 51, 643], "tradedfactormodel": [48, 49, 50, 51, 56, 643], "re": [48, 49, 51, 57, 62, 98, 109, 110, 111, 114, 253, 300, 305, 340, 345, 346, 348, 350, 351, 429, 431, 437, 439, 447, 454, 456, 464, 466, 472, 474, 479, 515, 569, 604, 645, 647], "fit": [48, 49, 51, 54, 57, 58, 59, 68, 69, 81, 98, 105, 109, 110, 111, 112, 114, 179, 190, 202, 213, 216, 217, 220, 232, 242, 253, 270, 285, 293, 305, 306, 307, 308, 311, 321, 329, 340, 343, 345, 346, 347, 348, 350, 351, 352, 431, 434, 439, 442, 447, 450, 456, 460, 466, 469, 474, 477, 479, 482, 483, 484, 492, 499, 504, 505, 506, 513, 515, 517, 518, 519, 528, 537, 542, 543, 544, 545, 553, 569, 571, 572, 573, 581, 588, 593, 594, 595, 602, 604, 606, 607, 608, 616, 623, 628, 629, 630, 639, 645, 646, 647, 648, 703, 713, 724, 726, 737, 746, 754, 761, 772, 780, 788], "No": [48, 49, 51, 109, 110, 111, 112, 114, 345, 346, 347, 350, 352, 645, 646, 647, 648], "9": [48, 49, 109, 110, 111, 112, 114, 345, 346, 347, 350, 352, 645, 646, 647], "6910": 48, "70": [48, 111, 352], "034": [48, 645], "819": [48, 49, 51, 645], "0000": [48, 49, 51, 109, 110, 111, 112, 114, 345, 346, 347, 350, 352, 645, 646, 647, 648], "tue": [48, 49, 109, 110, 111, 112, 345, 346, 347, 645, 646, 647], "jun": [48, 49, 109, 110, 111, 112, 345, 346, 347, 645, 646, 647, 648], "07": [48, 49, 109, 110, 111, 112, 345, 346, 347, 352, 645, 646, 647], "2022": [48, 49, 109, 110, 111, 112, 345, 346, 347, 645, 646, 647], "distribut": [48, 49, 50, 51, 52, 80, 98, 109, 110, 111, 112, 114, 217, 221, 230, 253, 271, 272, 273, 282, 283, 300, 305, 306, 307, 308, 310, 320, 340, 343, 345, 346, 347, 350, 352, 490, 491, 513, 525, 526, 527, 553, 579, 580, 602, 614, 615, 639, 645, 647, 649, 727, 740, 762, 774, 801], "chi2": [48, 49, 51, 80, 109, 110, 111, 112, 114, 217, 230, 283, 320, 645, 647], "42": [48, 109, 110, 352], "52": [48, 114, 345, 347, 645], "std": [48, 49, 51, 109, 110, 111, 112, 114, 258, 342, 345, 346, 347, 350, 352, 555, 645, 646, 647, 648], "err": [48, 49, 51, 109, 110, 111, 112, 114, 345, 346, 347, 350, 352, 645, 646, 647, 648], "stat": [48, 49, 51, 54, 109, 110, 111, 112, 114, 217, 258, 269, 343, 345, 346, 347, 349, 350, 352, 490, 526, 555, 568, 579, 614, 645, 646, 647, 648, 796, 801], "lower": [48, 49, 51, 71, 109, 110, 111, 112, 114, 222, 274, 312, 343, 345, 346, 347, 350, 352, 481, 516, 570, 605, 645, 646, 647, 648, 728, 763], "ci": [48, 49, 51, 55, 109, 110, 111, 112, 114, 345, 346, 347, 350, 352, 645, 646, 647, 648], "upper": [48, 49, 51, 71, 109, 110, 111, 112, 114, 221, 222, 274, 312, 345, 346, 347, 350, 352, 481, 516, 570, 605, 645, 646, 647, 648, 728, 763], "0065": [48, 347, 646], "0015": [48, 111, 645], "3553": 48, "0035": [48, 110, 112, 645], "0094": [48, 110, 112, 645], "heteroskedasticcovari": [48, 49, 62, 114, 158, 173, 207, 697, 718], "expand": [48, 55, 110, 111, 343], "while": [48, 111, 114, 347, 348, 350, 351, 436, 454, 649], "extra": 48, "increas": [48, 110, 111], "still": [48, 645], "easili": [48, 111], "reject": [48, 649, 727, 740, 762, 774], "8971": 48, "53": 48, "271": 48, "0016": [48, 49, 51, 111, 645, 646], "0010": [48, 49, 109, 111, 347, 645, 647], "6021": 48, "1091": 48, "0004": [48, 111, 346, 645, 647], "0009": [48, 109, 111, 346, 645, 646, 647], "6993": 48, "0002": [48, 49, 51, 110, 111, 345, 350, 645, 646], "0053": [48, 49, 647], "chang": [48, 55, 56, 112, 114, 184, 346, 348, 351, 645, 647], "doe": [48, 50, 52, 109, 111, 306, 346, 350, 351, 352, 403, 436, 454, 482, 483, 484, 491, 517, 518, 519, 527, 571, 572, 573, 580, 606, 607, 608, 615, 643, 645, 647, 649, 815], "indu": 48, "7118": 48, "61": [48, 346, 347, 647], "617": 48, "displai": [48, 110, 114, 194, 195, 645], "There": [48, 49, 51, 52, 55, 109, 111, 114, 343, 345, 351, 645, 648], "reason": [48, 111, 350, 648, 796], "dispers": 48, "possibl": [48, 50, 98, 110, 111, 112, 114, 253, 305, 340, 343, 345, 347, 513, 553, 602, 639, 645, 646, 647, 699, 710, 720], "close": [48, 109, 110, 111, 236, 271, 273, 343, 739], "uniti": [48, 67, 181, 192, 204, 215, 343, 699, 710, 720], "803334": 48, "029383": 48, "080556": 48, "176659": 48, "104124": 48, "466510": 48, "129601": 48, "094600": 48, "197135": 48, "913425": 48, "234012": 48, "264609": 48, "970844": 48, "179466": 48, "092021": 48, "152119": 48, "182299": 48, "543462": 48, "782811": 48, "158395": 48, "044042": 48, "605203": 48, "175549": 48, "260051": 48, "942997": 48, "135802": 48, "010064": 48, "864135": 48, "213336": 48, "315180": 48, "112368": 48, "053364": 48, "378365": 48, "109851": 48, "304442": 48, "237830": 48, "7": [48, 109, 110, 111, 112, 345, 346, 347, 352, 641, 644, 645, 646, 647], "seaborn": [48, 645], "sn": [48, 645], "matplotlib": [48, 645], "inlin": [48, 54, 645], "heatmap": [48, 645], "lt": [48, 111, 345], "axessubplot": 48, "gt": [48, 111, 345], "similarli": [48, 343, 347, 351, 352, 645, 647, 649, 694], "monthli": [48, 111], "scale": [48, 115, 121, 127, 133, 407, 649, 795], "show": [48, 49, 109, 111, 112, 113, 349, 645], "annual": [48, 111, 346, 645], "healthcar": 48, "ha": [48, 50, 52, 54, 58, 59, 83, 98, 100, 109, 110, 111, 114, 155, 200, 234, 253, 272, 282, 287, 305, 310, 323, 340, 343, 345, 346, 347, 350, 351, 403, 429, 490, 493, 502, 513, 525, 526, 529, 540, 553, 579, 582, 591, 602, 614, 617, 626, 639, 645, 647, 684, 727, 740, 762, 774, 815], "largest": 48, "8": [48, 109, 110, 111, 345, 346, 347, 350, 352, 645, 646, 647, 648, 699, 703, 710, 713, 724], "023360": 48, "030919": 48, "010643": 48, "012009": 48, "002783": 48, "024215": 48, "009726": 48, "017078": 48, "009952": 48, "050760": 48, "015197": 48, "033345": 48, "dtype": [48, 345, 346, 645], "float64": [48, 345, 346, 645], "more": [48, 50, 54, 55, 110, 111, 113, 221, 272, 300, 343, 346, 350, 454, 645, 646, 647, 648, 649, 703, 713, 724, 746, 750, 780, 784], "necessari": [48, 112, 346, 348, 431, 439, 447, 466, 474], "procedur": [48, 50, 114], "In": [48, 54, 110, 111, 112, 114, 193, 242, 293, 329, 343, 345, 346, 347, 350, 351, 431, 439, 445, 447, 456, 466, 474, 499, 537, 588, 623, 645, 647, 648, 649, 740, 746, 774, 780, 815], "here": [48, 110, 111, 112, 345, 346, 347, 352, 645, 646, 647], "four": [48, 114, 343, 464, 472], "attempt": [48, 50, 348], "9051": 48, "36": [48, 111, 345, 352, 645], "929": 48, "0070": [48, 111], "5385": 48, "0040": [48, 49, 346, 645], "0100": [48, 346], "0005": [48, 111, 645, 646, 647], "0014": [48, 49, 109, 346, 645, 647, 648], "3381": 48, "7353": 48, "0023": [48, 51, 111, 345, 346, 645], "0033": [48, 346, 350, 645], "0084": [48, 111, 645], "0025": [48, 111, 645, 646, 648], "3085": 48, "0034": [48, 346, 645, 648], "0133": [48, 110], "8072": 48, "0056": [48, 49], "0112": [48, 346], "092658": 48, "224223": 48, "244844": 48, "691191": 48, "874285": 48, "881880": 48, "459326": 48, "082546": 48, "047256": 48, "147949": 48, "239957": 48, "297941": 48, "156849": 48, "623684": 48, "059730": 48, "760059": 48, "948556": 48, "467783": 48, "333619": 48, "135465": 48, "128861": 48, "713403": 48, "051098": 48, "413705": 48, "138597": 48, "112936": 48, "062397": 48, "755032": 48, "946214": 48, "200052": 48, "095270": 48, "100067": 48, "078098": 48, "046531": 48, "069780": 48, "467172": 48, "identif": [48, 54, 112], "have": [48, 49, 54, 57, 58, 59, 109, 110, 112, 217, 242, 293, 329, 343, 345, 346, 351, 403, 499, 502, 513, 537, 540, 553, 588, 591, 602, 623, 626, 639, 641, 645, 647, 649, 651, 697, 699, 710, 718, 720, 746, 780], "uniqu": [48, 100, 111, 645, 646, 702, 712, 723], "variat": [48, 111, 351], "some": [48, 50, 51, 54, 55, 56, 109, 110, 111, 112, 200, 345, 346, 348, 349, 643, 645, 646, 648, 649, 813], "cross": [48, 50, 54, 346, 353, 644, 648, 649, 680, 727, 740, 762, 774], "section": [48, 50, 52, 54, 175, 186, 197, 209, 346, 353, 644, 645, 649, 680], "differ": [48, 50, 52, 54, 55, 56, 62, 83, 110, 111, 173, 207, 221, 234, 272, 282, 287, 300, 310, 323, 343, 345, 348, 349, 350, 352, 403, 412, 444, 445, 493, 502, 529, 540, 582, 591, 617, 626, 643, 645, 646, 649, 750, 784], "exposur": [48, 50], "correl": [48, 54, 110, 111, 114, 217, 306, 307, 308, 343, 348, 353, 479, 482, 483, 484, 515, 517, 518, 519, 569, 571, 572, 573, 604, 606, 607, 608, 645, 648, 697, 718, 727, 740, 762, 774], "rel": [48, 51, 110, 111, 221, 345, 346, 351], "might": [48, 49, 52, 110, 111, 346, 351, 645], "make": [48, 51, 55, 111, 114, 179, 190, 202, 213, 346, 351, 352, 434, 442, 450, 460, 469, 477, 647, 703, 713, 724], "infer": [48, 51, 52, 54, 56, 62, 114, 173, 207, 436, 491, 527, 580, 615, 644, 645, 648, 649], "unreli": [48, 54], "11": [48, 110, 111, 346, 347, 352, 513, 553, 602, 639, 645, 647, 649], "corr": [48, 110, 351, 482, 483, 484, 517, 518, 519, 571, 572, 573, 606, 607, 608, 645], "000000": [48, 110, 111, 345], "001914": 48, "733916": 48, "253675": 48, "638056": 48, "015628": 48, "002744": 48, "wa": [48, 54, 110, 111, 112, 242, 293, 329, 343, 346, 349, 490, 499, 526, 537, 579, 588, 614, 623, 645, 651, 666, 670, 674, 746, 780], "insignific": [48, 645], "drop": [48, 54, 57, 109, 111, 112, 142, 242, 293, 329, 343, 345, 346, 351, 352, 403, 409, 435, 443, 451, 452, 456, 461, 470, 478, 499, 537, 588, 623, 645, 647, 746, 780], "much": [48, 111, 346], "effect": [48, 50, 52, 54, 56, 57, 58, 59, 83, 109, 110, 111, 112, 155, 234, 287, 323, 343, 344, 345, 350, 352, 353, 361, 369, 387, 395, 403, 429, 436, 452, 453, 454, 456, 459, 462, 471, 472, 479, 483, 484, 486, 487, 489, 493, 499, 505, 506, 515, 518, 519, 521, 522, 524, 525, 529, 530, 535, 537, 543, 544, 545, 552, 569, 572, 573, 575, 576, 578, 582, 588, 594, 595, 604, 607, 608, 610, 611, 613, 617, 623, 629, 630, 638, 641, 643, 645, 684], "7915": 48, "406": 48, "0073": [48, 110, 112, 114, 645], "0017": [48, 111, 645], "3856": 48, "0105": [48, 110, 112, 645], "0091": 48, "0027": [48, 645, 647], "4361": 48, "0006": [48, 345, 346, 645, 646, 647], "0039": [48, 346, 645, 648], "0143": [48, 645], "7507": 48, "0055": [48, 49, 346, 347, 645], "0113": [48, 346, 347, 352], "case": [48, 51, 110, 111, 112, 114, 171, 175, 186, 197, 209, 343, 347, 348, 351, 403, 431, 439, 447, 456, 466, 474, 643, 645, 646, 648, 649, 715, 740, 774, 815], "construct": [48, 54, 57, 71, 100, 105, 108, 111, 175, 179, 186, 190, 197, 202, 209, 213, 222, 242, 274, 293, 312, 329, 343, 345, 346, 407, 428, 430, 434, 436, 438, 442, 444, 446, 450, 452, 454, 455, 460, 463, 465, 469, 471, 473, 477, 481, 499, 516, 537, 570, 588, 605, 623, 645, 649, 683, 687, 693, 694, 698, 701, 703, 705, 709, 713, 715, 719, 722, 724, 728, 746, 763, 780], "misspecifi": 48, "littl": [48, 110], "impact": 48, "13": [48, 109, 110, 111, 114, 345, 346, 352, 644, 645, 647], "014": 48, "0045": [48, 51, 110, 111, 112, 646], "0079": 48, "5607": 48, "5750": 48, "0200": 48, "0111": 48, "0076": [48, 111], "4636": 48, "1433": [48, 646], "0038": [48, 49, 346, 646], "0259": 48, "0110": 48, "0946": 48, "0362": [48, 346], "0007": [48, 49, 346, 645, 646, 647], "0214": [48, 645], "0086": [48, 110, 645], "9315": [48, 111], "0058": [48, 345], "0114": [48, 645], "base": [48, 51, 52, 54, 62, 80, 110, 111, 184, 230, 258, 283, 320, 342, 346, 348, 351, 436, 482, 483, 484, 517, 518, 519, 555, 571, 572, 573, 606, 607, 608, 644, 651, 666, 674, 694, 697, 699, 705, 715, 718, 720], "g": [48, 52, 115, 152, 164, 172, 183, 193, 194, 200, 206, 236, 343, 350, 351, 352, 353, 361, 369, 387, 395, 645, 646, 649, 651, 680, 688, 699, 710, 720, 739, 795], "newei": [48, 50, 51, 114, 133, 164, 353, 355, 363, 369, 371, 377, 379, 389, 397, 445, 454, 464, 472, 644, 645, 661, 674, 688], "west": [48, 50, 51, 114, 133, 164, 353, 355, 363, 369, 371, 377, 379, 389, 397, 445, 454, 464, 472, 644, 645, 661, 674, 688], "reduc": [48, 54, 346, 431, 439, 447, 452, 456, 463, 466, 474, 647], "serial": 48, "firmli": 48, "14": [48, 49, 110, 111, 114, 346, 352, 645, 648], "25": [48, 110, 111, 112, 345, 346, 347, 352, 645], "841": 48, "3094": 48, "0106": [48, 645], "0031": [48, 110, 645], "9499": 48, "0032": [48, 645], "0152": 48, "8371": 48, "kernelcovari": [48, 49, 51, 62, 114, 158, 173, 207, 697, 718], "final": [48, 52, 110, 220, 221, 255, 349, 351, 645], "similar": [48, 50, 110, 112, 114, 343, 345, 346, 347, 348, 350, 352, 445, 454, 464, 472, 647, 750, 784], "singl": [48, 54, 56, 98, 111, 112, 253, 305, 340, 345, 347, 403, 436, 513, 553, 602, 639, 646, 647, 699, 710, 720], "practic": [48, 109, 343, 351, 645, 649, 699, 710, 720], "least": [48, 54, 56, 109, 110, 111, 114, 171, 351, 454, 648, 694, 701], "twice": [48, 111], "onc": [48, 58, 59, 62, 110, 343, 346], "get": [48, 100, 403, 411, 424, 694, 698, 705, 709, 715, 719, 814], "form": [48, 50, 52, 57, 71, 80, 98, 109, 110, 111, 175, 186, 197, 209, 222, 230, 253, 274, 283, 305, 312, 320, 340, 343, 351, 352, 361, 403, 452, 481, 513, 516, 553, 570, 602, 605, 639, 645, 647, 649, 680, 688, 694, 695, 705, 706, 715, 716, 728, 746, 763, 780], "progress": 48, "everi": 48, "15": [48, 110, 111, 346, 347, 352, 645, 647], "linearfactormodelgmm": [48, 50, 51, 56, 643], "47": [48, 110, 111, 112, 345, 347], "757915828205064": 48, "28": [48, 110, 111, 345, 347, 645], "102588647846847": 48, "20": [48, 49, 110, 111, 114, 345, 347, 349, 352, 644, 645, 647], "26": [48, 110, 111, 112, 346, 352, 645, 647], "361385847065804": 48, "30": [48, 111, 114, 345, 352, 645, 647], "019667993531762": 48, "40": [48, 111, 345, 347, 644, 647], "22": [48, 110, 111, 645, 647, 649], "325343253000764": 48, "warn": [48, 54, 110, 647], "desir": [48, 110, 345, 347, 352], "necessarili": [48, 50, 110], "achiev": [48, 110, 346], "due": [48, 110, 346, 351, 645, 647], "precis": [48, 110, 258, 342, 345, 403, 555, 645, 649], "loss": [48, 52, 110], "current": [48, 110, 111, 645], "325343": 48, "41": [48, 352, 647], "evalu": [48, 110, 112, 179, 190, 202, 213, 434, 442, 450, 460, 469, 477, 703, 713, 724], "2969": [48, 647], "gradient": [48, 110], "87": [48, 350], "51935034098942": 48, "303730249975665": 48, "226426863661256": 48, "19308131088653": 48, "066871364211682": 48, "066871": 48, "3582": 48, "105": [48, 111], "7904": [48, 51], "067": [48, 346], "0012": [48, 49, 51, 346, 645], "56": [48, 51, 111], "0067": [48, 111, 346], "4335": 48, "0037": [48, 110, 111, 346, 350, 645], "0097": [48, 111, 645], "0135": 48, "8706": [48, 346], "0090": [48, 111, 645, 647], "0180": [48, 111], "5139": 48, "0066": [48, 346, 645], "0123": [48, 49, 350], "well": [48, 49, 50, 51, 54, 111, 113, 282, 310, 343, 346, 349, 643, 645], "impli": 48, "abl": 48, "16": [48, 110, 111, 346, 347, 352, 645], "7901": 48, "833": [48, 110], "0316": [48, 648], "58": [48, 109, 346, 350], "0074": [48, 646], "1450": [48, 646], "0046": [48, 346], "0102": [48, 110, 112, 345, 352], "0137": [48, 110, 112, 346], "0030": [48, 110, 111, 112, 645], "5918": 48, "0078": [48, 347], "0195": 48, "0013": [48, 645, 647], "0849": [48, 645], "0103": [48, 49], "approach": [48, 50, 52, 110, 644], "sub": 48, "repeat": [48, 54, 112, 646], "fix": [48, 54, 56, 57, 109, 350, 352, 353, 361, 369, 387, 395, 452, 454, 641, 643, 683, 687, 693], "keyword": [48, 49, 54, 110, 111, 158, 182, 186, 193, 194, 197, 346, 645, 646, 705, 710], "17": [48, 62, 110, 111, 345, 346, 350, 352, 645, 647, 648], "280320986032134": 48, "222217566151127": 48, "09415705873315": 48, "09126663885033": 48, "089908": 48, "37": [48, 110, 111, 112, 645, 646], "2766": [48, 646], "81": [48, 352, 645], "08879829146272": 48, "08877142745601": 48, "termin": 48, "successfulli": 48, "088753": 48, "38": [48, 111, 347, 645], "1904": 48, "08862239884194": 48, "088622": 48, "1711": 48, "50": [48, 109, 110, 111, 346, 350, 352], "088622322143546": 48, "1269": 48, "089": 48, "43": [48, 49, 109, 110, 111, 112, 345, 346, 347, 645, 646, 647], "04": [48, 109, 345, 647], "4231": 48, "0096": 48, "8726": 48, "5017": 48, "cue": [48, 56, 110, 193, 643], "jointli": [48, 221, 282, 310, 515, 525, 647, 648, 649], "rather": [48, 110, 351, 647], "than": [48, 52, 54, 57, 110, 111, 114, 272, 300, 350, 351, 454, 646, 647], "same": [48, 50, 51, 52, 80, 83, 98, 105, 110, 111, 114, 179, 190, 202, 205, 213, 221, 230, 234, 242, 253, 272, 283, 287, 293, 305, 320, 323, 329, 340, 343, 345, 346, 351, 413, 454, 493, 499, 502, 513, 529, 537, 540, 553, 582, 588, 591, 602, 617, 623, 626, 639, 645, 646, 647, 649, 699, 701, 710, 720, 722, 746, 780], "18": [48, 49, 51, 110, 111, 346, 347, 352, 645, 647, 648], "524472798449022": 48, "386042825986202": 48, "339793429538883": 48, "308301726988816": 48, "077574": 48, "2834": [48, 346], "83": [48, 111, 346], "7903": 48, "719": 48, "4157": 48, "0136": [48, 49, 645], "8881": 48, "0181": [48, 111], "4984": 48, "multipl": [49, 111, 114, 258, 342, 345, 350, 555, 645, 646, 648, 649], "depend": [49, 54, 57, 58, 62, 83, 109, 110, 111, 114, 133, 158, 171, 173, 175, 182, 184, 186, 193, 195, 197, 200, 205, 207, 209, 234, 287, 323, 343, 345, 346, 347, 350, 351, 353, 361, 369, 377, 387, 395, 428, 436, 444, 452, 463, 471, 482, 483, 484, 493, 499, 504, 505, 506, 517, 518, 519, 529, 537, 542, 544, 545, 571, 572, 573, 582, 588, 593, 594, 595, 606, 607, 608, 617, 623, 628, 629, 630, 645, 646, 647, 648, 649, 680, 688, 694, 701, 705, 715, 722, 754, 788], "independ": [49, 350, 471], "exist": [49, 645], "mani": [49, 54, 55, 110, 111, 347, 350, 452, 641, 649], "express": [49, 114, 175, 186, 197, 209, 308, 343, 345, 351, 645, 646, 649, 694, 705, 715], "port1": 49, "port2": 49, "port3": 49, "port4": 49, "portn": 49, "factor1": 49, "factork": 49, "hand": [49, 343, 345, 351, 428, 436, 444, 452, 463, 471, 645], "side": [49, 343, 428, 436, 444, 452, 463, 471, 645], "from_formula": [49, 54, 98, 111, 112, 253, 305, 340, 347, 350, 646, 647], "1": [49, 52, 56, 57, 65, 67, 98, 100, 104, 108, 109, 110, 111, 112, 114, 115, 121, 127, 133, 139, 140, 141, 152, 154, 155, 157, 158, 164, 167, 170, 171, 172, 175, 179, 180, 181, 182, 183, 186, 190, 191, 192, 193, 194, 197, 200, 202, 203, 204, 205, 206, 209, 213, 214, 215, 236, 253, 258, 300, 305, 306, 308, 340, 342, 343, 345, 346, 347, 350, 351, 352, 353, 361, 369, 377, 387, 395, 403, 429, 431, 434, 436, 439, 442, 445, 447, 450, 454, 456, 460, 464, 466, 469, 472, 474, 477, 491, 513, 527, 553, 555, 580, 602, 615, 639, 644, 645, 646, 647, 649, 651, 655, 658, 661, 666, 670, 674, 680, 683, 688, 694, 697, 699, 703, 705, 710, 713, 715, 718, 720, 722, 724, 727, 739, 740, 750, 754, 762, 774, 784, 788, 793, 794, 795], "combin": [49, 57, 346], "adequ": 49, "7229": 49, "9450": 49, "0190": [49, 647], "0044": [49, 111], "6929": 49, "0071": [49, 110, 345], "0075": 49, "4051": 49, "0024": [49, 111, 345, 346], "0088": [49, 647], "0081": [49, 110, 112, 645], "0021": [49, 51, 645, 647], "7457": 49, "omit": [49, 111, 112, 351, 694, 703, 713, 724, 746, 780], "simplifi": [49, 54, 55, 57, 100, 104, 110, 346, 351, 649, 701, 722], "experi": [49, 55, 98, 111, 253, 305, 340, 346, 350, 645], "altern": [49, 54, 62, 112, 173, 207, 217, 343, 346, 349, 352, 403, 647, 649, 694, 726, 754, 761, 788], "appear": [49, 110, 217, 645, 646, 647], "inadequ": 49, "even": [49, 57, 109, 346, 352, 645], "port": 49, "v": [49, 98, 110, 111, 112, 115, 121, 127, 133, 253, 272, 300, 305, 308, 310, 340, 343, 513, 553, 602, 639, 646, 813, 815], "format": [49, 98, 100, 104, 253, 305, 340, 346, 349, 352, 403, 513, 553, 602, 639, 645, 699, 710, 720], "7723": 49, "86": 49, "430": [49, 346], "5940": 49, "5525": 49, "0042": [49, 111, 346, 645], "0918": [49, 346, 645], "0022": [49, 51, 111, 346, 647], "0063": [49, 645, 646, 647], "0050": [49, 646], "1337": 49, "2569": 49, "0036": [49, 111], "7058": 49, "0109": [49, 645], "To": 49, "verifi": [49, 54, 645], "interfac": [49, 98, 112, 253, 305, 340, 347, 499, 537, 588, 623, 645, 647, 699, 701, 710, 720, 722], "ident": [49, 52, 62, 67, 109, 110, 111, 181, 192, 204, 215, 307, 343, 346, 347, 350, 351, 429, 445, 645, 646, 647, 649, 697, 718], "396": 49, "commonli": [50, 349], "fama": [50, 54, 56, 377, 436, 479, 643], "explain": [50, 111, 114, 307, 308, 346], "hypothesi": [50, 98, 113, 253, 305, 340, 349, 513, 553, 602, 639, 649, 727, 740, 762, 774, 796, 798, 801, 803], "associ": [50, 645], "simpl": [50, 52, 98, 110, 112, 253, 305, 340, 346, 352, 513, 553, 602, 639, 645, 646, 647, 722], "seemingli": [50, 52, 54, 56, 643, 645, 648, 694, 715, 761], "unrel": [50, 52, 54, 56, 643, 645, 648, 694, 715, 761], "regress": [50, 51, 52, 54, 56, 57, 111, 112, 113, 216, 217, 218, 220, 231, 270, 282, 284, 300, 306, 307, 308, 310, 343, 347, 350, 351, 352, 436, 525, 643, 645, 651, 666, 670, 674, 694, 715, 722, 750, 754, 761, 784, 788], "sur": [50, 51, 52, 54, 56, 643, 645, 646, 647, 648], "equal": [50, 52, 98, 110, 253, 305, 340, 343, 513, 553, 602, 639], "premium": [50, 52], "_": [50, 52, 100, 133, 171, 182, 193, 205, 306, 307, 308, 343, 351, 353, 361, 369, 387, 395, 428, 491, 527, 580, 615, 645, 649, 651, 694, 705, 715, 727, 750, 754, 762, 784, 788], "sim": [50, 52, 221, 236, 271, 272, 273, 282, 300, 306, 308, 343, 649, 739], "chi": [50, 98, 110, 111, 221, 236, 253, 271, 272, 282, 305, 306, 308, 340, 491, 513, 527, 553, 580, 602, 615, 639, 727, 739, 740, 762, 774], "2_p": 50, "demean": [50, 52, 343, 346, 352, 413, 416, 484, 519, 573, 604, 608, 634, 649, 750, 784], "regressor": [50, 52, 54, 57, 62, 105, 109, 110, 111, 112, 114, 115, 121, 127, 133, 152, 154, 155, 157, 158, 164, 167, 170, 171, 172, 179, 182, 183, 190, 193, 194, 200, 202, 205, 206, 213, 217, 218, 272, 300, 307, 343, 346, 347, 350, 351, 361, 434, 442, 450, 454, 460, 469, 477, 479, 490, 491, 515, 526, 527, 569, 579, 580, 604, 614, 615, 646, 647, 649, 651, 655, 658, 661, 666, 670, 674, 682, 683, 684, 686, 687, 692, 693, 694, 697, 701, 703, 713, 715, 718, 722, 724, 727, 740, 746, 762, 774, 780], "2_": [50, 221, 271, 272, 282, 306, 308, 491, 527, 580, 615, 727, 740, 762, 774], "k": [50, 51, 52, 54, 110, 111, 114, 115, 121, 127, 133, 164, 171, 172, 205, 206, 209, 220, 237, 270, 288, 311, 324, 351, 353, 369, 387, 395, 490, 491, 525, 526, 527, 579, 580, 614, 615, 643, 644, 645, 649, 694, 705, 715, 727, 740, 762, 774, 793, 794, 809, 813, 814, 815], "over": [50, 54, 111, 343, 350, 649], "identifi": [50, 111, 343, 346, 347, 350, 413, 431, 439, 447, 452, 456, 463, 466, 474, 645, 649], "either": [50, 52, 62, 109, 110, 115, 179, 190, 202, 213, 242, 293, 329, 343, 403, 405, 407, 416, 434, 436, 442, 450, 460, 469, 477, 645, 648, 649, 694, 699, 703, 705, 710, 713, 715, 720, 724, 746, 780, 815], "three": [50, 51, 52, 54, 56, 109, 110, 343, 345, 351, 403, 429, 445, 454, 643, 645, 648, 694], "gener": [50, 51, 52, 56, 110, 111, 114, 175, 182, 186, 197, 209, 345, 347, 350, 351, 352, 409, 452, 459, 499, 537, 588, 604, 623, 634, 641, 643, 644, 647, 648, 705], "triangular": [50, 114, 133], "mathemat": [50, 109, 113, 349, 350, 504, 505, 506, 542, 544, 545, 593, 594, 595, 628, 629, 630], "detail": [50, 109, 111, 113, 158, 184, 195, 349, 727, 740, 762, 774], "concis": [50, 113, 349], "explan": [50, 113, 349, 796], "introduct": [50, 111, 113, 346, 349], "modul": [50, 56, 113, 349, 351, 645, 648], "refer": [50, 56, 113, 343, 349, 408, 504, 505, 506, 542, 544, 545, 593, 594, 595, 628, 629, 630, 648, 727, 740, 762, 774], "purpos": [51, 643], "strategi": [51, 346], "version": [51, 62, 67, 80, 110, 111, 181, 192, 204, 215, 230, 272, 283, 320, 343, 352, 645], "prefer": [51, 54, 110, 648], "eight": 51, "basic": [51, 113, 349], "usag": [51, 113, 349], "si": 51, "s1": 51, "s5": 51, "v1": 51, "v5": 51, "transform": [51, 343, 351, 352, 431, 439, 447, 456, 466, 474, 502, 540, 591, 626, 645], "prior": [51, 351], "copi": [51, 403, 722], "loc": [51, 103, 111, 144, 408, 645], "8879": 51, "109": [51, 645, 647], "sun": 51, "mai": [51, 54, 57, 109, 110, 343, 351, 431, 439, 447, 452, 456, 463, 466, 474, 649, 694, 705], "21": [51, 52, 110, 111, 346, 347, 352, 645, 648, 649], "2017": [51, 114, 350, 352, 648], "0060": [51, 111, 645], "7381": 51, "0029": [51, 111, 645, 647], "0092": 51, "0001": [51, 110, 111, 112, 184, 346, 352, 645, 646, 647], "0011": [51, 346, 645, 646, 647], "1281": 51, "8980": 51, "0068": [51, 346, 645], "For": [52, 55, 100, 343, 345, 346, 351, 649], "share": [52, 55, 651], "alpha_": [52, 346, 351], "beta_": [52, 343, 645, 649], "sandwich": 52, "sg": 52, "defin": [52, 171, 182, 200, 205, 236, 282, 306, 310, 343, 351, 352, 486, 487, 490, 521, 522, 525, 526, 575, 576, 579, 610, 611, 614, 649, 727, 739, 740, 750, 754, 762, 774, 784, 788, 795], "i_": [52, 645, 649], "sigma_": [52, 351, 645], "sum_": [52, 115, 121, 127, 133, 152, 155, 164, 193, 343, 351, 353, 369, 387, 436, 649, 680, 688, 727, 740, 762, 774], "stack": [52, 353, 361, 369, 377, 387, 395, 645, 649, 694, 705, 715], "vector": [52, 114, 200, 343, 645, 649, 680, 688, 694, 700, 705, 711, 715, 721], "g_": [52, 164, 343, 351, 649], "epsilon": [52, 115, 121, 127, 133, 155, 200, 236, 282, 300, 306, 308, 310, 343, 351, 387, 395, 428, 645, 647, 649, 694, 705, 715, 750, 754, 784, 788], "align": [52, 54, 179, 190, 202, 213, 343, 351, 647, 649], "gamma": [52, 57, 109, 114, 115, 121, 133, 307, 343, 351, 688], "bw": [52, 133, 139, 140, 141, 343, 351, 353, 369], "frac": [52, 310, 343, 351, 490, 525, 526, 579, 614, 647, 649, 750, 754, 784, 788, 795], "just": [52, 111, 112, 346, 351, 647], "after": [52, 58, 59, 113, 343, 347, 348, 349, 352], "chi_": [52, 300, 343, 649], "row": [52, 98, 109, 111, 142, 146, 217, 221, 253, 305, 340, 343, 345, 513, 553, 602, 639, 647], "column": [52, 54, 100, 104, 108, 109, 110, 111, 142, 143, 146, 217, 221, 242, 293, 329, 343, 345, 346, 353, 361, 369, 387, 395, 403, 409, 499, 537, 588, 623, 641, 645, 646, 647, 649, 655, 658, 661, 699, 703, 710, 713, 720, 724, 746, 780], "ldot": [52, 306, 308, 343, 645, 649, 680, 688, 694, 705, 715], "cannot": [52, 111, 307, 308, 346, 347, 350, 649], "its": [52, 111, 346, 649], "solut": [52, 54, 109, 346, 649], "multi": [52, 403, 413, 414, 431, 439, 447, 456, 466, 474], "throw": 52, "awai": 52, "remov": [52, 54, 345, 346, 352, 704, 714, 725, 807, 812, 813], "virtual": [52, 346, 645, 646], "longer": [52, 346, 645], "c_": 52, "eta_": [52, 343], "compens": 52, "1s": [52, 343, 649], "conduct": [52, 113, 349], "treat": [52, 57, 100, 111, 179, 190, 202, 213, 242, 282, 293, 308, 310, 329, 343, 345, 403, 429, 434, 442, 445, 450, 452, 454, 456, 460, 464, 469, 472, 477, 703, 713, 724, 746, 780], "problem": [52, 110, 343, 647, 649], "were": [52, 54, 221, 345, 346, 649], "third": [52, 645], "foc": 52, "ccc": 52, "block": [52, 111, 112, 175, 186, 197, 209, 221, 343, 645, 649, 651, 666, 670, 674, 684, 694, 705, 715], "0_": 52, "times1": 52, "u": [52, 111, 343], "term": [52, 68, 69, 80, 230, 283, 320, 343, 346, 351, 649, 750, 784], "becom": 52, "previou": [52, 111, 343, 346, 350, 645], "tild": [52, 306, 343, 351, 649, 651, 666, 674], "lambda_": 52, "piec": 52, "structur": [52, 54, 114, 175, 179, 184, 186, 190, 195, 197, 202, 209, 213, 345, 346, 351, 431, 439, 447, 456, 466, 474, 645, 647, 648, 694, 703, 705, 713, 715, 724, 746, 780], "element": [52, 98, 114, 115, 253, 305, 340, 513, 553, 602, 639, 641, 645, 649, 651, 666, 674], "occur": [52, 346, 649], "bottom": 52, "solv": [52, 343, 649], "sometim": 52, "doubt": 52, "about": [52, 111, 645, 647], "vdot": [52, 649, 694, 705, 715], "write": [52, 343, 649], "code": [52, 54, 55, 111, 343, 345, 346, 452, 456, 649], "bryzgalova": [52, 644], "cochran": [52, 644], "jagannathanet": [52, 644], "bug": 54, "iv2sl": [54, 56, 57, 98, 111, 112, 114, 182, 193, 205, 253, 270, 305, 340, 643, 647], "relat": [54, 110, 111, 114, 343, 351], "predict": [54, 111, 482, 483, 484, 517, 518, 519, 571, 572, 573, 606, 607, 608, 647], "would": [54, 110, 111, 112, 221, 343, 346, 347, 649, 694, 715], "produc": [54, 57, 105, 110, 111, 112, 142, 184, 205, 209, 308, 345, 346, 351, 445, 454, 464, 472, 645, 646, 647, 649], "nan": [54, 345, 489, 524, 578, 613, 796, 799], "exog": [54, 57, 109, 110, 111, 112, 114, 154, 157, 167, 170, 171, 175, 179, 182, 186, 190, 193, 197, 202, 205, 209, 213, 216, 221, 242, 272, 293, 300, 310, 329, 345, 346, 350, 428, 434, 436, 442, 444, 450, 452, 460, 463, 469, 471, 477, 490, 499, 513, 526, 537, 553, 579, 588, 602, 614, 623, 639, 645, 646, 647, 648, 683, 693, 694, 701, 703, 705, 713, 715, 722, 724, 746, 780], "endog": [54, 111, 112, 114, 154, 157, 167, 170, 171, 175, 179, 182, 186, 190, 193, 197, 202, 205, 209, 213, 216, 236, 242, 271, 272, 273, 293, 306, 310, 329, 647, 683, 693, 694, 701, 703, 705, 713, 724, 739, 746, 780], "had": 54, "indexwarn": [54, 111], "now": [54, 109, 112, 349], "shown": [54, 645], "ad": [54, 110, 346, 351, 645, 807, 808, 810, 811, 815, 816], "stacklevel": 54, "improv": [54, 55, 112, 643, 645, 649, 694, 715], "accuraci": [54, 649, 694, 715], "locat": [54, 56, 110, 112, 171, 177, 178, 182, 188, 189, 193, 199, 201, 205, 211, 212, 343, 403, 415, 428, 433, 436, 441, 444, 449, 452, 458, 463, 468, 471, 476, 645], "clarifi": 54, "f": [54, 68, 80, 109, 110, 111, 112, 114, 217, 220, 230, 258, 261, 270, 273, 283, 311, 320, 343, 345, 346, 347, 350, 352, 490, 525, 526, 555, 558, 579, 614, 644, 645, 646, 647, 649, 801, 815], "messag": 54, "parser": 54, "accovari": 54, "incorrectli": 54, "overwritten": 54, "panel": [54, 56, 110, 112, 348, 350, 351, 352, 644], "panelresult": [54, 429, 437, 445, 464], "corr_squared_between": [54, 479, 515, 569, 604], "corr_squared_overal": [54, 479, 515, 569, 604], "corr_squared_within": [54, 479, 515, 569, 604], "breusch_pagan": 54, "likelihood_ratio": 54, "diagon": [54, 649, 651, 666, 670, 674, 684, 694, 705, 715, 740, 774], "affect": [54, 114, 306, 346], "cluster": [54, 62, 110, 114, 115, 119, 158, 168, 173, 182, 184, 193, 207, 343, 361, 362, 429, 435, 443, 445, 451, 454, 456, 461, 464, 470, 472, 478, 641, 644, 649, 651, 697, 718, 793, 795], "rank_check": 54, "rank": [54, 343, 431, 439, 447, 452, 456, 463, 466, 474], "check": [54, 110, 142, 172, 183, 194, 206, 431, 439, 447, 452, 456, 463, 466, 474, 697, 708, 718], "skip": [54, 431, 439, 447, 452, 456, 463, 466, 474], "defici": 54, "caution": [54, 111, 645, 649], "numpi": [54, 57, 98, 100, 104, 109, 111, 112, 114, 142, 175, 186, 197, 209, 253, 305, 340, 352, 403, 407, 425, 426, 513, 553, 602, 639, 641, 645, 646, 647, 699, 710, 720], "linalg": [54, 57, 62, 109], "lstsq": 54, "better": [54, 110, 111], "svd": 54, "matrix_rank": 54, "lapack_driv": 54, "qr": 54, "calcul": [54, 357, 365, 373, 383, 391, 399, 648], "minor": 54, "releas": [54, 55, 56, 349], "wheel": 54, "build": [54, 110], "issu": [54, 80, 230, 231, 283, 284, 320, 346], "python": [54, 55], "perform": [54, 114, 172, 183, 194, 206, 343, 350, 431, 436, 439, 447, 452, 456, 463, 466, 474, 643], "oper": 54, "pyhdf": [54, 62], "absorbingl": [54, 56, 68, 109], "absorb": [54, 56, 113, 452, 456], "categor": [54, 57, 100, 101, 104, 109, 142, 346, 347, 403, 429, 445, 452, 454, 464, 472, 513, 553, 602, 639], "unweight": [54, 109], "gh157": 54, "system": [54, 56, 644, 645, 646], "clusteredcovari": [54, 62, 114, 173, 207, 697, 718], "gh241": 54, "kernel_optimal_bandwidth": 54, "incorrect": 54, "tune": 54, "gh242": 54, "variou": [54, 112, 346], "gh239": 54, "gh240": 54, "mypi": 54, "gh232": 54, "gh234": 54, "gh235": 54, "gh238": 54, "public": 54, "face": [54, 111], "gh228": 54, "gh229": 54, "famamacbethresult": [54, 437], "all_param": [54, 377, 479], "nparam": [54, 380, 480], "period": [54, 345, 346, 347, 350, 351, 352, 377, 380, 403, 409, 436, 479, 480, 641, 645, 649], "gh230": 54, "blacken": 54, "mcelroi": [54, 645, 646, 647, 754, 788], "berndt": [54, 645, 646, 647, 754, 788], "gh215": 54, "nep": 54, "29": [54, 111, 347, 352, 644, 645], "gh222": 54, "instal": [54, 62], "gh217": 54, "switch": 54, "cach": [54, 62], "inherit": [54, 110, 343, 491, 527, 580, 615], "gh211": 54, "panda": [54, 57, 100, 104, 109, 110, 111, 114, 142, 345, 346, 347, 349, 403, 406, 421, 513, 553, 602, 639, 645, 646, 647, 699, 710, 720], "handl": [54, 351, 403, 454], "veri": [54, 110, 111, 352], "dimension": [54, 56, 57, 109, 344, 403, 649, 795], "dummi": [54, 57, 100, 108, 109, 111, 142, 343, 350, 351, 352, 403, 407, 454], "been": [54, 58, 59, 110, 217, 282, 310, 345, 350, 697, 718], "000": [54, 345, 347, 352, 645], "categori": [54, 100, 108, 111, 142, 343, 345, 403, 452, 456, 641, 694], "per": [54, 111, 346, 479, 488, 510, 515, 523, 535, 549, 569, 577, 599, 604, 612, 635], "entiti": [54, 345, 348, 350, 351, 352, 353, 361, 369, 377, 387, 395, 403, 405, 407, 409, 411, 416, 418, 428, 429, 431, 436, 439, 444, 445, 447, 452, 453, 454, 456, 463, 464, 466, 471, 472, 474, 479, 482, 484, 488, 506, 515, 517, 519, 523, 545, 569, 571, 573, 577, 595, 604, 606, 608, 612, 630, 641], "id": [54, 110, 111, 346, 352, 353, 361, 369, 387, 395, 411, 424, 429, 445, 645, 648, 651], "drop_absorb": [54, 57, 452, 456], "panelol": [54, 56, 345, 346, 348, 349, 350, 513, 553, 602, 639, 643], "automat": [54, 111, 112, 133, 348, 437, 454, 644, 645], "gh206": 54, "cython": 54, "node": 54, "select": [54, 114, 133, 242, 293, 329, 499, 537, 588, 623, 644, 647, 688, 697, 718, 746, 780], "singleton": [54, 452, 456], "precondit": 54, "use_lsmr": [54, 454], "run": [54, 110, 111, 200, 346], "singelton": 54, "never": [54, 343, 347], "core": [54, 346, 793, 794], "graph": 54, "slope": [54, 57], "exclud": [54, 80, 230, 283, 320, 343, 346, 490, 491, 526, 527, 579, 580, 614, 615, 645, 649], "gh191": 54, "lsmr": [54, 57, 62, 109], "through": [54, 83, 110, 112, 113, 193, 234, 287, 323, 351, 493, 529, 582, 617, 645], "spars": [54, 57, 62, 100, 104, 109, 454], "extend": [54, 111, 343, 649], "exogen": [54, 57, 59, 111, 112, 114, 115, 121, 127, 133, 152, 155, 164, 171, 179, 182, 184, 190, 193, 202, 205, 213, 217, 221, 236, 242, 270, 272, 282, 293, 306, 307, 308, 310, 329, 343, 345, 353, 361, 369, 377, 387, 395, 428, 431, 434, 436, 439, 442, 444, 447, 450, 452, 456, 460, 463, 466, 469, 471, 474, 477, 484, 499, 506, 519, 537, 545, 573, 588, 595, 608, 623, 630, 645, 647, 648, 649, 651, 666, 670, 674, 684, 694, 701, 703, 705, 708, 713, 715, 722, 724, 746, 780], "being": [54, 111, 221, 343, 403], "correctli": [54, 110, 343], "label": [54, 142, 143, 150, 645, 647, 694, 699, 703, 705, 710, 713, 715, 720, 724, 726, 735, 746, 761, 770, 780], "ol": [54, 56, 111, 114, 282, 307, 308, 310, 311, 343, 344, 346, 350, 643, 646, 647, 649, 651, 666, 670, 674, 697, 715, 718], "gh185": 54, "wald_test": 54, "renam": 54, "test_linear_constraint": 54, "memori": [54, 407, 454, 648], "avoid": [54, 57, 193, 407, 647, 649], "entity_effect": [54, 345, 346, 350, 352, 452, 454, 513, 553, 602, 639], "time_effect": [54, 346, 452], "By": [54, 110, 114, 346, 347, 645, 694, 705, 715], "algorithm": [54, 454], "whenev": [54, 205, 502, 540, 591, 626], "gib": [54, 454], "gh182": 54, "comparison": [54, 110, 111, 112, 258, 342, 346, 349, 555, 645], "compar": [54, 111, 258, 555, 645, 647], "instead": [54, 67, 111, 114, 181, 192, 204, 215, 346, 648], "gh178": 54, "did": 54, "famamacbeth": [54, 56, 349, 643], "gh176": 54, "fail": 54, "gh173": 54, "extern": 54, "packag": [54, 55, 114, 345, 348, 349, 352, 644], "manag": 54, "custom": [54, 114], "less": [54, 110, 114, 346], "gh172": 54, "gallant": [54, 133, 164, 353, 369, 645, 661, 674, 688], "gh170": 54, "wooldridg": [54, 110, 111, 113, 270, 306, 307, 308, 343, 346, 349, 644, 645, 646, 647], "invalid": [54, 796], "invalidteststatist": [54, 236, 271, 272, 273, 300, 306, 727, 740, 762, 774, 801], "add": [54, 57, 111, 258, 342, 346, 555, 643, 695, 706, 716], "inform": [54, 56, 110, 111, 114, 153, 156, 166, 169, 205, 345, 403, 411, 424, 645, 651, 653, 655, 657, 658, 660, 661, 664, 666, 668, 670, 672, 674, 677, 681, 685, 690, 697, 718], "ivgmmcu": [54, 56, 110, 114, 171, 182, 205, 220, 643], "intern": [54, 645], "retain": 54, "index": [54, 56, 111, 142, 150, 345, 346, 347, 350, 351, 403, 410, 423, 431, 439, 447, 456, 466, 474, 645, 649, 694, 705, 715], "origin": [54, 110, 111, 179, 190, 202, 213, 221, 242, 293, 329, 348, 434, 435, 442, 443, 450, 451, 460, 461, 469, 470, 477, 478, 499, 502, 537, 540, 588, 591, 623, 626, 703, 713, 724, 746, 780], "conceiv": 54, "spell": 54, "document": [54, 55, 56, 62, 112, 173, 207, 346, 504, 505, 506, 542, 544, 545, 593, 594, 595, 628, 629, 630], "docstr": [54, 55, 62, 173, 207], "prevent": 54, "charact": 54, "kappa": [54, 110, 114, 115, 121, 127, 133, 171, 172, 205, 206, 209, 220, 270, 271, 273, 311, 343], "liml": [54, 56, 205, 209, 271, 273, 643], "licens": 54, "clean": 54, "across": [54, 114, 184, 345, 346, 645, 648, 649, 680, 688], "out": [54, 110, 242, 293, 329, 499, 537, 588, 623, 647, 746, 780], "retriev": [54, 62], "macbeth": [54, 56, 377, 436, 479, 643], "previous": [54, 645], "ignor": [54, 68, 70, 114, 346, 348, 350, 483, 505, 518, 544, 572, 594, 607, 629], "3sl": [54, 56, 643, 648, 694, 699, 710, 715], "random": [54, 56, 57, 100, 104, 109, 471, 472, 604, 643, 645, 646, 647, 699, 710, 720], "pool": [54, 56, 346, 436, 463, 525, 643], "instrument": [54, 56, 57, 111, 112, 114, 115, 121, 127, 133, 152, 154, 155, 157, 158, 164, 167, 170, 171, 172, 175, 182, 183, 184, 186, 193, 194, 197, 200, 205, 206, 209, 217, 231, 236, 272, 282, 284, 300, 306, 307, 308, 310, 343, 644, 647, 648, 649, 655, 658, 661, 680, 683, 684, 687, 688, 693, 694, 701, 705, 708, 715], "welcom": 55, "area": [55, 110, 112], "extens": [55, 346, 347, 647, 649], "program": 55, "typo": [55, 645], "experienc": 55, "programm": 55, "clear": 55, "opportun": [55, 114], "refactor": 55, "simplif": 55, "task": 55, "Of": 55, "cours": 55, "entir": [55, 694, 705, 715], "cover": [55, 346], "alwai": [55, 80, 111, 142, 147, 155, 230, 283, 320, 343, 345, 348, 353, 361, 369, 387, 395, 649, 684, 796, 797, 799], "github": 55, "fork": 55, "repo": 55, "branch": 55, "your": 55, "new": [55, 345], "featur": [55, 112, 645], "submit": 55, "pull": 55, "request": [55, 796], "stabl": 56, "latest": 56, "doc": 56, "recent": [56, 645], "develop": [56, 350], "devel": 56, "miss": [56, 111, 171, 177, 182, 188, 193, 199, 205, 211, 242, 293, 329, 345, 403, 415, 428, 433, 435, 436, 441, 443, 444, 449, 451, 452, 458, 461, 463, 468, 470, 471, 476, 478, 499, 537, 588, 623, 641, 643, 647, 746, 780], "statsmodel": [56, 110, 111, 112, 114, 346, 347, 350, 352, 513, 553, 602, 639, 643, 645, 648], "randomeffect": [56, 346, 347, 348, 350, 643], "firstdifferenceol": [56, 346, 347, 348, 350, 643], "betweenol": [56, 346, 347, 348, 350, 439, 643], "pooledol": [56, 346, 347, 350, 452, 643], "equat": [56, 454, 644, 646, 648, 649, 655, 658, 661, 680, 682, 686, 687, 688, 692, 694, 699, 700, 701, 703, 705, 710, 711, 713, 715, 720, 721, 722, 724, 726, 735, 746, 750, 754, 761, 770, 780, 784, 788], "limit": [56, 110, 114, 205, 643, 697, 718], "ml": [56, 205], "ivliml": [56, 57, 110, 114, 171, 182, 193, 270, 643], "ivgmm": [56, 110, 114, 171, 193, 195, 205, 220, 643], "iv3sl": [56, 643, 647, 648, 742, 776], "ivsystemgmm": [56, 643, 647], "plan": 56, "contribut": 56, "log": [56, 98, 110, 111, 112, 114, 175, 186, 197, 209, 253, 305, 340, 345, 346, 347, 350, 352, 479, 494, 515, 531, 569, 583, 604, 618, 645, 649, 740, 774], "interact": [57, 62], "arraylik": 57, "endogen": [57, 111, 114, 115, 121, 127, 133, 158, 171, 175, 179, 182, 186, 190, 193, 197, 202, 205, 209, 213, 217, 218, 221, 242, 272, 282, 293, 300, 306, 307, 308, 310, 329, 343, 645, 646, 647, 648, 649, 694, 701, 703, 705, 713, 715, 724, 746, 780], "nexog": [57, 171, 179, 182, 190, 193, 202, 205, 213, 242, 293, 329, 499, 537, 588, 623, 641, 701], "cat": [57, 100, 104, 109], "cont": [57, 100, 104], "list": [57, 62, 98, 105, 110, 111, 112, 143, 150, 173, 175, 186, 197, 207, 209, 221, 253, 258, 282, 305, 310, 340, 342, 346, 403, 410, 423, 427, 513, 515, 530, 553, 555, 602, 639, 641, 651, 655, 658, 661, 666, 670, 674, 682, 683, 686, 687, 692, 693, 702, 712, 723, 735, 770, 810, 811, 816], "cartesian": [57, 100, 108], "product": [57, 100, 104, 108, 114, 184, 708], "capabl": 57, "million": 57, "y_i": [57, 109, 114, 193, 200, 307, 645, 646], "x_i": [57, 109, 193, 200, 387, 645], "z_i": [57, 109, 115, 121, 133, 140, 141, 152, 155, 164, 200, 236], "epsilon_i": [57, 109, 114, 152, 155, 164, 193, 307, 369, 645], "z": [57, 112, 115, 121, 127, 133, 140, 154, 157, 158, 167, 170, 171, 172, 182, 183, 194, 200, 205, 206, 282, 300, 306, 310, 343, 428, 649, 655, 658, 661, 683, 684, 687, 693, 694, 705, 793, 794], "fewer": 57, "y": [57, 109, 112, 115, 121, 127, 133, 158, 171, 172, 182, 183, 194, 200, 205, 206, 343, 346, 347, 351, 352, 353, 361, 369, 377, 387, 395, 428, 429, 431, 437, 439, 445, 447, 454, 456, 464, 466, 472, 474, 482, 484, 517, 519, 571, 573, 606, 608, 641, 645, 649, 694, 705, 715], "known": [57, 111, 200, 649], "invert": 57, "inner": [57, 112, 345, 647], "frish": 57, "waugh": 57, "lovel": 57, "orthogon": [57, 109, 217, 306, 343, 351], "x": [57, 109, 111, 112, 115, 121, 127, 133, 142, 154, 157, 158, 167, 170, 171, 172, 182, 183, 194, 200, 205, 206, 343, 345, 346, 347, 351, 353, 361, 369, 377, 387, 395, 403, 428, 429, 437, 445, 454, 464, 472, 482, 484, 517, 519, 571, 573, 606, 608, 641, 645, 647, 649, 651, 655, 658, 661, 666, 670, 674, 682, 683, 686, 687, 692, 693, 694, 705, 715], "perfectli": [57, 346], "linearli": 57, "particular": [57, 111, 114, 158, 346, 350, 647, 703, 713, 724, 746, 780], "restrict": [57, 98, 220, 236, 253, 270, 271, 272, 273, 300, 305, 340, 343, 351, 352, 490, 491, 513, 526, 527, 553, 579, 580, 602, 614, 615, 639, 648, 649, 726, 739], "captur": 57, "redund": 57, "compon": [57, 113, 306, 307, 308, 343, 346, 350, 351, 647, 649], "np": [57, 98, 100, 104, 109, 111, 112, 114, 175, 186, 197, 209, 253, 305, 340, 345, 352, 513, 553, 602, 639, 645, 646, 647, 699, 710, 720, 796, 799], "pd": [57, 100, 104, 109, 110, 111, 114, 345, 346, 513, 553, 602, 639, 645, 646, 647, 699, 710, 720], "dep": [57, 109, 110, 111, 112, 114, 216, 345, 346, 347, 350, 352, 645, 646, 647], "standard_norm": [57, 100, 104, 109, 647], "20000": 57, "randint": [57, 100, 104, 109, 645], "rang": [57, 100, 104, 111, 645], "concat": [57, 100, 104, 110, 111, 645], "iaction": 57, "encod": 57, "absorbed_depend": 57, "absorbed_exog": 57, "has_const": [57, 68, 111, 171, 182, 193, 205, 220, 270, 311, 428, 436, 444, 452, 463, 471, 694, 705, 715], "rais": [58, 59, 62, 114, 346, 403, 812, 813], "runtimeerror": [58, 59, 62], "call": [58, 59, 110, 346, 352, 645], "ivdata": [60, 61, 64, 66], "auto": [62, 697, 718], "absorb_opt": [62, 109], "use_cach": [62, 109], "lsmr_option": 62, "unadjust": [62, 110, 111, 114, 155, 158, 173, 182, 184, 193, 207, 217, 343, 345, 346, 347, 350, 352, 429, 437, 445, 454, 464, 472, 645, 646, 647, 648, 684, 697, 705, 708, 710, 718], "homoskedast": [62, 110, 111, 114, 127, 155, 158, 173, 182, 184, 193, 207, 343, 346, 395, 428, 429, 431, 436, 437, 439, 444, 445, 447, 452, 454, 456, 463, 464, 466, 471, 472, 474, 490, 525, 526, 579, 614, 645, 646, 647, 655, 658, 661, 670, 684, 697, 708, 710, 718, 740, 774], "classic": [62, 110, 111, 173, 207, 346, 350, 490, 526, 579, 614, 697, 708, 718], "hdfe": [62, 109], "fallback": 62, "forc": [62, 111, 114, 346, 645, 697, 718], "binari": [62, 100], "creat": [62, 110, 111, 171, 174, 182, 185, 193, 196, 205, 208, 346, 431, 439, 447, 456, 466, 474, 499, 537, 588, 623, 808], "purg": [62, 484, 506, 519, 545, 573, 595, 608, 630], "store": [62, 647, 648], "dramat": 62, "speed": 62, "ass": 62, "deprec": [62, 349, 352], "accord": [62, 173, 207, 405, 407, 413, 416], "command": [62, 110, 173, 207, 345, 347], "absorbinglsresult": 62, "homoskedasticcovari": [62, 114, 158, 173, 207, 697, 718], "configur": [62, 114, 152, 153, 155, 156, 164, 166, 168, 169, 173, 184, 195, 207, 220, 254, 429, 437, 445, 454, 464, 472, 651, 653, 655, 657, 658, 660, 661, 664, 666, 668, 670, 672, 674, 677, 680, 681, 684, 685, 688, 690, 726, 730, 758, 761, 765], "hash": [62, 100], "content": 62, "64": [62, 110, 346, 647], "bit": 62, "xxhash": 62, "256": 62, "reus": 62, "held": 62, "nvar": [65, 67, 98, 115, 121, 127, 133, 154, 157, 158, 167, 170, 172, 179, 180, 181, 183, 190, 191, 192, 194, 200, 202, 203, 204, 206, 213, 214, 215, 253, 305, 340, 403, 434, 442, 450, 460, 469, 477, 486, 487, 513, 521, 522, 553, 575, 576, 602, 610, 611, 639, 683, 703, 713, 722, 724], "raw": [67, 181, 192, 204, 215], "resid": [67, 68, 83, 110, 111, 181, 192, 204, 215, 220, 234, 270, 287, 311, 323, 352, 479, 493, 515, 529, 569, 582, 604, 617, 726, 761], "absorbed_effect": 68, "absorbed_rsquar": 68, "df_absorb": 68, "df_model": [68, 220, 270, 311, 479, 515, 569, 604, 726, 761], "f_statist": [68, 220, 258, 270, 311, 479, 515, 555, 569, 604], "fitted_valu": [68, 220, 270, 311, 479, 515, 569, 604, 726, 761], "equival": [68, 82, 171, 176, 182, 187, 193, 198, 205, 210, 220, 233, 270, 286, 311, 322, 343, 346, 347, 350, 649], "idiosyncrat": [68, 220, 242, 270, 293, 311, 329, 346, 350, 351, 479, 499, 515, 537, 569, 588, 604, 623, 746, 780], "model_ss": [68, 220, 270, 311, 479, 515, 569, 604, 726, 761], "resid_ss": [68, 220, 270, 311, 479, 515, 569, 604, 726, 761], "rsquared_adj": [68, 220, 258, 270, 311], "s2": [68, 115, 121, 127, 133, 158, 220, 270, 311, 353, 361, 369, 377, 387, 395, 479, 515, 569, 604], "varianc": [68, 93, 111, 115, 120, 121, 126, 127, 132, 133, 138, 158, 163, 200, 220, 236, 248, 270, 299, 300, 311, 335, 343, 346, 351, 353, 360, 361, 368, 369, 376, 377, 386, 387, 394, 395, 402, 428, 431, 435, 436, 439, 443, 444, 447, 451, 452, 456, 461, 463, 466, 470, 471, 472, 474, 478, 479, 507, 515, 546, 552, 569, 596, 604, 631, 638, 641, 645, 646, 739, 740, 754, 774, 788], "wresid": [68, 220, 270, 311, 479, 515, 569, 604, 726, 761], "level": [71, 222, 274, 312, 345, 403, 431, 439, 447, 456, 466, 474, 481, 516, 570, 605, 645, 728, 763], "95": [71, 222, 274, 312, 481, 516, 570, 605, 645, 647, 728, 763], "confid": [71, 222, 274, 312, 481, 516, 570, 605, 728, 763], "interv": [71, 222, 274, 312, 479, 481, 510, 515, 516, 549, 569, 570, 599, 604, 605, 635, 728, 763], "despit": [80, 111, 230, 283, 320], "divid": [80, 110, 230, 283, 320, 491, 527, 580, 615], "against": [80, 110, 230, 283, 320, 343, 346], "It": [83, 98, 110, 111, 234, 253, 287, 305, 323, 340, 343, 345, 346, 347, 350, 351, 352, 493, 504, 505, 506, 513, 529, 542, 544, 545, 553, 582, 593, 594, 595, 602, 617, 628, 629, 630, 639, 645, 646, 647, 649, 699, 710, 720, 727, 740, 750, 762, 774, 784], "dimens": [83, 142, 148, 234, 287, 323, 345, 346, 403, 417, 493, 529, 582, 617], "shape": [83, 100, 104, 111, 142, 234, 287, 323, 345, 403, 493, 502, 529, 540, 582, 591, 617, 626, 645, 651], "natur": [83, 110, 111, 234, 287, 323, 493, 529, 582, 617, 647], "inclus": [83, 234, 287, 323, 346, 493, 529, 582, 617], "constraint": [98, 253, 305, 340, 347, 513, 553, 602, 639, 646, 647, 648, 651, 655, 658, 661, 666, 670, 674, 694, 695, 704, 705, 706, 714, 715, 716, 725], "q": [98, 221, 236, 253, 271, 273, 282, 305, 306, 310, 340, 343, 513, 553, 602, 639, 645, 695, 706, 716, 739], "appli": [98, 110, 111, 112, 205, 253, 305, 340, 346, 351, 361, 472, 513, 553, 602, 639, 645, 649, 651, 666, 670, 674], "simplest": [98, 114, 253, 305, 340, 343, 513, 553, 602, 639, 699, 710, 720], "comma": [98, 253, 305, 340, 513, 553, 602, 639], "string": [98, 114, 142, 253, 305, 340, 350, 403, 513, 553, 602, 639, 645, 646, 694, 699, 705, 710, 715, 720], "x1": [98, 112, 253, 305, 340, 431, 439, 447, 456, 466, 474, 513, 553, 602, 639, 647], "x2": [98, 112, 253, 305, 340, 513, 553, 602, 639, 647], "x3": [98, 112, 253, 305, 340, 513, 553, 602, 639], "without": [98, 172, 206, 253, 305, 340, 352, 513, 553, 602, 639, 647], "valid": [98, 111, 112, 114, 158, 175, 186, 197, 209, 253, 305, 340, 343, 431, 439, 447, 452, 456, 463, 466, 474, 513, 553, 602, 639, 647, 697, 708, 710, 718, 796], "examin": [98, 110, 111, 253, 271, 273, 305, 306, 307, 308, 340, 343, 513, 553, 602, 639, 649], "h_0": [98, 253, 305, 340, 513, 553, 602, 639], "theta": [98, 253, 305, 340, 346, 351, 513, 553, 602, 604, 639], "2_q": [98, 236, 253, 305, 340, 513, 553, 602, 639, 739], "wage": [98, 114, 175, 186, 197, 209, 253, 305, 340, 346, 350, 645, 646, 647], "exper": [98, 111, 114, 175, 186, 197, 209, 253, 305, 340, 346, 645, 646, 647, 648], "brthord": [98, 111, 175, 186, 197, 209, 253, 305, 340], "educ": [98, 110, 112, 114, 175, 186, 197, 209, 253, 305, 340, 346, 644, 645, 646, 647, 727, 740, 762, 774], "sib": [98, 111, 114, 175, 186, 197, 209, 253, 305, 340], "dataarrai": [100, 142, 403], "best": [100, 345, 699, 710, 720], "convert": [100, 142, 345, 403], "ncat": [100, 108, 641], "ncont": [100, 104, 108], "rs": [100, 104, 109, 645, 647], "randomst": [100, 104, 109, 641, 645], "100000": [100, 104, 352], "cats_df": 100, "count": [100, 110, 111, 346, 351], "top": 100, "freq": 100, "20251": 100, "20195": 100, "20331": 100, "20158": 100, "cart": [100, 104], "1875": 100, "invari": [100, 105], "permut": [100, 105], "isnul": [100, 142, 171, 182, 193, 205, 403], "static": [104, 172, 175, 183, 186, 197, 206, 209], "frame": [104, 699, 710, 720], "conveni": 104, "720": 104, "tupl": [105, 142, 151, 194, 354, 362, 370, 378, 388, 396, 422, 645, 694, 705, 715, 746, 780, 813], "csc_matrix": 108, "dummy_interact": 108, "prod_": 108, "distinct": [108, 361, 645, 699, 710, 720], "grow": 109, "notebook": [109, 111], "how": [109, 110, 111, 343, 346, 349, 645, 647, 649], "simul": [109, 641, 647], "mirror": 109, "state": [109, 111, 645], "worker": [109, 645], "1_000_000": 109, "state_id": 109, "state_effect": 109, "max": [109, 110, 111, 345, 346, 347, 350, 351, 352], "firm_id": 109, "firm_effect": 109, "ep": [109, 154, 157, 167, 170, 353, 361, 369, 377, 387, 395, 651, 655, 658, 661, 666, 670, 674, 682, 683, 686, 687, 692, 693], "column_stack": [109, 647], "ones": [109, 111, 645, 649], "intercept": [109, 111, 112, 347, 348, 351, 352, 645], "trick": 109, "meaning": [109, 352, 645], "done": [109, 646], "ls": [109, 110], "8377": 109, "adj": [109, 110, 111, 112, 114, 352, 645, 647], "7975": 109, "1000000": 109, "962e": 109, "06": [109, 111, 345, 697, 708, 718], "6664": 109, "varaibl": 109, "987e": 109, "05": [109, 111, 647], "9477": 109, "1057": [109, 346], "9460": 109, "9495": [109, 646], "9994": [109, 645], "990": 109, "89": [109, 111, 345, 647], "9974": [109, 645], "0008": [109, 111, 346, 645, 646], "989": [109, 645], "09": 109, "9989": 109, "0028": [109, 111, 346, 647], "span": [109, 345, 649], "03": [109, 352], "satisfi": [109, 179, 190, 202, 213, 343, 694, 715], "datetim": 109, "dt": 109, "total_second": 109, "315728": 109, "465724": 109, "toler": [109, 697, 708, 718], "ax": [109, 345], "b": [109, 343, 351, 644, 645], "198676": 109, "damp": 109, "00000000000000e": 109, "00": [109, 346, 350, 647], "atol": 109, "00e": 109, "08": [109, 347, 352, 647], "conlim": 109, "btol": 109, "maxit": 109, "itn": 109, "norm": 109, "compat": [109, 343], "cond": [109, 110, 112], "00000e": 109, "417e": 109, "126e": 109, "0e": 109, "6e": 109, "83446e": 109, "02": [109, 111, 647], "677e": 109, "377e": 109, "9e": [109, 345], "01": 109, "1e": [109, 184, 697, 708, 718], "2e": 109, "09819e": 109, "563e": 109, "668e": 109, "5e": [109, 345], "7e": [109, 345], "17247e": 109, "553e": 109, "446e": 109, "4e": 109, "3e": [109, 345], "30067e": 109, "551e": 109, "539e": 109, "30071e": 109, "662e": 109, "29984e": 109, "542e": 109, "999e": 109, "29985e": 109, "882e": 109, "29990e": 109, "8e": [109, 345], "86056e": 109, "003e": 109, "finish": 109, "good": [109, 110, 112, 343, 649], "enough": 109, "istop": 109, "normr": 109, "norma": 109, "normar": 109, "conda": 109, "normx": 109, "001e": 109, "470e": 109, "08847e": 109, "953e": 109, "167e": 109, "15243e": 109, "484e": 109, "41447e": 109, "412e": 109, "88004e": 109, "266e": 109, "87319e": 109, "921e": 109, "87000e": 109, "868e": 109, "87108e": 109, "866e": 109, "87255e": 109, "62098e": 109, "857e": 109, "04265e": 109, "789e": 109, "99381e": 109, "309e": 109, "000e": 109, "472e": 109, "29233e": 109, "946e": 109, "623e": 109, "45416e": 109, "328e": 109, "34706e": 109, "107e": 109, "41880e": 109, "140e": 109, "42126e": 109, "176e": 109, "41939e": 109, "077e": 109, "41643e": 109, "40968e": 109, "02689e": 109, "060e": 109, "66462e": 109, "851e": 109, "22889e": 109, "454e": 109, "follow": [110, 113, 645, 815], "those": [110, 112, 114, 347, 645, 646], "chapter": [110, 111, 346, 645], "microeconometr": [110, 644], "stata": [110, 113, 343, 348, 351, 644, 649], "cameron": [110, 113, 644], "trivedi": [110, 113, 644], "main": [110, 348, 361, 645, 647, 648], "likelihood": [110, 114, 345, 346, 347, 350, 352, 479, 494, 515, 531, 569, 583, 604, 618, 649, 740, 774], "medic": [110, 112], "expenditur": [110, 112], "survei": [110, 112], "mep": 110, "pocket": 110, "drug": [110, 112], "individu": [110, 111, 216, 350, 351, 645, 726, 735, 736, 761, 770, 771], "characterist": [110, 112, 346], "insur": [110, 112, 645], "employ": [110, 111, 645], "like": [110, 112, 343, 346, 349, 350, 641, 645, 646, 649, 694, 699, 703, 705, 710, 713, 715, 720, 724, 746, 780, 806, 810, 811, 816], "candid": 110, "percentag": [110, 641], "incom": [110, 111, 112], "social": [110, 112], "secur": [110, 112], "dropna": [110, 111, 112, 647], "ag": [110, 111, 112, 645, 647], "age2": [110, 112], "black": [110, 111, 112, 346], "blhisp": [110, 112], "hispan": [110, 112, 346], "drugexp": [110, 112], "presc": [110, 112], "expens": [110, 112], "educyr": [110, 112], "fair": [110, 112], "femal": [110, 112], "firmsz": [110, 112], "fph": [110, 112], "poor": [110, 112], "hi_empunion": [110, 112], "thro": [110, 112], "emp": [110, 112, 645], "hisp": [110, 112, 346], "hiapan": [110, 112], "ldrugexp": [110, 112], "linc": [110, 112], "lowincom": [110, 112], "marri": [110, 112, 346, 350, 513, 553, 602, 639, 645, 646], "midincom": [110, 112], "middl": [110, 112], "msa": [110, 112], "metropolitan": [110, 112], "multlc": [110, 112], "poverti": [110, 112], "priolist": [110, 112], "prioriti": [110, 112], "privat": [110, 112], "ssiratio": [110, 112], "ssi": [110, 112], "ratio": [110, 112, 300, 343, 649, 740, 754, 774, 788], "totchr": [110, 112], "chronic": [110, 112], "vegood": [110, 112], "vgh": [110, 112], "vg": [110, 112], "next": [110, 111, 346, 645], "control": [110, 111, 114, 346, 429, 445, 454, 464, 472], "summar": 110, "group": [110, 111, 115, 343, 346, 351, 361, 403, 405, 407, 409, 411, 413, 416, 515, 535, 645, 651, 795], "percentil": 110, "10089": [110, 112], "mean": [110, 111, 112, 152, 155, 164, 168, 343, 347, 351, 454, 645, 649, 680, 684, 688, 793, 794], "481361": 110, "382198": 110, "860938": 110, "577064": 110, "75": [110, 111, 352], "051740": 110, "362052": 110, "485949": 110, "292858": 110, "494050": 110, "682109": 110, "min": [110, 111, 343, 345, 346, 347, 350, 352], "65": [110, 347], "678342": 110, "74": [110, 352, 647], "180172": 110, "91": [110, 345], "743275": 110, "163544": 110, "913143": 110, "369880": 110, "907755": 110, "743160": 110, "744476": 110, "worth": [110, 111, 348, 645], "536544": 110, "187432": 110, "062048": 110, "140529": 110, "367818": 110, "390277": 110, "241254": 110, "170389": 110, "504522": 110, "250620": 110, "And": 110, "relev": [110, 231, 284, 345, 407, 647], "especi": 110, "lead": [110, 112, 452, 649, 694, 715], "weak": [110, 111], "exclus": 110, "212431": 110, "116419": 110, "119849": 110, "037352": 110, "253946": 110, "190433": 110, "044578": 110, "062465": 110, "008232": 110, "187275": 110, "add_const": [110, 111, 114, 346, 350, 513, 553, 602, 639, 645, 648], "process": [110, 179, 190, 202, 213, 242, 293, 329, 434, 442, 450, 460, 469, 477, 703, 713, 724, 746, 780], "api": [110, 111, 114, 346, 350, 513, 553, 602, 639, 645, 648], "const": [110, 111, 114, 346, 350, 641, 645, 648], "nest": [110, 114], "ivolsmod": 110, "res_ol": [110, 111, 645], "1770": [110, 111, 112], "1765": [110, 112, 645], "2262": [110, 112], "0739": [110, 112], "0260": [110, 111, 112, 645], "8441": [110, 112], "0230": [110, 112, 647], "1248": [110, 112], "8611": [110, 112], "1570": [110, 111, 112], "320": [110, 112], "5533": [110, 112], "1689": [110, 112], "4404": [110, 112], "049": [110, 112], "4220": [110, 112], "4587": [110, 112], "0578": [110, 112], "0254": [110, 112, 646], "2797": [110, 112], "0226": [110, 111, 112, 645], "1075": [110, 112], "0019": [110, 112, 645], "8228": [110, 112], "0683": [110, 112], "0003": [110, 111, 112, 347, 645, 646, 647], "7646": [110, 112], "4445": [110, 112], "0164": [110, 112], "0373": [110, 112], "1513": [110, 112], "0341": [110, 112, 114, 645], "4353": [110, 111, 112], "2182": [110, 112], "0844": [110, 112], "strong": [110, 111], "ivmod": 110, "res_2sl": [110, 111], "0640": [110, 112], "0634": [110, 112, 645], "2000": [110, 112], "7872": [110, 112, 645], "2688": [110, 112], "246": [110, 112], "2602": [110, 112], "3141": [110, 112], "4503": [110, 112], "44": [110, 112, 352], "157": [110, 111, 112, 345, 647], "4303": [110, 112], "4703": [110, 112, 645], "0204": [110, 112], "0326": [110, 112], "6257": [110, 112], "5315": [110, 112], "0843": [110, 112], "0435": [110, 111, 112], "0132": [110, 111, 112, 645], "4092": [110, 112], "0191": [110, 112], "0870": [110, 112], "8436": [110, 112], "0426": [110, 112, 346], "1314": [110, 112, 346], "2174": [110, 112, 645], "0395": [110, 112], "5052": [110, 112], "2948": [110, 112], "1400": [110, 112], "8976": [110, 112, 645], "2211": [110, 112], "0592": [110, 111, 112], "3310": [110, 112], "4642": [110, 112, 645], "res_2sls_robust": 110, "account": [110, 346, 361, 429, 454, 482, 483, 484, 504, 505, 506, 517, 518, 519, 542, 544, 545, 571, 572, 573, 593, 594, 595, 606, 607, 608, 628, 629, 630, 645], "res_2sls_std": 110, "iter_limit": [110, 114, 184, 647, 697, 708, 718], "res_gmm": 110, "alter": [110, 114], "match": [110, 111, 348, 351, 352, 435, 443, 451, 461, 470, 478, 499, 537, 588, 623, 645, 703, 713, 724, 746, 780], "weight_typ": [110, 114, 182, 186, 193, 197, 220, 647, 705, 710, 726], "res_gmm_clust": 110, "simultan": [110, 200, 205, 452, 644, 645, 646, 648], "order": [110, 111, 139, 140, 141, 306, 343, 346, 499, 537, 588, 623, 645, 646, 648, 695, 699, 706, 710, 716, 720, 806, 810, 811, 816], "sens": [110, 114, 343, 352, 645, 694, 715], "fragil": 110, "res_gmm_cu": 110, "045365": 110, "412": [110, 647], "ordereddict": [110, 346, 645, 646, 648], "hold": [110, 111, 346], "kei": [110, 114, 142, 146, 218, 258, 342, 345, 346, 403, 555, 643, 645, 646, 647, 648, 694, 699, 703, 705, 710, 713, 715, 720, 724, 746, 780, 806, 812, 813, 815], "advantag": [110, 645], "preserv": [110, 345, 645, 646, 648], "present": [110, 113, 349, 352, 645, 750, 784, 815], "With": [110, 403], "fairli": [110, 346, 645], "vari": [110, 346, 645], "slightli": [110, 111], "conclus": [110, 111], "reach": [110, 111], "sensit": [110, 111], "choic": [110, 114, 158, 343, 349, 352, 454, 491, 527, 580, 615, 647, 649], "parenthes": [110, 111, 112, 346], "collect": [110, 346, 645, 646, 648], "homo": 110, "hetero": 110, "est": [110, 111, 112, 346], "0414": 110, "0406": 110, "0292": [110, 346], "0388": 110, "0409": [110, 111], "0400": 110, "0286": 110, "0382": 110, "1882": [110, 645], "1955": 110, "1952": 110, "1700": [110, 347], "1949": 110, "9899": 110, "9933": 110, "0359": [110, 645], "1501": 110, "8386": 110, "8530": 110, "8810": 110, "8752": 110, "8778": 110, "7277": 110, "8847": 110, "030": 110, "660": 110, "658": 110, "299": [110, 647], "657": 110, "4512": 110, "4510": 110, "4482": 110, "942": 110, "769": 110, "738": 110, "33": [110, 111, 347, 645, 647], "701": 110, "0278": [110, 111, 346], "0282": 110, "0245": [110, 111], "0288": [110, 111, 345, 645], "8933": 110, "8653": 110, "8398": [110, 647], "8928": 110, "0141": [110, 645], "0142": [110, 111], "0119": [110, 346], "0834": 110, "8753": 110, "8773": 110, "8969": 110, "0943": 110, "0945": 110, "0957": 110, "0950": 110, "4400": 110, "3079": 110, "3142": 110, "4934": 110, "3333": 110, "2237": [110, 111], "2231": 110, "2091": 110, "2236": 110, "7805": 110, "6514": 110, "6344": [110, 645], "1662": 110, "6421": 110, "durbin": [110, 343], "exploit": [110, 351], "fact": 110, "h0": [110, 111], "2819": 110, "0x7ff6bfaf29d0": 110, "wu": [110, 310, 343], "hausman": [110, 310, 343], "variant": 110, "wu_hausman": 110, "3253": [110, 111], "10081": 110, "0x7ff6bf985850": 110, "replic": [110, 643], "step1": 110, "step2": 110, "34541049975258": 110, "tmp": [110, 111, 645], "ipykernel_2625": 110, "2400394995": 110, "py": [110, 111, 345, 645], "futurewarn": [110, 111, 645], "futur": [110, 111, 345, 645], "obj": [110, 111, 645], "34": [110, 111, 346, 352, 645], "wooldridge_regress": [110, 111, 270], "4542": [110, 645], "0x7ff6c1dcb8b0": 110, "power": [110, 343], "lm": [110, 727, 762], "19": [110, 111, 308, 345, 350, 645, 647], "wooldridge_scor": [110, 270], "24": [110, 111, 346, 645, 647], "9350": 110, "0x7ff6c1dcb7c0": 110, "overidentifi": [110, 111, 220, 236, 270, 271, 272, 273, 300, 343, 726, 739], "word": 110, "actual": [110, 111, 164, 165, 221, 346, 348, 351], "evid": 110, "j_stat": [110, 220, 726], "0475": [110, 645], "3061": 110, "0x7ff6bf7757c0": 110, "stori": 110, "res_gmm_al": 110, "5903": 110, "0089": [110, 646], "0x7ff6bef87760": 110, "probabl": [110, 346], "od": 110, "col": [110, 142, 645, 699, 710], "1768": 110, "0644": 110, "9053": 110, "1763": [110, 346], "0651": [110, 111], "9064": 110, "2250": 110, "1734": 110, "950": 110, "8201": 110, "2145": 110, "7267": 110, "267": [110, 111, 645], "326": 110, "4196": 110, "4399": 110, "4548": 110, "4710": 110, "834": 110, "193": 110, "23": [110, 111, 114, 644, 645, 648], "163": [110, 346], "0613": 110, "0565": 110, "1842": 110, "6066": 110, "2596": [110, 352], "5312": 110, "0177": 110, "0335": [110, 111], "7521": 110, "7086": 110, "3433": 110, "1223": [110, 111], "2473": [110, 645], "2280": 110, "2965": 110, "1876": 110, "1484": 110, "2479": 110, "3559": [110, 111], "5639": 110, "0727": 110, "2425": [110, 111], "1170": 110, "3459": 110, "9323": 110, "3254": [110, 645], "1760": [110, 111, 645], "0908": [110, 346], "assess": 110, "credibl": 110, "partial": [110, 111, 217, 343, 346], "first_stag": [110, 111, 220, 270], "0761": 110, "0179": [110, 346], "shea": [110, 111, 217, 343], "806": 110, "441e": 110, "distn": [110, 111], "0290": [110, 114], "705": 110, "0128": [110, 645], "4896": 110, "0734": 110, "6226": 110, "184": 110, "0484": 110, "3266": 110, "0627": 110, "1084": 110, "1916": 110, "1121": 110, "break": 110, "rule": [110, 111, 112, 353, 369, 377, 431, 439, 447, 456, 466, 474], "thumb": [110, 111, 353, 369, 377], "res_2sls_al": 110, "0821": 110, "0243": [110, 346, 352], "179": [110, 111], "959": [110, 346], "6494": 110, "0724": [110, 645], "5497": [110, 645], "0080": [110, 111, 346, 645], "206": 110, "0410": [110, 111], "3552": 110, "0676": [110, 111], "5369": 110, "1690": 110, "3289": 110, "0637": 110, "1947": 110, "1151": 110, "4799": 110, "9286": 110, "finit": [110, 114], "strongli": [110, 645], "exact": [110, 649], "res_liml": 110, "0394": [110, 111], "8807": 110, "577": 110, "4513": 110, "730": [110, 645], "0283": [110, 648], "8776": [110, 645], "8781": 110, "0947": 110, "3114": 110, "2241": 110, "6531": 110, "9957": 110, "8361": 110, "0001153166806425": 110, "As": [110, 645], "27": [110, 111, 346, 645], "res_ivol": 110, "sm_ol": 110, "sm": [110, 114, 346, 350, 513, 553, 602, 639, 645, 648], "073879": 110, "861131": 110, "440381": 110, "057806": 110, "003529": 110, "010482": 110, "151307": 110, "2281671701": 110, "econometr": [111, 346, 644, 645, 727, 740, 762, 774], "jeffrei": [111, 346, 644], "demonstr": [111, 645, 647], "primarili": [111, 346], "signal": 111, "beyond": [111, 346, 353, 361, 369, 387, 395], "direct": [111, 112], "among": 111, "mroz": [111, 647], "1987": [111, 345, 346], "empir": 111, "hour": [111, 346, 645, 647], "work": [111, 345, 346, 350, 644, 645, 647], "assumpt": [111, 221, 350, 351, 490, 525, 526, 579, 614, 645, 647, 649], "econometrica": 111, "55": [111, 347], "765": [111, 345], "799": 111, "nlf": 111, "labor": [111, 346], "1975": 111, "kidslt6": [111, 647], "kid": 111, "kidsge6": 111, "woman": 111, "yr": [111, 645], "school": [111, 346, 645], "earn": [111, 645, 646, 648], "repwag": 111, "interview": 111, "1976": 111, "hushr": 111, "husband": 111, "husag": 111, "huseduc": 111, "huswag": 111, "hourli": [111, 645, 646], "faminc": 111, "famili": 111, "mtr": 111, "fed": 111, "margin": [111, 645], "tax": 111, "motheduc": 111, "mother": 111, "fatheduc": 111, "father": 111, "unem": 111, "counti": 111, "citi": 111, "live": [111, 645], "smsa": 111, "mkt": 111, "nwifeinc": [111, 647], "lwage": [111, 346, 350, 513, 553, 602, 639, 647], "expersq": [111, 346, 350, 513, 553, 602, 639, 645, 646, 647], "special": [111, 171, 347, 350, 351, 456, 643, 645, 648, 715], "1179": [111, 346], "1158": [111, 346], "428": [111, 647], "57": [111, 345, 647], "196": [111, 647], "1852": 111, "1848": 111, "3163": 111, "5474": 111, "1086": 111, "0144": [111, 346], "5628": 111, "0805": [111, 645], "1368": 111, "subject": [111, 112], "save": 111, "later": 111, "relationship": 111, "res_first": 111, "educ_hat": 111, "1726": 111, "1706": [111, 645], "258": [111, 645], "237": 111, "2753": [111, 347, 646], "186": [111, 645], "6975": 111, "777": 111, "2694": 111, "0285": 111, "4476": 111, "2135": 111, "res_second": 111, "0934": [111, 345], "0913": [111, 346], "8487": 111, "0914": [111, 645], "4411": 111, "4451": 111, "9911": 111, "3216": 111, "4312": 111, "3134": 111, "0351": 111, "6878": 111, "0095": [111, 645], "1279": [111, 346, 645], "res_direct": 111, "5982": 111, "941e": 111, "1070": 111, "9465": 111, "6119": 111, "sibl": 111, "blackburn": 111, "d": [111, 343, 346, 403, 407, 644, 809, 813, 814], "neumark": 111, "1992": 111, "unobserv": 111, "abil": [111, 645], "interindustri": 111, "differenti": 111, "quarterli": 111, "journal": [111, 346, 644], "107": [111, 645], "1421": 111, "1436": 111, "weekli": 111, "iq": [111, 114], "kww": 111, "knowledg": 111, "world": 111, "tenur": [111, 645, 648], "south": [111, 644, 645, 646], "urban": 111, "meduc": 111, "feduc": 111, "0973": [111, 645], "0964": 111, "934": [111, 114, 346, 645], "100": [111, 345, 347, 641, 647, 697, 718], "71": [111, 352], "9733": 111, "0814": 111, "73": [111, 647], "419": 111, "8139": [111, 346], "1328": 111, "0598": 111, "035": [111, 645], "0481": [111, 646], "0715": 111, "0576": 111, "0566": 111, "143": 111, "1131": [111, 645], "125": 111, "921": 111, "365": 111, "2287": [111, 645], "0303": [111, 645], "5569": 111, "2880": 111, "1694": 111, "0101": [111, 645], "715": 111, "1310": 111, "3539": 111, "497": 111, "4373": 111, "8248": 111, "1224": [111, 646], "0263": [111, 645], "6599": 111, "0709": [111, 346], "1738": [111, 346], "concept": [111, 112], "wl": [111, 344, 347, 407, 429, 643], "2_i": [111, 133, 754, 788], "w_i": [111, 139, 140, 141, 646, 647, 688, 754, 788], "feasibl": [111, 352, 649], "could": [111, 347, 645], "res2": 111, "fgls_mod": 111, "fgls_re": 111, "sigma2_hat": 111, "exp": 111, "9903": [111, 647], "1360": [111, 645], "2224": 111, "3675": [111, 645], "4956": 111, "9452": 111, "0518": 111, "1307": [111, 645], "0158": 111, "5311": 111, "5953": 111, "particularli": 111, "don": 111, "res_gl": 111, "520": 111, "2031": 111, "3231": 111, "5699": 111, "8363": 111, "1166": 111, "0241": [111, 346], "8497": 111, "0695": 111, "1638": 111, "babi": 111, "birthweight": 111, "mullahi": 111, "1997": 111, "cigarett": 111, "behavior": 111, "review": [111, 644, 645], "79": 111, "596": 111, "593": 111, "1988": [111, 345], "cigtax": 111, "cig": 111, "home": [111, 345], "cigpric": 111, "bwght": 111, "ounc": 111, "pariti": 111, "child": 111, "male": [111, 645, 646], "white": [111, 346, 387, 429, 445, 454, 464, 472, 645], "smked": 111, "dai": [111, 645], "preg": 111, "lbwght": 111, "bwghtlb": 111, "pound": 111, "pack": 111, "_weak": 111, "1388": 111, "0731": 111, "1499": [111, 645], "9746": 111, "2361": [111, 645], "9192": 111, "3580": 111, "3172": [111, 345], "3681": 111, "0356": 111, "0247": [111, 346, 646], "4398": 111, "0129": [111, 347, 645], "0840": 111, "substanti": [111, 346, 645], "warrant": 111, "interpret": [111, 346, 649], "150": 111, "5224": 111, "5242": 111, "1356": 111, "2866": 111, "7203": 111, "0381": [111, 346], "123": [111, 345, 645], "80": [111, 345], "6456": 111, "7951": 111, "0238": 111, "0223": 111, "0656": 111, "0199": 111, "0675": [111, 646], "colleg": [111, 644], "card": 111, "1995": 111, "geograph": 111, "aspect": 111, "labour": 111, "essai": 111, "honour": 111, "john": [111, 644], "vanderkamp": 111, "ed": 111, "l": [111, 644], "christophid": 111, "grant": [111, 345], "swidinski": 111, "201": [111, 645], "222": 111, "toronto": 111, "univers": [111, 644], "press": [111, 644], "person": [111, 346], "nearc2": 111, "1966": [111, 347], "nearc4": 111, "nl": 111, "momdad14": 111, "dad": 111, "sinmom14": 111, "step14": 111, "parent": 111, "reg661": 111, "region": [111, 645], "reg662": 111, "reg663": 111, "reg664": 111, "reg665": 111, "reg666": 111, "reg667": 111, "reg668": 111, "reg669": 111, "south66": 111, "smsa66": 111, "cent": 111, "enrol": 111, "libcrd14": 111, "lib": 111, "xpersq": 111, "instr": [111, 205, 216, 221, 236, 271, 272, 273, 300, 306, 343, 739], "4771": 111, "4745": 111, "3010": 111, "3693": 111, "3199": 111, "0848": 111, "7702": 111, "1536": 111, "4862": 111, "638": [111, 346], "2148": 111, "77": [111, 346, 347, 647], "456": 111, "217": [111, 347], "059": 111, "4125": 111, "0320": [111, 346], "896": 111, "4752": 111, "3498": [111, 352], "5100": 111, "6100": 111, "9355": 111, "0923": 111, "138": 111, "1164": 111, "7547": 111, "4022": 111, "1109": 111, "6255": 111, "6196": 111, "0516": 111, "1416": [111, 346], "3645": 111, "7155": 111, "3291": 111, "2259": 111, "0255": 111, "1103": 111, "2309": [111, 352], "8174": 111, "1908": 111, "2417": 111, "0786": 111, "1854": 111, "4242": 111, "6714": 111, "4420": [111, 645], "2847": [111, 646], "0279": [111, 645], "1789": 111, "1562": [111, 645], "8759": 111, "3785": 111, "3226": 111, "1172": 111, "2070": 111, "5660": 111, "5714": 111, "2886": 111, "5230": 111, "2726": [111, 645], "2186": 111, "2230": 111, "7111": 111, "1659": 111, "3028": 111, "2826": 111, "1996": 111, "7656": 111, "1599": 111, "2168": [111, 112], "2389": 111, "9077": 111, "3640": 111, "6850": 111, "2513": [111, 645], "5239": 111, "2562": 111, "0449": [111, 347, 648], "0218": 111, "2103": 111, "0575": 111, "2903": 111, "1794": 111, "6000": 111, "2998": 111, "2963": 111, "1377": 111, "6208": 111, "0740": 111, "62": 111, "417": 111, "4757": 111, "7659": [111, 646], "592": [111, 647], "0716": [111, 346], "0980": 111, "1798": [111, 347], "1990": [111, 347], "985": [111, 645], "2345": 111, "1635": 111, "1364": 111, "0192": 111, "1159": 111, "0988": [111, 645], "1739": 111, "1480": 111, "0280": 111, "2917": 111, "2028": 111, "0932": [111, 645], "0262": 111, "0185": 111, "4153": 111, "0626": [111, 646, 647], "0350": [111, 646], "7531": 111, "0059": [111, 645, 646], "1650": 111, "1445": [111, 645], "0337": 111, "2850": 111, "0784": 111, "2107": [111, 645], "0551": 111, "0411": 111, "3402": 111, "1802": 111, "1280": 111, "0428": [111, 346], "9912": [111, 352], "0441": 111, "2119": 111, "1405": [111, 114], "0450": 111, "0018": [111, 645], "0523": 111, "1180": 111, "0455": 111, "5934": [111, 646], "2071": 111, "0564": 111, "0505": 111, "1183": 111, "2634": [111, 645], "1553": 111, "0425": 111, "1186": 111, "0387": 111, "0658": [111, 645], "1944": 111, "0747": 111, "540": 111, "0818": 111, "nearli": [111, 347], "doubl": [111, 403], "howev": [111, 350], "concern": 111, "strength": 111, "2382": 111, "2343": 111, "840": 111, "6662": 111, "9085": 111, "0352": [111, 645], "8855": 111, "4468": 111, "1083": [111, 346], "0233": 111, "6376": 111, "0625": 111, "1540": 111, "7128": 111, "1468": 111, "0524": [111, 645, 647], "8031": 111, "0051": [111, 346, 645], "2494": [111, 645], "1118": 111, "0311": 111, "5995": 111, "0509": [111, 346], "1727": 111, "1447": 111, "0291": 111, "9775": 111, "2016": [111, 644], "0877": 111, "0205": [111, 645], "9035": 111, "3663": 111, "0217": [111, 346], "0587": 111, "1008": [111, 646], "0365": [111, 346], "7644": 111, "0057": [111, 645], "0293": [111, 645], "1722": 111, "1483": 111, "0355": 111, "0787": 111, "2178": 111, "0499": 111, "1471": 111, "2514": 111, "0354": [111, 645], "1352": 111, "1463": 111, "0491": 111, "9794": 111, "0500": 111, "1629": 111, "0617": 111, "2641": 111, "1346": [111, 347], "0504": 111, "6689": 111, "0357": [111, 645, 646], "2334": [111, 346], "0831": [111, 346, 645], "0571": 111, "4552": 111, "1456": 111, "1950": 111, "1078": 111, "6317": 111, "0085": 111, "0275": 111, "1881": 111, "1315": 111, "0540": 111, "0149": [111, 645], "0257": 111, "2373": 111, "smaller": [111, 645], "naiv": [111, 445, 454, 464, 472, 649], "technic": [111, 645], "214": [111, 352, 645], "simpler": [111, 343, 647], "discuss": [111, 113], "anoth": 111, "languag": 111, "augment": 111, "parameter": 111, "differenc": [111, 346, 347, 348, 351, 352, 412], "res_formula": 111, "reg": 111, "661": 111, "reg66": 111, "astyp": [111, 345, 352], "res_cat": 111, "662": [111, 645], "663": 111, "664": 111, "665": [111, 645], "666": 111, "667": [111, 345], "668": 111, "669": 111, "lnwage": 111, "1357": 111, "1296": 111, "653": [111, 644, 647], "3985": 111, "1207": 111, "9039": 111, "7329": 111, "8291": 111, "0442": 111, "0134": [111, 346, 645], "3038": 111, "0704": 111, "2485": 111, "0614": [111, 346], "0313": [111, 645], "9622": 111, "0497": 111, "043e": 111, "1227": 111, "IF": 111, "8256": 111, "0928": [111, 645], "0x7f82c3cf5340": 111, "accid": 111, "1624": 111, "1544": 111, "82": [111, 352], "954": 111, "0582": 111, "0346": [111, 646], "6810": 111, "1260": 111, "3923": 111, "1226": 111, "9024": 111, "7207": 111, "8169": 111, "0184": 111, "0700": [111, 352, 645], "2840": [111, 645], "0224": 111, "0308": 111, "9932": 111, "0462": 111, "1218": 111, "ipykernel_3196": 111, "309156546": 111, "overidentif": [111, 270, 306, 343], "uncorrel": [111, 343, 350, 351, 649], "wooldridge_overid": [111, 270], "4435": 111, "5055": 111, "0x7f82c3f0e5b0": 111, "formal": [111, 504, 505, 506, 542, 544, 545, 593, 594, 595, 628, 629, 630], "2_1": 111, "3719811106150752": 111, "31": [111, 112, 645, 647], "0421": [111, 346], "5939": 111, "0x7f82c3f0e400": 111, "32": [111, 645], "1126588681970464": 111, "elimin": [111, 350, 454], "jobtrain": [111, 345], "head": [111, 345, 346, 347], "isin": 111, "axi": [111, 142, 146, 435, 443, 451, 461, 470, 478], "sort_valu": 111, "fcode": [111, 345], "set_index": [111, 345, 346, 347, 350, 352, 513, 553, 602, 639], "hrsemp": [111, 345], "scrap": [111, 345], "lscrap": [111, 345], "h": [111, 343, 644, 727, 740, 762, 774], "holzer": 111, "cheatham": 111, "knott": 111, "1993": [111, 645, 646], "train": [111, 345], "subsidi": 111, "michigan": 111, "46": [111, 345], "625": 111, "636": 111, "1989": [111, 345], "emploi": [111, 345, 697, 708, 718], "employe": [111, 645], "plant": [111, 347], "sale": [111, 345], "avgsal": [111, 345], "salari": 111, "item": [111, 345, 807], "rework": [111, 345], "tothr": [111, 345], "receiv": 111, "d89": [111, 345], "d88": [111, 345], "totrain": 111, "lemploi": 111, "lsale": 111, "lrework": 111, "lhrsemp": 111, "lscrap_1": 111, "lag": [111, 139, 140, 141, 164, 644], "grant_1": [111, 345], "clscrap": [111, 345], "cgrant": [111, 345], "clemploi": [111, 345], "clsale": [111, 345], "lavgsal": [111, 345], "clavgsal": [111, 345], "cgrant_1": [111, 345], "chrsemp": [111, 345], "314": [111, 645], "290": [111, 645], "450000e": 111, "500000": 111, "415708": 111, "885350": 111, "903448": 111, "679815e": 111, "18326": 111, "284644": 111, "500798": 111, "4025": 111, "063452": 111, "843101": 111, "977975e": 111, "6507": 111, "584305": 111, "410032": [111, 345], "100000e": 111, "4237": [111, 112, 645], "410604": 111, "527000e": 111, "13664": 111, "418084": 111, "900000e": 111, "17160": 111, "419309": 111, "000000e": 111, "22000": 111, "419486": [111, 345], "500": [111, 347, 699, 710, 720], "700000e": 111, "40563": 111, "108": [111, 645], "276": 111, "199722": 111, "883537": 111, "648551": 111, "197452": 111, "114650": 111, "188094": 111, "145294": 111, "45": [111, 346, 352], "694834": 111, "398712": 111, "319107": 111, "010000": 111, "767500": 111, "332500": 111, "555000": 111, "267500": 111, "250000": 111, "54": [111, 346, 347, 647], "144": [111, 352], "119": [111, 645], "168993": 111, "096876": 111, "128995": 111, "754753": 111, "589774": 111, "251180": 111, "489422": 111, "353818": 111, "502170": 111, "411099": 111, "982874": 111, "351611": 111, "350983": 111, "031946": 111, "023286": 111, "522509": 111, "115118": 111, "064538": 111, "116219": 111, "750337": 111, "092537": 111, "182321": 111, "215391": 111, "998797": 111, "397895": 111, "673976": 111, "896701": 111, "610610": 111, "clhrsemp": [111, 345], "131": [111, 345, 645], "058601": 111, "423050": 111, "642580": 111, "074255": 111, "301290": 111, "235229": 111, "080411": 111, "753490": 111, "338574": 111, "020135": 111, "057159": 111, "272727": 111, "039375": 111, "086255": 111, "063067": 111, "568912": 111, "027800": 111, "394449": 111, "delta": [111, 114, 282, 310, 343, 351, 444, 649], "812321": 111, "377778": 111, "817556": 111, "185697": 111, "523825": 111, "490310": 111, "496392": 111, "626858": 111, "850180": 111, "502169": 111, "355820": 111, "846154": 111, "110000": 111, "167054": 111, "333330": 111, "090000": 111, "054067": 111, "35": 111, "3408": 111, "3255": 111, "266": 111, "5806": 111, "1139": 111, "5076": 111, "6117": 111, "5225": 111, "6837": 111, "437": 111, "0662": 111, "8235": 111, "507": 111, "367": 111, "cleaner": 111, "res_iv": 111, "0159": [111, 645, 647], "3464": 111, "0674": [111, 350, 646], "0327": [111, 346], "1241": 111, "2632": 111, "7924": 111, "2759": 111, "2106": 111, "0077": 111, "8293": 111, "signific": [111, 346, 479, 490, 491, 515, 526, 527, 569, 579, 580, 604, 614, 615], "0619": 111, "0401": [111, 346], "9707": 111, "1035": 111, "0208": [111, 346], "7236": 111, "runner": [111, 345], "496": 111, "pred": 111, "self": 111, "enhanc": [112, 644], "basi": [112, 347, 647], "context": [112, 345, 434, 442, 450, 460, 469, 477], "mark": [112, 644], "surround": [112, 646, 699, 710, 720], "manner": 112, "join": [112, 645], "x4": 112, "x5": 112, "z1": [112, 699, 710], "z2": [112, 699, 710], "z3": 112, "submodel": 112, "asid": [112, 647], "quickstart": 112, "what": [112, 346], "unlik": [112, 141, 200, 343, 346, 431, 439, 447, 466, 474, 649], "initi": [112, 184, 345, 346, 641, 645, 646, 649, 708], "iv_r": 112, "readili": 112, "iv_res2": 112, "ols_r": [112, 114], "0659": 112, "0654": 112, "2004": 112, "7709": 112, "353": 112, "5252": 112, "0873": [112, 647], "8348": 112, "4498": 112, "453": [112, 346], "8892": 112, "1653": 112, "brief": [113, 349], "overview": [113, 349], "introductori": [113, 644], "text": [113, 349], "book": [113, 349], "advanc": 113, "further": 113, "x_": [114, 193, 307, 343, 346, 350, 351, 353, 369, 436, 444, 452, 463, 471, 483, 484, 518, 519, 572, 573, 607, 608, 649, 694, 705, 715], "1i": [114, 307, 343, 649, 680, 688], "beta_1": [114, 647], "2i": [114, 307, 343, 649, 680, 688], "beta_2": [114, 307, 647], "z_": [114, 193, 343, 649, 680, 688, 705], "nu_i": 114, "k_1": 114, "k_2": 114, "neq": [114, 655, 658, 661], "p_2": 114, "project": [114, 217, 282, 300, 310, 343], "p_1": 114, "accept": [114, 346, 403, 699, 710, 720], "0459": 114, "0438": 114, "872": 114, "mon": [114, 352], "mar": 114, "4912": 114, "4692": 114, "5719": 114, "5716": 114, "4108": 114, "6649": 114, "0198": [114, 350], "0485": [114, 346, 646], "8434": 114, "0837": [114, 645], "1974": 114, "fuller": [114, 205, 209], "user": [114, 645, 649], "matric": [114, 343, 682, 686, 692], "homoskedasticweightmatrix": 114, "heteroskedasticweightmatrix": 114, "kernelweightmatrix": 114, "within": [114, 345, 346, 347, 348, 350, 352, 429, 445, 479, 484, 506, 515, 519, 545, 569, 573, 595, 604, 608, 630], "clusteredweightmatrix": 114, "studi": [114, 644], "andrew": [114, 133, 164, 353, 369, 645, 661, 674, 688], "membership": [114, 168, 403, 411, 424, 795], "iq_band": 114, "ineffici": [114, 343, 350], "abov": [114, 647, 649], "tol": [114, 184, 697, 708, 718], "success": 114, "stop": 114, "outer": [114, 184, 345, 708], "initial_weight": [114, 184, 708], "place": [114, 343, 346, 694, 705, 715], "dure": [114, 346], "ninstr": [115, 121, 127, 133, 154, 157, 158, 167, 170, 171, 172, 182, 183, 193, 194, 200, 205, 206, 683, 701], "assign": 115, "ncluster": [115, 651], "xi_": [115, 351, 353, 369], "mathcal": [115, 343, 351, 361, 651], "_g": 115, "_0": [133, 369, 688], "_j": [133, 369, 688], "maxlag": [139, 140, 141], "6z_i": 140, "leq": 140, "truncat": 141, "pi": [141, 343], "w_0": 141, "sin": [141, 343], "co": [141, 343, 346, 645], "geq": [141, 343], "var_nam": [142, 403], "convert_dummi": [142, 403], "drop_first": [142, 403, 409], "abstract": [142, 403], "univari": 142, "wrap": 142, "xarrai": [142, 403], "flat": [142, 403], "view": [142, 147, 149, 403, 406, 408, 411, 414, 417, 421, 422, 424, 425, 426, 645, 810, 811, 816], "2d": [142, 147, 345, 411, 424], "ndim": [142, 403], "g_i": [152, 164, 680, 688], "w": [152, 155, 158, 164, 182, 183, 193, 200, 236, 282, 310, 343, 351, 491, 527, 580, 615, 649, 655, 658, 661, 680, 688, 705, 726, 739, 794], "_ig_i": [152, 680], "onewayclusteredcovari": 158, "optimal_bw": [164, 688], "gamma_0": [164, 647], "gamma_j": 164, "nendog": [171, 179, 182, 190, 193, 202, 205, 213, 242, 293, 329, 701], "vcv": [171, 182, 205], "bootstrap": [171, 172, 182, 183, 194, 205, 206], "notnul": [171, 182, 193, 205], "regressand": [172, 183, 194, 200, 206], "scalar": [172, 206, 343], "expos": [172, 183, 194, 206, 351, 435, 443, 451, 461, 470, 478, 806], "facilit": [172, 183, 194, 206, 346, 645], "ivresult": [173, 207], "olsresult": [173, 184, 195, 207, 218], "explicitli": [175, 186, 197, 209, 347, 352, 431, 436, 439, 447, 466, 474], "eval_env": [179, 190, 202, 213, 703, 713, 724], "depth": [179, 190, 202, 213, 434, 442, 450, 460, 469, 477, 703, 713, 724], "suppli": [179, 190, 202, 213, 434, 442, 450, 460, 469, 477, 703, 713, 724], "weight_config": [182, 186, 193, 197, 220, 705, 710, 726], "zw": [182, 649, 655, 658, 661, 705], "larger": [184, 454], "criteria": 184, "ivgmmcovari": [184, 195], "ivgmmresult": [184, 195], "most": [193, 343, 345, 346, 350, 351, 431, 439, 445, 447, 452, 456, 466, 474, 645, 649], "circumst": [193, 346, 648], "min_": [193, 343, 649], "y_": [193, 343, 346, 350, 351, 436, 444, 452, 463, 471, 483, 484, 518, 519, 572, 573, 607, 608, 649, 694, 705, 715, 750, 784], "target": 200, "long": [200, 351, 645, 649, 727, 740, 762, 774], "tradit": 200, "explicit": [200, 343], "unmodifi": [205, 209], "m_": [205, 300, 343], "p_": [205, 282, 310, 343, 649], "part": [205, 347], "n_": [205, 221, 236, 271, 272, 273, 300, 306, 310, 343, 351, 739], "diagnost": [216, 649], "post": [216, 217], "otherwis": [217, 646, 812], "pval": [217, 796, 801], "dist": 217, "respect": [217, 258, 342, 351, 456, 555, 754, 788], "weight_matrix": 220, "quantiti": [221, 346, 350], "j_e": 221, "w_e": 221, "wlog": 221, "denot": [221, 436, 649, 694, 705, 715], "j_c": 221, "whose": [221, 346], "firststageresult": [231, 284], "diagnos": [231, 284], "suffici": [236, 271, 273, 739], "sqrt": [236, 343, 351, 645, 649, 739], "filter": [242, 293, 329, 499, 537, 588, 623, 746, 780], "star": [258, 342, 555], "descript": [258, 259, 555, 556, 699, 710, 720], "estimator_method": [258, 555], "anderson_rubin": 270, "anderson": [270, 271, 343], "rubin": [270, 271, 343], "basmann": [270, 273, 343], "basmann_f": 270, "sargan": [270, 272, 343], "ln": [271, 343, 645, 647, 649], "onto": [282, 310], "_e": [282, 310], "_c": [282, 310], "var": [282, 310, 403, 405, 416, 645, 649], "leav": [282, 310, 343, 645], "annihil": [300, 343], "gamma_1": [306, 308, 647], "gamma_q": 306, "_1": 308, "gamma_p": 308, "x_j": 308, "2002": [308, 644, 645, 646, 647], "eq": [308, 645], "_ol": 311, "ivmodelcomparison": 342, "recov": 343, "k_": 343, "written": 343, "underset": 343, "textrm": [343, 351], "underbrac": 343, "gamma_": [343, 351], "u_": 343, "compactli": [343, 694, 705, 715], "implicit": [343, 428, 432, 436, 440, 444, 448, 452, 457, 463, 467, 471, 475], "partit": 343, "mathrm": [343, 649], "eig": 343, "eigenvalu": 343, "zwz": 343, "let": 343, "rss": 343, "mss": 343, "tss": 343, "unless": 343, "dot": [343, 649, 694, 705, 715], "asymptot": [343, 350, 649, 727, 740, 762, 774, 793, 794], "xi": [343, 353, 369, 649], "member": [343, 350, 645], "rescal": 343, "e_": 343, "0s": 343, "h_": 343, "pr": 343, "phi": 343, "student": 343, "2t_": 343, "t_": [343, 351], "cdot": 343, "cdf": 343, "ci_": 343, "pm": 343, "q_": 343, "quantil": 343, "critic": [343, 801, 802], "taken": [343, 454], "wsw": 343, "collaps": 343, "replac": [343, 351, 353, 369, 387, 395, 649], "notabl": [343, 352], "overlin": 343, "nu": 343, "minu": [343, 487, 522, 576, 611], "magnitud": 343, "Then": [343, 351], "nr": [343, 346, 350, 513, 553, 602, 639], "andersen": 343, "basman": 343, "haussman": 343, "wh": 343, "k1": 343, "k2": [343, 649], "j_": 343, "ensur": [343, 431, 439, 447, 452, 456, 463, 466, 474, 645, 646, 648], "r2": [343, 645, 726, 750, 754, 761, 784, 788], "under": [343, 350, 490, 525, 526, 579, 614], "unexplain": 343, "On": [343, 351], "wors": 343, "w_": [343, 351], "6z_": 343, "leq0": 343, "5m": 343, "geq1": 343, "todo": [343, 645], "execut": [343, 357, 365, 373, 383, 391, 399, 726, 738, 761, 773], "minimum": 343, "reparameter": 343, "somewhat": [343, 350], "obviou": 343, "driven": 343, "baltagi": [343, 351, 644], "baumet": [343, 644], "camet": [343, 644], "camtri05": [343, 644], "camtri09": [343, 644], "green": [343, 644, 645, 649, 727, 740, 762, 774], "newwes94": [343, 644], "wool10": [343, 644], "wool12": [343, 644], "primari": 345, "3d": 345, "job": 345, "47000000": 345, "35000": 345, "43000000": 345, "37000": 345, "49000000": 345, "39000": 345, "410440": 345, "1560000": 345, "10500": 345, "1970000": 345, "11000": 345, "463100": 345, "270027": 345, "088949": 345, "518670": 345, "063013": 345, "130621": 345, "571320": 345, "259130": 345, "080043": 345, "233347": 345, "305651": 345, "055570": 345, "946565": 345, "165385": 345, "052644": 345, "198597": 345, "047832": 345, "046520": 345, "mi_data": 345, "referenc": 345, "represent": [345, 350, 407], "0528": [345, 645], "0379": 345, "140": [345, 645], "overal": [345, 346, 347, 350, 352, 479, 483, 505, 515, 518, 544, 569, 572, 594, 604, 607, 629, 645, 646, 647, 648, 750, 754, 784, 788], "90": [345, 645, 647], "459": [345, 346], "0751": 345, "48": [345, 350, 352, 645, 647], "0267": [345, 352], "avg": [345, 346, 347, 350, 352], "ob": [345, 346, 347, 350, 351, 352], "9167": 345, "0054": [345, 352, 645], "2528": 345, "poolabl": [345, 346, 347, 350, 352], "094": 345, "1184": 345, "missingvaluewarn": 345, "super": 345, "__init__": 345, "check_rank": [345, 428, 431, 436, 439, 444, 447, 452, 456, 463, 466, 471, 474], "np_data": 345, "asarrai": 345, "np_lscrap": 345, "get_loc": 345, "np_hrsemp": 345, "nentiti": [345, 403, 641], "ntime": [345, 641], "reshap": 345, "entrant": 345, "schedul": 345, "remain": [345, 351], "viabl": 345, "notat": [345, 347, 645], "principl": 345, "da": 345, "to_xarrai": 345, "keysview": [345, 811], "coordin": 345, "int64": [345, 346, 352], "410495": 345, "410500": 345, "419482": 345, "419483": 345, "08895": 345, "1306": 345, "1942": [345, 346], "1525": 345, "259": [345, 645], "68": [345, 346], "741": [345, 647], "798": 345, "05557": 345, "05264": 345, "06063": 345, "05716": 345, "947": 345, "1986": [345, 346], "101": [345, 645], "165": [345, 352], "04783": 345, "611": 345, "you": 345, "manual": [345, 644, 645], "year_str": 345, "reset_index": [345, 352], "year_cat": 345, "053435": 345, "252033": 345, "1985": [345, 346], "1240": 345, "78": [345, 352, 645], "3496": 345, "1591": 345, "1146": 345, "3888": 345, "1684": 345, "3868": 345, "0685": [345, 645], "4620": [345, 346], "1176": [345, 645], "9297": 345, "6957": 345, "2284": 345, "649": 345, "vella": [346, 645, 646], "verbeek": 346, "1998": 346, "dynam": 346, "young": 346, "men": [346, 350], "183": [346, 647], "1980": 346, "multiindex": [346, 347, 352, 403, 414], "understood": 346, "wage_panel": [346, 350, 513, 553, 602, 639], "occup": 346, "2672": 346, "197540": 346, "1981": 346, "2320": 346, "853060": 346, "1982": 346, "2940": [346, 647], "344462": 346, "1983": 346, "2960": 346, "433213": 346, "1984": 346, "3071": 346, "568125": 346, "plain": 346, "understand": 346, "exog_var": [346, 513, 553, 602, 639], "pooled_r": [346, 645], "1893": 346, "2066": 346, "4360": [346, 350], "1692": 346, "49": [346, 347, 352], "2982": 346, "72": [346, 347, 352, 645], "545": [346, 350], "4345": 346, "0921": 346, "0783": 346, "1761": 346, "2396": 346, "2455": [346, 646], "1392": 346, "0236": 346, "9049": 346, "1855": 346, "0930": 346, "0160": [346, 645], "7703": 346, "4412": 346, "0248": [346, 645], "0568": 346, "0672": 346, "9095": 346, "0404": 346, "0941": 346, "9413": [346, 645], "0157": 346, "8997": 346, "0775": [346, 645], "1390": 346, "0052": [346, 645], "442": 346, "0811": [346, 645], "1016": 346, "1825": [346, 347], "0172": [346, 645], "635": 346, "1488": 346, "2161": 346, "0583": 346, "0304": 346, "9214": 346, "0548": [346, 645], "1178": [346, 645], "0628": 346, "0332": 346, "8900": 346, "0588": 346, "0620": 346, "0367": 346, "6915": [346, 646], "0099": [346, 645], "1339": 346, "0905": 346, "2566": 346, "1691": 346, "1092": 346, "0434": 346, "5200": 346, "0118": 346, "1420": 346, "0464": 346, "0580": 346, "2330": 346, "0494": [346, 645], "5165": 346, "0769": 346, "2707": 346, "consid": [346, 647, 648, 649], "quasi": [346, 350, 351], "re_r": 346, "1806": 346, "1853": 346, "1799": 346, "1828": 346, "1622": 346, "409": 346, "0234": 346, "1514": 346, "1546": 346, "8771": 346, "2735": 346, "3203": 346, "1394": 346, "0480": 346, "9054": [346, 352], "0453": [346, 645], "5078": 346, "6116": 346, "0622": 346, "1058": 346, "0154": 346, "0756": 346, "1361": 346, "0047": 346, "8623": [346, 647], "0061": 346, "0638": 346, "0168": 346, "8035": 346, "0309": [346, 645], "0967": [346, 647], "0919": [346, 645], "0107": 346, "5744": 346, "1129": 346, "1059": 346, "9289": 346, "1409": [346, 645], "6362": 346, "1019": 346, "0889": 346, "0324": 346, "9519": 346, "3412": 346, "0944": 346, "0202": 346, "0417": 346, "4840": 346, "6284": 346, "0616": 346, "1020": [346, 645], "0430": 346, "0515": 346, "8350": 346, "4037": 346, "1440": 346, "0577": [346, 645], "0615": 346, "9383": 346, "3482": 346, "0629": 346, "1782": 346, "1994": [346, 351, 644, 646], "2321": [346, 645], "1348": 346, "0817": 346, "6504": 346, "0989": 346, "0253": 346, "2950": [346, 645], "trend": 346, "matter": 346, "access": [346, 645], "variance_decomposit": [346, 515, 604], "106946": 346, "123324": 346, "percent": 346, "464438": 346, "decomposit": [346, 515, 552, 604, 638], "theta_i": 346, "unbalanc": [346, 351, 429], "balanc": [346, 429], "645059": 346, "110": 346, "broadli": 346, "be_r": 346, "2155": [346, 646], "1141": 346, "1686": 346, "194": 346, "633": 346, "538": 346, "2836": 346, "1784": 346, "5897": 346, "1125": 346, "0668": 346, "6340": 346, "1414": 346, "0489": 346, "8915": 346, "2375": 346, "2355": 346, "0737": 346, "0938": 346, "4538": 346, "0501": 346, "0412": 346, "4346": 346, "0606": [346, 645], "2226": 346, "5159": 346, "0702": 346, "1123": 346, "2587": 346, "0460": 346, "6214": 346, "1683": 346, "3491": 346, "reweight": [346, 351, 429], "BE": 346, "consider": 346, "slower": 346, "wise": [346, 351, 482, 484, 517, 519, 571, 573, 606, 608], "incorpor": 346, "fe_r": [346, 513, 553, 602, 639], "0807": 346, "1324": [346, 347, 352], "851": 346, "3805": 346, "4260": 346, "0183": [346, 646], "748": 346, "3901": 346, "3612": 346, "0800": 346, "0193": 346, "1430": [346, 350, 647], "0467": 346, "5494": 346, "0108": [346, 645], "0826": 346, "1512": 346, "0219": [346, 347], "8883": 346, "1082": [346, 645], "2530": 346, "0244": 346, "360": 346, "2051": 346, "3008": 346, "3544": 346, "121": 346, "2971": 346, "4118": 346, "4901": 346, "529": [346, 647], "4191": 346, "5611": 346, "6175": 346, "0452": [346, 645], "648": 346, "5288": 346, "7062": 346, "7655": 346, "0561": 346, "6555": 346, "8755": 346, "9250": 346, "0688": 346, "450": 346, "7902": 346, "0599": 346, "1568": 346, "544": [346, 350], "wherea": 346, "fe_te_r": 346, "0216": [346, 646], "4809": 346, "2253": 346, "0378": 346, "7964": 346, "9448": 346, "551": 346, "use_lsdv": [346, 454], "auto_df": [346, 348, 454], "instruct": 346, "treatment": [346, 454], "lost": 346, "count_effect": [346, 348, 454], "other_effect": [346, 452, 456, 641], "engog": 346, "below": [346, 351, 645], "we": 346, "reproduc": 346, "paneldata": [346, 431, 435, 439, 443, 447, 451, 456, 461, 466, 470, 474, 478], "time_id": [346, 353, 361, 369, 387, 395, 403], "fe_oe_r": 346, "addition": [346, 452], "look": [346, 645], "soak": 346, "challeng": 346, "fd_re": 346, "0268": 346, "5491": 346, "3815": 346, "5328": 346, "2305": 346, "208": 346, "3811": 346, "0196": 346, "9096": 346, "0773": 346, "1542": 346, "8005": 346, "0197": 346, "1767": 346, "0296": 346, "0813": 346, "0229": 346, "6633": 346, "0963": [346, 645], "certain": [346, 694, 715], "cluster_ent": [346, 445, 454, 456, 464, 472], "cluster_tim": [346, 454, 464, 472], "clust_ent": 346, "clust_entity_tim": 346, "board": 346, "suggest": [346, 649], "decreas": 346, "address": [346, 350], "1866": 346, "1679": 346, "2027": 346, "142": 346, "0347": 346, "5360": 346, "2892": 346, "3145": 346, "1438": 346, "9045": 346, "8727": 346, "7952": 346, "4008": 346, "4428": 346, "0892": 346, "7881": 346, "1728": 346, "3223": 346, "1934": 346, "2747": 346, "1571": 346, "1077": [346, 645], "0525": [346, 645], "8989": 346, "0994": 346, "626": 346, "802": 346, "296": 346, "1801": 346, "087": 346, "5343": [346, 645], "6732": 346, "reliabl": 346, "theori": [346, 350], "value_count": 346, "881": [346, 347], "509": [346, 347], "486": 346, "401": 346, "399": [346, 647], "233": [346, 645], "51": [346, 645, 647], "2989": 346, "4352": 346, "116": 346, "1479": 346, "2346": 346, "8145": 346, "3247": 346, "2553": 346, "0297": [346, 347], "8469": [346, 645], "2020": 346, "0857": [346, 645], "0266": [346, 645, 647], "5892": 346, "5557": 346, "0679": [346, 645], "6513": 346, "1155": 346, "2442": 346, "0139": [346, 645], "7322": 346, "0804": [346, 645], "1350": 346, "8846": 346, "1213": 346, "6323": 346, "1174": 346, "2428": 346, "caveat": 347, "grunfeld": [347, 352], "corpor": 347, "illustr": [347, 645], "stock": 347, "capit": [347, 352, 645], "load_panda": [347, 352], "motor": [347, 352], "1935": 347, "317": 347, "3078": 347, "1936": 347, "391": 347, "4661": [347, 645], "1937": 347, "410": 347, "5387": [347, 645], "156": 347, "1938": 347, "257": 347, "2792": 347, "209": 347, "1939": 347, "330": [347, 645], "4313": 347, "203": 347, "entityeffect": [347, 350, 456], "7667": [347, 352], "8223": [347, 352, 645], "220": [347, 352, 648], "8132": [347, 352], "1167": [347, 352], "340": [347, 352, 645], "207": [347, 352], "3100": [347, 352], "0165": [347, 352], "744": [347, 352], "2774": [347, 352], "3426": [347, 352], "1101": [347, 352, 645], "7461": [347, 352], "0879": [347, 352, 646], "impos": [347, 351, 645, 648], "grand": [347, 351], "8193": 347, "8071": 347, "272": 347, "891": 347, "0750": [347, 646], "76": 347, "743": 347, "800": 347, "timeeffect": [347, 456], "7253": 347, "7944": 347, "7566": 347, "7856": 347, "1153": 347, "248": 347, "188": 347, "394": 347, "732": [347, 647], "6861": 347, "97": [347, 352], "278": 347, "3514": 347, "0210": [347, 646], "696": 347, "3099": 347, "3930": 347, "0912": 347, "1422": 347, "476": 347, "straight": 347, "forward": 347, "8644": 347, "4195": 347, "7616": 347, "997": [347, 645, 647], "3825": 347, "444": 347, "8597": 347, "85": [347, 647], "1746": [347, 645], "8692": 347, "3730": 347, "4323": 347, "0269": 347, "0726": 347, "4287": 347, "8643": 347, "7539": [347, 647], "8461": 347, "1071": 347, "679": 347, "2786": 347, "1900": 347, "3673": 347, "0891": 347, "348": [347, 645], "0736": 347, "1045": 347, "8179": 347, "8426": 347, "7357": 347, "1301": 347, "487": 347, "4134": [347, 645], "5654": 347, "992": 347, "828": 347, "2275": 347, "0242": 347, "3904": [347, 646], "1145": 347, "753": 347, "1037": 347, "1254": [347, 648], "detect": 348, "design": [348, 350, 351], "affin": 348, "aggreg": [348, 645], "plm": [349, 352], "analysi": [349, 352, 644, 645, 727, 740, 762, 774], "countri": [350, 646], "diverg": 350, "setup": 350, "techniqu": 350, "presenc": 350, "man": 350, "1365": 350, "wed": 350, "apr": [350, 352], "0270": 350, "1439": 350, "200": [350, 645], "3812": 350, "3953": 350, "113": 350, "3712": 350, "4194": 350, "560": 350, "0041": 350, "1073": 350, "0182": 350, "8992": 350, "0717": [350, 645], "0828": 350, "1864": 350, "0440": 350, "1215": 350, "3360": 350, "nt": 351, "want": 351, "lsdv": [351, 352, 454], "d_": 351, "multipli": 351, "theta_": 351, "approx1": 351, "approx0": 351, "rss_": [351, 525], "propto": 351, "imbalanc": 351, "root": [351, 407], "xx": [351, 353, 361, 369, 387, 395], "ti": 351, "ii": [351, 649, 754, 788], "belong": 351, "agre": 351, "prefix": 351, "texttt": 351, "_squar": 351, "iw": 351, "ddot": [351, 649, 694, 705, 715], "reflect": 351, "rho_": 351, "deviat": 351, "o": 351, "few": 352, "liner": 352, "quickli": 352, "slow": 352, "moder": 352, "nor": 352, "them": [352, 645], "rsquared_inclus": [352, 515], "inconsist": 352, "canon": 352, "etdata": 352, "838": 352, "paneleffectsresult": [352, 454], "0x2aeec70b7f0": 352, "tedata": 352, "quit": 352, "fe_b": 352, "atlant": 352, "refin": 352, "chrysler": 352, "diamond": 352, "electr": 352, "goodyear": 352, "ibm": 352, "steel": 352, "oil": 352, "westinghous": 352, "9461": 352, "9429": 352, "rmse": 352, "2995": 352, "302": 352, "6388": 352, "coef": 352, "0880": 352, "1323": 352, "2776": [352, 645, 647], "3425": 352, "94": 352, "1637": 352, "127": 352, "6652": 352, "60": [352, 647], "3834": 352, "3382": 352, "6771": 352, "2138": 352, "7520": 352, "9436": 352, "88": [352, 647], "3806": 352, "2393": 352, "4613": 352, "264": [352, 645], "8953": 352, "0871": [352, 647], "7209": 352, "2801": 352, "3043": 352, "9080": 352, "66": [352, 647], "6363": [352, 645], "3788": 352, "98": 352, "7389": 352, "5338": 352, "5820": 352, "3792": 352, "8749": 352, "6852": 352, "5212": 352, "122": [352, 647], "4829": 352, "9595": 352, "6023": 352, "173": [352, 645], "3636": 352, "9660": 352, "3575": 352, "9683": 352, "3092": 352, "0339": 352, "8942": 352, "0424": 352, "5782": 352, "2978": 352, "7219": 352, "5655": [352, 645], "entity_id": [353, 361, 369, 387, 395, 403], "extra_df": [353, 361, 369, 387, 395], "consum": [353, 361, 369, 387, 395], "irrespect": [353, 361, 369, 387, 395], "xi_t": [353, 369], "s_i": 353, "ij": [353, 645, 649, 705, 727, 750, 762, 784], "i0": 353, "group_debia": [361, 362, 651], "roger": [361, 697, 718], "intersect": 361, "driscol": [369, 445, 454, 464, 472], "kraai": [369, 445, 454, 464, 472], "n_t": 369, "_t": [369, 436], "disabl": 377, "cast": 403, "typeerror": 403, "valueerror": 403, "wrong": 403, "values2d": 403, "values3d": 403, "deep": 404, "return_panel": 407, "low_memori": [407, 454], "boolean": [408, 445, 454, 464, 472], "hashabl": [410, 423, 427], "groupbi": [413, 645], "_panel": 421, "proport": [428, 431, 436, 439, 444, 447, 452, 456, 463, 466, 471, 474, 645, 646], "not_nul": [428, 436, 444, 452, 463, 471], "coerc": [429, 431, 439, 445, 447, 454, 456, 464, 466, 472, 474], "conform": [431, 439, 447, 456, 466, 474], "numer": [431, 439, 447, 452, 456, 463, 466, 474, 801], "unstabl": [431, 439, 447, 452, 456, 463, 466, 474], "full": [431, 439, 447, 452, 456, 463, 466, 474, 645, 649], "generate_panel_data": [431, 439, 447, 456, 466, 474], "panel_data": [431, 439, 447, 456, 466, 474], "reformat": [435, 443, 451, 461, 470, 478], "made": [436, 491, 527, 580, 615, 647], "scenario": 445, "gamma_t": 452, "gamma_i": 452, "arbitrari": [452, 645, 649, 680], "u_i": 471, "small_sampl": 472, "randomeffectsresult": 472, "entity_info": [479, 515, 569, 604], "estimated_effect": [479, 515, 569, 604], "f_statistic_robust": [479, 515, 569, 604], "loglik": [479, 515, 569, 604], "rsquared_between": [479, 515, 555, 569, 604], "rsquared_overal": [479, 515, 555, 569, 604], "rsquared_within": [479, 515, 555, 569, 604], "time_info": [479, 515, 569, 604], "plu": [486, 521, 575, 610], "fill": [489, 524, 578, 613], "rss_r": [490, 526, 579, 614], "rss_u": [490, 526, 579, 614], "df_u": [490, 526, 579, 614], "unrestrict": [490, 526, 579, 614, 649], "f_pool": 515, "included_effect": 515, "other_info": 515, "df_": 525, "971": 641, "rng": 641, "explanatori": 641, "sequenc": 641, "seed": 641, "panelmodeldata": 641, "namedtupl": 641, "deriv": 641, "intention": 643, "intent": 643, "linear_model": 643, "multivari": [643, 701, 722], "badi": 644, "wilei": 644, "son": 644, "2008": 644, "svetlana": 644, "spuriou": 644, "paper": 644, "baum": 644, "christoph": 644, "schaffer": 644, "steven": 644, "stillman": 644, "routin": 644, "2007": 644, "465": 644, "506": 644, "colin": 644, "jonah": 644, "gelbach": 644, "dougla": 644, "miller": 644, "multiwai": 644, "2011": 644, "238": 644, "249": 644, "pravin": 644, "cambridg": 644, "2005": 644, "adrian": 644, "vol": 644, "station": 644, "tx": [644, 645], "2009": 644, "revis": 644, "edit": [644, 645], "princeton": 644, "william": [644, 727, 740, 762, 774], "pearson": [644, 727, 740, 762, 774], "2003": [644, 727, 740, 762, 774], "henningsen": [644, 649], "hamann": 644, "systemfit": 644, "softwar": 644, "doi": 644, "dx": 644, "org": 644, "18637": 644, "jss": 644, "v023": 644, "i04": 644, "jagannathan": 644, "ravi": 644, "georgio": 644, "skoulaki": 644, "zhenyu": 644, "wang": 644, "470": 644, "481": 644, "whitnei": 644, "kenneth": 644, "631": 644, "statacorp": 644, "2013": 644, "mit": 644, "2010": [644, 645], "modern": 644, "western": 644, "pub": 644, "2012": 644, "compris": 645, "omega": [645, 649, 651, 655, 658, 661, 666, 670, 674, 694, 715, 754, 788], "epsilon_j": 645, "benefici": 645, "munnel": 645, "gdp": [645, 646], "unemploy": 645, "gf": 645, "al": 645, "fl": 645, "la": 645, "ms": 645, "mw": 645, "il": 645, "IN": 645, "ky": 645, "mi": 645, "mn": 645, "oh": 645, "wi": 645, "ma": 645, "de": 645, "md": 645, "nj": 645, "ny": 645, "pa": 645, "va": 645, "mt": 645, "nd": 645, "sd": 645, "wy": 645, "ne": 645, "ct": 645, "me": 645, "nh": 645, "ri": 645, "vt": 645, "ga": 645, "nc": 645, "sc": 645, "tn": 645, "wv": 645, "sw": 645, "az": 645, "nv": 645, "nm": 645, "ut": 645, "cn": 645, "ak": 645, "ia": 645, "ks": 645, "mo": 645, "ok": 645, "wc": 645, "ca": 645, "OR": 645, "def": 645, "map_region": 645, "st_abb": 645, "map": 645, "total_emp": 645, "emp_shar": 645, "weighed_unemp": 645, "unemp": 645, "agg_data": 645, "gsp": 645, "pc": 645, "hwy": 645, "water": 645, "complex": 645, "recommend": [645, 646], "ordereddictionari": 645, "mod_data": 645, "region_data": 645, "lngsp": 645, "lnpc": 645, "lnhwy": 645, "lnwater": 645, "lnutil": 645, "lnemp": 645, "gain": [645, 648, 649, 727, 740, 762, 774], "inspect": 645, "diag": 645, "pyplot": 645, "plt": 645, "vmax": 645, "style": 645, "3f": 645, "nbsp": 645, "447": 645, "547": 645, "525": 645, "425": 645, "763": 645, "167": 645, "325": 645, "697": 645, "489": 645, "132": 645, "565": 645, "537": 645, "343": 645, "130": 645, "505": 645, "574": 645, "037": 645, "241": 645, "322": 645, "351": 645, "058": 645, "091": 645, "783": 645, "269": 645, "388": 645, "713": 645, "366": 645, "350": 645, "298": 645, "seen": 645, "ipython": 645, "imag": 645, "display_png": 645, "system_correct": 645, "png": 645, "line": 645, "as_text": 645, "split": 645, "9937": 645, "9988": 645, "judg": [645, 646, 647, 750, 754, 784, 788], "dhryme": [645, 646, 647, 754, 788], "num": [645, 646, 647, 648], "310": 645, "4680": 645, "723": 645, "1424": 645, "4117": 645, "1580": 645, "4800": 645, "0780": 645, "8856": 645, "5169": 645, "6480": 645, "8987": 645, "8725": 645, "1785": 645, "0607": 645, "9399": 645, "0595": [645, 647], "2975": 645, "1898": 645, "3744": 645, "1774": 645, "4559": 645, "9237": 645, "9533": 645, "0847": 645, "252": 645, "1193": [645, 647], "5007": 645, "1334": 645, "0072": 645, "9979": 645, "1273": 645, "0389": 645, "0766": 645, "0858": 645, "8929": 645, "3719": 645, "0916": 645, "2449": 645, "1312": 645, "0258": 645, "3050": 645, "3819": 645, "1195": 645, "0611": [645, 647], "2240": 645, "0261": 645, "2558": 645, "0161": 645, "5216": 645, "1107": 645, "7102": 645, "3045": 645, "7386": 645, "3439": 645, "3723": 645, "7051": 645, "0156": 645, "equation_label": [645, 646, 726, 761], "coast": 645, "9900": 645, "2862": 645, "9602": 645, "5675": 645, "5704": 645, "8100": 645, "7303": 645, "1699": 645, "8500": 645, "0643": 645, "3500": 645, "1317": 645, "1138": 645, "1569": 645, "3547": [645, 646], "3470": 645, "1733": 645, "0020": [645, 647], "6867": 645, "0895": 645, "1928": 645, "8471": 645, "8204": 645, "0696": 645, "1708": 645, "7349": 645, "4043": 645, "4180": 645, "append": 645, "ipykernel_3493": 645, "3962891974": 645, "886": 645, "178": 645, "190": 645, "953": 645, "003": 645, "083": 645, "077": 645, "136": [645, 647], "522": 645, "539": 645, "016": 645, "960": 645, "170": [645, 647], "347": 645, "090": 645, "070": 645, "006": 645, "463": 645, "115": 645, "180": 645, "262": 645, "079": 645, "001": 645, "294": 645, "118": [645, 647], "557": 645, "494": 645, "020": 645, "616": [645, 646, 647, 648], "311": 645, "060": 645, "659": 645, "018": 645, "162": 645, "063": 645, "641": 645, "081": 645, "281": 645, "620": 645, "008": 645, "096": 645, "612": 645, "694": 645, "062": 645, "031": 645, "405": 645, "295": 645, "321": 645, "029": 645, "stronger": 645, "violat": 645, "seem": 645, "2443339187": 645, "567": 645, "002": 645, "358": 645, "805": 645, "007": 645, "028": 645, "164": 645, "075": 645, "169": [645, 647], "637": 645, "362": 645, "017": 645, "998": 645, "590": 645, "174": 645, "226": 645, "917": 645, "994": 645, "378": 645, "153": 645, "306": 645, "533": 645, "344": 645, "005": 645, "999": 645, "969": [645, 647], "380": 645, "855": 645, "778": 645, "673": 645, "026": 645, "986": 645, "927": 645, "043": 645, "773": 645, "111": [645, 647], "604": 645, "717": 645, "356": 645, "621": 645, "386": 645, "546": 645, "475": 645, "995": 645, "se": 645, "3606921718": 645, "002124": 645, "301235": 645, "200966": 645, "142355": 645, "163546": 645, "165995": 645, "076637": 645, "085831": 645, "294855": 645, "205417": 645, "169950": 645, "091865": 645, "152601": 645, "084031": 645, "114834": 645, "048489": 645, "020407": 645, "285621": 645, "118316": 645, "131329": 645, "377570": 645, "167307": 645, "310861": 645, "080893": 645, "042818": 645, "279472": 645, "063212": 645, "104344": 645, "233403": 645, "206248": 645, "095886": 645, "101564": 645, "385885": 645, "211083": 645, "294570": 645, "090104": 645, "fring": [645, 646, 648], "benefit": [645, 646, 648], "censor": [645, 646], "fdata": 645, "441": 645, "457": 645, "annearn": 645, "hrearn": [645, 646, 648], "nrtheast": [645, 646], "northeast": 645, "nrthcen": [645, 646], "north": 645, "central": 645, "offic": 645, "annhr": 645, "ind1": 645, "ind2": 645, "ind3": 645, "ind4": 645, "ind5": 645, "ind6": 645, "ind7": 645, "ind8": 645, "ind9": 645, "vacdai": 645, "vac": 645, "sicklv": 645, "sick": 645, "pension": 645, "annben": 645, "hrben": [645, 646, 648], "annhrssq": 645, "beratio": 645, "lannhr": 645, "tenuresq": 645, "lannearn": 645, "peratio": 645, "vserat": 645, "bring": 645, "fmod_data": 645, "fmod": 645, "2087": 645, "2926": 645, "4822": 645, "6321": 645, "2153": 645, "1658": 645, "2502": 645, "4588": 645, "0684": 645, "7085": 645, "3248": 645, "5929": 645, "0758": 645, "0567": 645, "3367": 645, "1813": 645, "1870": 645, "4274": 645, "0829": 645, "3276": 645, "1843": 645, "5640": 645, "8080": 645, "4035": 645, "0026": 645, "5988": 645, "4566": 645, "5459": 645, "8365": 645, "4029": 645, "5265": 645, "6132": 645, "1508": 645, "5993": 645, "9201": 645, "0239": 645, "5501": 645, "1565": 645, "2475": [645, 647], "7145": 645, "6424": 645, "5540": 645, "1202": [645, 647], "1678": 645, "4526": 645, "6054": 645, "8844": 645, "0458": 645, "3275": 645, "7847": 645, "3938": 645, "5322": 645, "5565": 645, "8897": 645, "1453": 645, "1225": 645, "6049": 645, "0768": 645, "0082": [645, 646], "3896": 645, "0608": 645, "3259": 645, "0093": [645, 647], "3965": 645, "0536": 645, "4011": 645, "0730": 645, "3659": 645, "0482": 645, "5839": 645, "2713": 645, "4605": 645, "0227": 645, "0653": 645, "3476": 645, "7282": 645, "1506": 645, "1052": 645, "7918": 645, "4285": 645, "1972": 645, "0380": 645, "5776": 645, "5635": [645, 646], "1669": 645, "0909": 645, "0579": 645, "2418": 645, "0390": 645, "1547": 645, "0902": 645, "2453": 645, "2130": 645, "0517": 645, "2683": 645, "0471": 645, "6985": 645, "3606": 645, "though": 645, "typic": 645, "exog_earn": 645, "exog_ben": 645, "1685": 645, "2762": 645, "4504": 645, "5240": 645, "3246": 645, "0201": 645, "6520": 645, "3959": 645, "5000": 645, "2987": 645, "3657": 645, "6342": 645, "0212": 645, "0522": 645, "4058": 645, "6849": 645, "1234": 645, "1043": 645, "3928": 645, "8116": 645, "0049": 645, "3345": 645, "8741": 645, "4305": 645, "2411": 645, "2146": 645, "3780": 645, "3095": [645, 647], "1320": 645, "5845": 645, "9368": 645, "8231": 645, "0535": 645, "5927": 645, "0791": 645, "8927": 645, "0948": 645, "9114": 645, "0130": 645, "2409": 645, "6275": 645, "3766": 645, "9259": 645, "2835": 645, "4698": 645, "2141": 645, "0433": 645, "1292": 645, "2990": 645, "via": 645, "fmod_r": 645, "2749": 645, "4532": 645, "5147": 645, "3161": 645, "0206": 645, "6428": 645, "3867": 645, "5001": 645, "3004": 645, "3658": 645, "0211": 645, "4044": 645, "6859": 645, "1233": 645, "8760": 645, "8115": 645, "5314": 645, "2342": 645, "2171": 645, "3752": 645, "3124": 645, "1191": 645, "9145": 645, "0556": 645, "2648": 645, "9947": 645, "0527": 645, "5919": 645, "0792": 645, "9004": 645, "0635": 645, "9213": 645, "8528": 645, "0492": [645, 646], "2189": 645, "0307": 645, "0677": [645, 646], "6025": 645, "3771": 645, "9364": 645, "8627": 645, "1258": 645, "2956": 645, "fres_het": 645, "8703": 645, "9002": 645, "2297": 645, "8183": 645, "0809": 645, "3413": 645, "6586": 645, "2270": 645, "9257": 645, "5507": 645, "5819": 645, "0083": 645, "0148": 645, "2857": 645, "8647": 645, "5443": 645, "6644": 645, "5273": 645, "3110": 645, "5678": 645, "4992": 645, "4921": 645, "3002": 645, "1674": 645, "0966": 645, "6087": 645, "6111": 645, "7768": 645, "0632": 645, "0949": 645, "0376": 645, "4121": 645, "0514": 645, "3342": 645, "2760": 645, "4773": 645, "0397": [645, 647], "3975": 645, "1363": [645, 647], "2918": 645, "hac_r": 645, "0048": [645, 646], "5120": 645, "0120": [645, 647], "4933": 645, "5547": 645, "1391": 645, "3093": 645, "6907": 645, "0925": 645, "9263": 645, "4694": 645, "4270": 645, "5486": 645, "5833": 645, "2637": 645, "5875": 645, "6211": 645, "2657": 645, "4750": 645, "4065": 645, "4813": 645, "3520": 645, "0187": 645, "1887": 645, "0753": 645, "1344": 645, "1228": 645, "0866": [645, 647], "5596": 645, "0976": 645, "0064": 645, "0386": 645, "9026": 645, "5160": 645, "0318": 645, "0669": 645, "9161": 645, "0705": 645, "3407": [645, 648], "2384": 645, "5148": 645, "7117": 645, "1010": 645, "3271": 645, "enter": 645, "983476381": 645, "28390328": 645, "23829810": 645, "random_clust": 645, "clustered_r": 645, "8501": 645, "9692": 645, "1901": 645, "8579": 645, "3424": 645, "6576": 645, "2285": 645, "0926": 645, "9262": 645, "4690": 645, "4267": 645, "5479": 645, "5837": 645, "2696": 645, "5759": 645, "6327": 645, "5181": 645, "0312": 645, "3024": 645, "4812": 645, "4701": 645, "4083": 645, "0533": 645, "6435": 645, "0342": 645, "6121": 645, "8547": 645, "4288": 645, "0145": 645, "0375": 645, "6793": 645, "7036": 645, "2777": 645, "1717": 645, "2737": 645, "4795": 645, "0317": 645, "7496": 645, "1519": 645, "equicorrel": 645, "avg_corr": 645, "ey": 645, "rho": [645, 649, 727, 762], "sigma_pr": 645, "mod_pre_sigma": 645, "res_pr": 645, "9966": 645, "9945": 645, "549": 645, "9753": 645, "8200": 645, "7883": 645, "739": 645, "1011": 645, "2727": 645, "3708": 645, "7185": 645, "5065": 645, "7087": 645, "9882": 645, "9582": 645, "3098": 645, "1134": 645, "6971": 645, "5016": 645, "1736": [645, 647], "3318": 645, "7720": 645, "6685": 645, "5190": 645, "2040": 645, "8494": 645, "1426": 645, "9557": [645, 647], "5316": 645, "1671": 645, "6466": 645, "full_cov": [645, 697, 718], "param_nam": [645, 694, 695, 705, 706, 715, 716], "underscor": 645, "gf_intercept": 645, "gf_lnpc": 645, "gf_lnhwy": 645, "gf_lnwater": 645, "gf_lnutil": 645, "gf_lnemp": 645, "gf_unemp": 645, "sw_intercept": 645, "sw_lnpc": 645, "sw_lnhwy": 645, "sw_lnwater": 645, "sw_lnutil": 645, "sw_lnemp": 645, "sw_unemp": 645, "enforc": [645, 649], "rest": 645, "wc_unemp": 645, "mt_unemp": 645, "ne_unemp": 645, "ma_unemp": 645, "so_unemp": 645, "rest0": 645, "rest1": 645, "rest2": 645, "rest3": 645, "rest4": 645, "rest5": 645, "rest6": 645, "rest7": 645, "mw_unemp": 645, "cn_unemp": 645, "add_constraint": 645, "constrained_r": 645, "005801": 645, "complic": [645, 646], "idea": 645, "singular": [645, 649], "reset_constraint": 645, "9777": 645, "9891": 645, "2732": 645, "2159": 645, "2656": [645, 646], "2057": 645, "6963": [645, 646], "3639": 645, "3238": 645, "4041": 645, "3103": 645, "141": 645, "2557": 645, "3649": 645, "3615": 645, "0591": 645, "0166": 645, "466": 645, "1408": 645, "6142": 645, "752": 645, "6628": 645, "939": 645, "0117": 645, "2869": 645, "2201": 645, "3034": 645, "1924": 645, "7183": 645, "capm": 645, "mv": 645, "mv_ol": 645, "multivariate_l": 645, "mv_ols_r": 645, "6564": 645, "9773": 645, "1608": 645, "2457": 645, "3736": 645, "0403": 645, "2947": 645, "0711": 645, "0276": 645, "879": 645, "0171": [645, 646], "1251": 645, "5142": 645, "0538": 645, "019": 645, "9965": 645, "1111": [645, 646], "8787": 645, "9861": 645, "0126": 645, "376": 645, "9615": 645, "4953": 645, "8472": 645, "0162": [645, 647], "204": [645, 647], "8154": 645, "8790": 645, "5167": 645, "9851": 645, "515": 645, "9337": 645, "0366": 645, "mostli": 646, "pair": [646, 813], "6951": 646, "2197": 646, "1873": 646, "3775": 646, "6950": 646, "8605": 646, "0445": 646, "5974": 646, "0228": 646, "0473": [646, 647], "4326": 646, "2518": 646, "0490": 646, "1435": 646, "1559": 646, "3478": 646, "0621": [646, 647], "3074": 646, "2650": 646, "0714": 646, "7132": 646, "0867": 646, "2624": 646, "0176": 646, "1775": 646, "0586": 646, "0289": 646, "2923": 646, "3682": 646, "0474": 646, "4612": 646, "9280": 646, "4247": 646, "5260": 646, "1270": 646, "1714": 646, "0213": 646, "4600": 646, "8899": 646, "8408": 646, "1247": 646, "6551": 646, "4472": 646, "3920": 646, "1410": 646, "2539": 646, "3210": 646, "7127": 646, "4473": 646, "5894": 646, "1640": 646, "braces_formula": 646, "braces_mod": 646, "braces_r": 646, "meaningless": 646, "labeled_formula": 646, "labels_mod": 646, "labeled_r": 646, "unlabel": 646, "foral": 646, "random_weight": 646, "chisquar": 646, "weighted_mod": 646, "2190": 646, "1856": 646, "3423": 646, "6962": 646, "0349": 646, "2548": 646, "0443": 646, "0299": [646, 647], "0415": 646, "3585": 646, "2674": 646, "5612": 646, "1731": 646, "3616": 646, "1024": 646, "0560": 646, "8284": 646, "2122": 646, "1521": 646, "2471": 646, "0246": 646, "0194": 646, "0554": 646, "6174": 646, "2535": 646, "0364": 646, "3545": 646, "3091": 646, "2594": 646, "4495": 646, "3568": 646, "1093": 646, "1427": 646, "5710": 646, "4106": 646, "6814": 646, "5821": 646, "3804": 646, "4893": 646, "1013": 646, "2592": 646, "1061": 646, "5932": 646, "6094": 646, "3605": 646, "3005": 646, "2304": 646, "2286": 646, "7030": 646, "6462": 646, "9695": 646, "eqnarrai": 647, "beta_0": 647, "beta_3": 647, "beta_4": 647, "beta_5": 647, "h_i": 647, "gamma_2": 647, "gamma_3": 647, "gamma_4": 647, "morz": 647, "hours_mod": 647, "hours_r": 647, "1903": 647, "1807": 647, "429": 647, "2770": 647, "0952": 647, "1261": 647, "99": 647, "0427": 647, "195": 647, "2666": 647, "96": 647, "2806": 647, "7790": 647, "308": 647, "445": 647, "6787": 647, "7137": 647, "535": 647, "6449": 647, "1626": 647, "472": 647, "4442": 647, "700": 647, "2551": 647, "lwage_mod": 647, "lwage_r": 647, "7582": 647, "7559": 647, "1362": 647, "0875": 647, "3892": 647, "0557": 647, "7501": 647, "0801": 647, "1110": 647, "4898": 647, "8666": 647, "3862": 647, "system_2sl": 647, "system_2sls_r": 647, "1276": 647, "0961": 647, "7279": 647, "system_3sl": 647, "system_3sls_r": 647, "7778": 647, "651": 647, "5456": 647, "4617": 647, "0138": 647, "7822": 647, "521": 647, "052": 647, "2870": 647, "0222": 647, "716": 647, "1563": 647, "2476": 647, "4136": 647, "4646": 647, "2405": 647, "124": 647, "1872": 647, "461": 647, "968": 647, "0859": 647, "3864": 647, "0546": 647, "1171": 647, "0550": 647, "0295": [647, 648], "8622": 647, "1128": 647, "0794": 647, "4010": 647, "programmat": 647, "weaker": 647, "condition": [647, 649], "system_gmm": 647, "system_gmm_r": 647, "0121": 647, "7776": 647, "7268": 647, "5440": 647, "4626": 647, "7868": 647, "519": 647, "038": 647, "2876": 647, "1564": 647, "4149": 647, "4631": 647, "1742": 647, "2403": 647, "2925": 647, "3866": 647, "7540": 647, "meaningfulli": 647, "0345": 647, "2256": 647, "0361": 647, "027": 647, "5086": 647, "2864": 647, "768": 647, "508": 647, "0572": 647, "231": 647, "5947": 647, "227": 647, "216": 647, "0493": 647, "197": 647, "2578": 647, "3146": 647, "5538": 647, "674": 647, "1587": 647, "1933": 647, "2618": 647, "771": 647, "69": 647, "0999": 647, "1338": 647, "0720": 647, "0363": 647, "9840": 647, "8475": 647, "0647": 647, "133e": 647, "2298": 647, "2188": 647, "y_1": [647, 694, 705, 715], "y_2": [647, 694, 705, 715], "x_1": [647, 694, 705, 715], "epsilon_1": 647, "x_2": [647, 694, 705, 715], "substitut": 647, "epsilon_2": 647, "default_rng": 647, "20220224": 647, "50000": 647, "y2": [647, 699, 710, 720], "y1": [647, 699, 710, 720], "in_sampl": 647, "10000": 647, "oo": 647, "9992": 647, "9868": 647, "0116": 647, "9877": 647, "9970": 647, "158": 647, "9847": 647, "9809": 647, "59": 647, "9982": 647, "9637": 647, "40000": 647, "125377": 647, "024812": 647, "40001": 647, "489893": 647, "707565": 647, "40002": 647, "189191": 647, "727702": 647, "40003": 647, "081779": 647, "756181": 647, "40004": 647, "628805": 647, "227368": 647, "49995": 647, "293820": 647, "140007": 647, "49996": 647, "462017": 647, "848988": 647, "49997": 647, "698136": 647, "510755": 647, "49998": 647, "862183": 647, "732983": 647, "49999": 647, "118024": 647, "147715": 647, "y1_pred": 647, "y1_x1": 647, "y1_y2": 647, "y2_pred": 647, "y2_x2": 647, "y2_y1": 647, "pred_df": 647, "own": 648, "entri": [648, 699, 710, 720], "0757": 648, "sat": 648, "2839": 648, "573": 648, "6161": 648, "9517": 648, "1163": 648, "0186": 648, "2478": 648, "0798": 648, "1528": 648, "9598": 648, "3372": 648, "0862": 648, "6390": 648, "5509": 648, "7270": 648, "5617": 648, "5743": 648, "0062": 648, "0240": 648, "0393": 648, "systemresult": [648, 697, 718], "0x282ca8f7b70": 648, "sure": [648, 715], "cccc": [649, 694, 705, 715], "fgl": [649, 694, 699, 705, 715, 720], "nk": 649, "odot": 649, "iota_": 649, "psi_": 649, "1k": 649, "2k": 649, "kk": 649, "needless": 649, "found": [649, 812], "ki": [649, 680, 688], "ji": [649, 680, 688], "widehat": 649, "immedi": 649, "breusch": [649, 727, 762], "pagan": [649, 727, 762], "ssr_": [649, 754, 788], "tss_": [649, 754, 788], "uncent": 649, "1977": 649, "iota": 649, "formul": 649, "tr": [649, 754, 788], "psi": 649, "full_sigma": [651, 666, 670, 674], "ndepend": [651, 666, 670, 674], "linearconstraint": [651, 655, 658, 661, 666, 670, 696, 707, 717], "cov_clust": 651, "group_debias_coeffici": 651, "attrdict": [653, 657, 660, 664, 668, 672, 677, 681, 685, 690, 726, 736, 761, 771], "i_n": [658, 684, 694, 715], "neqn": 687, "_ig_": 688, "w_j": 688, "nequat": 693, "empti": [694, 705, 813], "prespecifi": [694, 699, 705, 715, 720], "vertic": [694, 705, 715], "y_k": [694, 705, 715], "x_k": [694, 705, 715], "nconstraint": [695, 706, 716], "nparamet": [695, 706, 716], "con": [696, 707, 717], "repres": [699, 710, 720], "curli": [699, 710, 720], "brace": [699, 710, 720], "encapsul": [699, 710, 720], "x1_1": [699, 710, 720], "x1_2": [699, 710], "x2_1": [699, 710, 720], "x2_2": [699, 710], "randn": [699, 710, 720], "eq1": [699, 710, 720], "eq2": [699, 710, 720], "ndep": [701, 722], "At": 701, "fir": [703, 713, 724], "assembl": [703, 713, 724, 746, 780], "eqn": [703, 713, 724, 746, 780], "beta_j": 705, "gmmsystemresult": 708, "system_rsquar": [726, 761], "lr": [740, 774], "sum_i": [750, 754, 784, 788], "sum_j": [750, 754, 784, 788], "denomin": [750, 784], "_ij": [754, 788], "sum__i": [754, 788], "why": 796, "critical_valu": [796, 801], "df_denom": 801, "holder": 801, "statement": 801, "kwarg": [806, 815], "shallow": 808, "itemsview": 810, "keyerror": [812, 813], "lack": 815, "valuesview": 816}, "objects": {"linearmodels.asset_pricing": [[53, 0, 0, "-", "covariance"], [53, 0, 0, "-", "model"], [53, 0, 0, "-", "results"]], "linearmodels.asset_pricing.covariance": [[0, 1, 1, "", "HeteroskedasticCovariance"], [7, 1, 1, "", "KernelCovariance"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance": [[1, 2, 1, "", "config"], [2, 2, 1, "", "cov"], [3, 2, 1, "", "inv_jacobian"], [4, 2, 1, "", "jacobian"], [5, 2, 1, "", "s"], [6, 2, 1, "", "square"]], "linearmodels.asset_pricing.covariance.KernelCovariance": [[8, 2, 1, "", "bandwidth"], [9, 2, 1, "", "config"], [10, 2, 1, "", "cov"], [11, 2, 1, "", "inv_jacobian"], [12, 2, 1, "", "jacobian"], [13, 2, 1, "", "kernel"], [14, 2, 1, "", "s"], [15, 2, 1, "", "square"]], "linearmodels.asset_pricing.model": [[16, 1, 1, "", "LinearFactorModel"], [20, 1, 1, "", "LinearFactorModelGMM"], [24, 1, 1, "", "TradedFactorModel"]], "linearmodels.asset_pricing.model.LinearFactorModel": [[17, 3, 1, "", "fit"], [18, 2, 1, "", "formula"], [19, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.model.LinearFactorModelGMM": [[21, 3, 1, "", "fit"], [22, 2, 1, "", "formula"], [23, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.model.TradedFactorModel": [[25, 3, 1, "", "fit"], [26, 2, 1, "", "formula"], [27, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.results": [[28, 1, 1, "", "LinearFactorModelResults"]], "linearmodels.asset_pricing.results.LinearFactorModelResults": [[29, 2, 1, "", "alphas"], [30, 2, 1, "", "betas"], [31, 2, 1, "", "cov"], [32, 2, 1, "", "cov_estimator"], [33, 2, 1, "", "full_summary"], [34, 2, 1, "", "j_statistic"], [35, 2, 1, "", "name"], [36, 2, 1, "", "nobs"], [37, 2, 1, "", "params"], [38, 2, 1, "", "pvalues"], [39, 2, 1, "", "residual_ss"], [40, 2, 1, "", "risk_premia"], [41, 2, 1, "", "risk_premia_se"], [42, 2, 1, "", "risk_premia_tstats"], [43, 2, 1, "", "rsquared"], [44, 2, 1, "", "std_errors"], [45, 2, 1, "", "summary"], [46, 2, 1, "", "total_ss"], [47, 2, 1, "", "tstats"]], "linearmodels.iv": [[344, 0, 0, "-", "absorbing"], [344, 0, 0, "-", "covariance"], [344, 0, 0, "-", "data"], [344, 0, 0, "-", "gmm"], [344, 0, 0, "-", "model"], [344, 0, 0, "-", "results"]], "linearmodels.iv.absorbing": [[57, 1, 1, "", "AbsorbingLS"], [68, 1, 1, "", "AbsorbingLSResults"], [100, 1, 1, "", "Interaction"]], "linearmodels.iv.absorbing.AbsorbingLS": [[58, 2, 1, "", "absorbed_dependent"], [59, 2, 1, "", "absorbed_exog"], [60, 2, 1, "", "dependent"], [61, 2, 1, "", "exog"], [62, 3, 1, "", "fit"], [63, 2, 1, "", "has_constant"], [64, 2, 1, "", "instruments"], [65, 3, 1, "", "resids"], [66, 2, 1, "", "weights"], [67, 3, 1, "", "wresids"]], "linearmodels.iv.absorbing.AbsorbingLSResults": [[69, 2, 1, "", "absorbed_effects"], [70, 2, 1, "", "absorbed_rsquared"], [71, 3, 1, "", "conf_int"], [72, 2, 1, "", "cov"], [73, 2, 1, "", "cov_config"], [74, 2, 1, "", "cov_estimator"], [75, 2, 1, "", "cov_type"], [76, 2, 1, "", "debiased"], [77, 2, 1, "", "df_absorbed"], [78, 2, 1, "", "df_model"], [79, 2, 1, "", "df_resid"], [80, 2, 1, "", "f_statistic"], [81, 2, 1, "", "fitted_values"], [82, 2, 1, "", "has_constant"], [83, 2, 1, "", "idiosyncratic"], [84, 2, 1, "", "method"], [85, 2, 1, "", "model_ss"], [86, 2, 1, "", "nobs"], [87, 2, 1, "", "params"], [88, 2, 1, "", "pvalues"], [89, 2, 1, "", "resid_ss"], [90, 2, 1, "", "resids"], [91, 2, 1, "", "rsquared"], [92, 2, 1, "", "rsquared_adj"], [93, 2, 1, "", "s2"], [94, 2, 1, "", "std_errors"], [95, 2, 1, "", "summary"], [96, 2, 1, "", "total_ss"], [97, 2, 1, "", "tstats"], [98, 3, 1, "", "wald_test"], [99, 2, 1, "", "wresids"]], "linearmodels.iv.absorbing.Interaction": [[101, 2, 1, "", "cat"], [102, 2, 1, "", "cont"], [103, 3, 1, "", "drop"], [104, 3, 1, "", "from_frame"], [105, 2, 1, "", "hash"], [106, 2, 1, "", "isnull"], [107, 2, 1, "", "nobs"], [108, 2, 1, "", "sparse"]], "linearmodels.iv.covariance": [[115, 1, 1, "", "ClusteredCovariance"], [121, 1, 1, "", "HeteroskedasticCovariance"], [127, 1, 1, "", "HomoskedasticCovariance"], [133, 1, 1, "", "KernelCovariance"], [139, 4, 1, "", "kernel_weight_bartlett"], [140, 4, 1, "", "kernel_weight_parzen"], [141, 4, 1, "", "kernel_weight_quadratic_spectral"]], "linearmodels.iv.covariance.ClusteredCovariance": [[116, 2, 1, "", "config"], [117, 2, 1, "", "cov"], [118, 2, 1, "", "debiased"], [119, 2, 1, "", "s"], [120, 2, 1, "", "s2"]], "linearmodels.iv.covariance.HeteroskedasticCovariance": [[122, 2, 1, "", "config"], [123, 2, 1, "", "cov"], [124, 2, 1, "", "debiased"], [125, 2, 1, "", "s"], [126, 2, 1, "", "s2"]], "linearmodels.iv.covariance.HomoskedasticCovariance": [[128, 2, 1, "", "config"], [129, 2, 1, "", "cov"], [130, 2, 1, "", "debiased"], [131, 2, 1, "", "s"], [132, 2, 1, "", "s2"]], "linearmodels.iv.covariance.KernelCovariance": [[134, 2, 1, "", "config"], [135, 2, 1, "", "cov"], [136, 2, 1, "", "debiased"], [137, 2, 1, "", "s"], [138, 2, 1, "", "s2"]], "linearmodels.iv.data": [[142, 1, 1, "", "IVData"]], "linearmodels.iv.data.IVData": [[143, 2, 1, "", "cols"], [144, 3, 1, "", "drop"], [145, 2, 1, "", "isnull"], [146, 2, 1, "", "labels"], [147, 2, 1, "", "ndarray"], [148, 2, 1, "", "ndim"], [149, 2, 1, "", "pandas"], [150, 2, 1, "", "rows"], [151, 2, 1, "", "shape"]], "linearmodels.iv.gmm": [[152, 1, 1, "", "HeteroskedasticWeightMatrix"], [155, 1, 1, "", "HomoskedasticWeightMatrix"], [158, 1, 1, "", "IVGMMCovariance"], [164, 1, 1, "", "KernelWeightMatrix"], [168, 1, 1, "", "OneWayClusteredWeightMatrix"]], "linearmodels.iv.gmm.HeteroskedasticWeightMatrix": [[153, 2, 1, "", "config"], [154, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.HomoskedasticWeightMatrix": [[156, 2, 1, "", "config"], [157, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.IVGMMCovariance": [[159, 2, 1, "", "config"], [160, 2, 1, "", "cov"], [161, 2, 1, "", "debiased"], [162, 2, 1, "", "s"], [163, 2, 1, "", "s2"]], "linearmodels.iv.gmm.KernelWeightMatrix": [[165, 2, 1, "", "bandwidth"], [166, 2, 1, "", "config"], [167, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.OneWayClusteredWeightMatrix": [[169, 2, 1, "", "config"], [170, 3, 1, "", "weight_matrix"]], "linearmodels.iv.model": [[171, 1, 1, "", "IV2SLS"], [182, 1, 1, "", "IVGMM"], [193, 1, 1, "", "IVGMMCUE"], [205, 1, 1, "", "IVLIML"]], "linearmodels.iv.model.IV2SLS": [[172, 3, 1, "", "estimate_parameters"], [173, 3, 1, "", "fit"], [174, 2, 1, "", "formula"], [175, 3, 1, "", "from_formula"], [176, 2, 1, "", "has_constant"], [177, 2, 1, "", "isnull"], [178, 2, 1, "", "notnull"], [179, 3, 1, "", "predict"], [180, 3, 1, "", "resids"], [181, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVGMM": [[183, 3, 1, "", "estimate_parameters"], [184, 3, 1, "", "fit"], [185, 2, 1, "", "formula"], [186, 3, 1, "", "from_formula"], [187, 2, 1, "", "has_constant"], [188, 2, 1, "", "isnull"], [189, 2, 1, "", "notnull"], [190, 3, 1, "", "predict"], [191, 3, 1, "", "resids"], [192, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVGMMCUE": [[194, 3, 1, "", "estimate_parameters"], [195, 3, 1, "", "fit"], [196, 2, 1, "", "formula"], [197, 3, 1, "", "from_formula"], [198, 2, 1, "", "has_constant"], [199, 2, 1, "", "isnull"], [200, 3, 1, "", "j"], [201, 2, 1, "", "notnull"], [202, 3, 1, "", "predict"], [203, 3, 1, "", "resids"], [204, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVLIML": [[206, 3, 1, "", "estimate_parameters"], [207, 3, 1, "", "fit"], [208, 2, 1, "", "formula"], [209, 3, 1, "", "from_formula"], [210, 2, 1, "", "has_constant"], [211, 2, 1, "", "isnull"], [212, 2, 1, "", "notnull"], [213, 3, 1, "", "predict"], [214, 3, 1, "", "resids"], [215, 3, 1, "", "wresids"]], "linearmodels.iv.results": [[216, 1, 1, "", "FirstStageResults"], [220, 1, 1, "", "IVGMMResults"], [258, 1, 1, "", "IVModelComparison"], [270, 1, 1, "", "IVResults"], [311, 1, 1, "", "OLSResults"], [342, 4, 1, "", "compare"]], "linearmodels.iv.results.FirstStageResults": [[217, 2, 1, "", "diagnostics"], [218, 2, 1, "", "individual"], [219, 2, 1, "", "summary"]], "linearmodels.iv.results.IVGMMResults": [[221, 3, 1, "", "c_stat"], [222, 3, 1, "", "conf_int"], [223, 2, 1, "", "cov"], [224, 2, 1, "", "cov_config"], [225, 2, 1, "", "cov_estimator"], [226, 2, 1, "", "cov_type"], [227, 2, 1, "", "debiased"], [228, 2, 1, "", "df_model"], [229, 2, 1, "", "df_resid"], [230, 2, 1, "", "f_statistic"], [231, 2, 1, "", "first_stage"], [232, 2, 1, "", "fitted_values"], [233, 2, 1, "", "has_constant"], [234, 2, 1, "", "idiosyncratic"], [235, 2, 1, "", "iterations"], [236, 2, 1, "", "j_stat"], [237, 2, 1, "", "kappa"], [238, 2, 1, "", "method"], [239, 2, 1, "", "model_ss"], [240, 2, 1, "", "nobs"], [241, 2, 1, "", "params"], [242, 3, 1, "", "predict"], [243, 2, 1, "", "pvalues"], [244, 2, 1, "", "resid_ss"], [245, 2, 1, "", "resids"], [246, 2, 1, "", "rsquared"], [247, 2, 1, "", "rsquared_adj"], [248, 2, 1, "", "s2"], [249, 2, 1, "", "std_errors"], [250, 2, 1, "", "summary"], [251, 2, 1, "", "total_ss"], [252, 2, 1, "", "tstats"], [253, 3, 1, "", "wald_test"], [254, 2, 1, "", "weight_config"], [255, 2, 1, "", "weight_matrix"], [256, 2, 1, "", "weight_type"], [257, 2, 1, "", "wresids"]], "linearmodels.iv.results.IVModelComparison": [[259, 2, 1, "", "cov_estimator"], [260, 2, 1, "", "estimator_method"], [261, 2, 1, "", "f_statistic"], [262, 2, 1, "", "nobs"], [263, 2, 1, "", "params"], [264, 2, 1, "", "pvalues"], [265, 2, 1, "", "rsquared"], [266, 2, 1, "", "rsquared_adj"], [267, 2, 1, "", "std_errors"], [268, 2, 1, "", "summary"], [269, 2, 1, "", "tstats"]], "linearmodels.iv.results.IVResults": [[271, 2, 1, "", "anderson_rubin"], [272, 2, 1, "", "basmann"], [273, 2, 1, "", "basmann_f"], [274, 3, 1, "", "conf_int"], [275, 2, 1, "", "cov"], [276, 2, 1, "", "cov_config"], [277, 2, 1, "", "cov_estimator"], [278, 2, 1, "", "cov_type"], [279, 2, 1, "", "debiased"], [280, 2, 1, "", "df_model"], [281, 2, 1, "", "df_resid"], [282, 3, 1, "", "durbin"], [283, 2, 1, "", "f_statistic"], [284, 2, 1, "", "first_stage"], [285, 2, 1, "", "fitted_values"], [286, 2, 1, "", "has_constant"], [287, 2, 1, "", "idiosyncratic"], [288, 2, 1, "", "kappa"], [289, 2, 1, "", "method"], [290, 2, 1, "", "model_ss"], [291, 2, 1, "", "nobs"], [292, 2, 1, "", "params"], [293, 3, 1, "", "predict"], [294, 2, 1, "", "pvalues"], [295, 2, 1, "", "resid_ss"], [296, 2, 1, "", "resids"], [297, 2, 1, "", "rsquared"], [298, 2, 1, "", "rsquared_adj"], [299, 2, 1, "", "s2"], [300, 2, 1, "", "sargan"], [301, 2, 1, "", "std_errors"], [302, 2, 1, "", "summary"], [303, 2, 1, "", "total_ss"], [304, 2, 1, "", "tstats"], [305, 3, 1, "", "wald_test"], [306, 2, 1, "", "wooldridge_overid"], [307, 2, 1, "", "wooldridge_regression"], [308, 2, 1, "", "wooldridge_score"], [309, 2, 1, "", "wresids"], [310, 3, 1, "", "wu_hausman"]], "linearmodels.iv.results.OLSResults": [[312, 3, 1, "", "conf_int"], [313, 2, 1, "", "cov"], [314, 2, 1, "", "cov_config"], [315, 2, 1, "", "cov_estimator"], [316, 2, 1, "", "cov_type"], [317, 2, 1, "", "debiased"], [318, 2, 1, "", "df_model"], [319, 2, 1, "", "df_resid"], [320, 2, 1, "", "f_statistic"], [321, 2, 1, "", "fitted_values"], [322, 2, 1, "", "has_constant"], [323, 2, 1, "", "idiosyncratic"], [324, 2, 1, "", "kappa"], [325, 2, 1, "", "method"], [326, 2, 1, "", "model_ss"], [327, 2, 1, "", "nobs"], [328, 2, 1, "", "params"], [329, 3, 1, "", "predict"], [330, 2, 1, "", "pvalues"], [331, 2, 1, "", "resid_ss"], [332, 2, 1, "", "resids"], [333, 2, 1, "", "rsquared"], [334, 2, 1, "", "rsquared_adj"], [335, 2, 1, "", "s2"], [336, 2, 1, "", "std_errors"], [337, 2, 1, "", "summary"], [338, 2, 1, "", "total_ss"], [339, 2, 1, "", "tstats"], [340, 3, 1, "", "wald_test"], [341, 2, 1, "", "wresids"]], "linearmodels.panel": [[642, 0, 0, "-", "covariance"], [642, 0, 0, "-", "data"], [642, 0, 0, "-", "model"], [642, 0, 0, "-", "results"], [642, 0, 0, "-", "utility"]], "linearmodels.panel.covariance": [[353, 1, 1, "", "ACCovariance"], [361, 1, 1, "", "ClusteredCovariance"], [369, 1, 1, "", "DriscollKraay"], [377, 1, 1, "", "FamaMacBethCovariance"], [387, 1, 1, "", "HeteroskedasticCovariance"], [395, 1, 1, "", "HomoskedasticCovariance"]], "linearmodels.panel.covariance.ACCovariance": [[354, 5, 1, "", "ALLOWED_KWARGS"], [355, 5, 1, "", "DEFAULT_KERNEL"], [356, 2, 1, "", "cov"], [357, 3, 1, "", "deferred_cov"], [358, 2, 1, "", "eps"], [359, 2, 1, "", "name"], [360, 2, 1, "", "s2"]], "linearmodels.panel.covariance.ClusteredCovariance": [[362, 5, 1, "", "ALLOWED_KWARGS"], [363, 5, 1, "", "DEFAULT_KERNEL"], [364, 2, 1, "", "cov"], [365, 3, 1, "", "deferred_cov"], [366, 2, 1, "", "eps"], [367, 2, 1, "", "name"], [368, 2, 1, "", "s2"]], "linearmodels.panel.covariance.DriscollKraay": [[370, 5, 1, "", "ALLOWED_KWARGS"], [371, 5, 1, "", "DEFAULT_KERNEL"], [372, 2, 1, "", "cov"], [373, 3, 1, "", "deferred_cov"], [374, 2, 1, "", "eps"], [375, 2, 1, "", "name"], [376, 2, 1, "", "s2"]], "linearmodels.panel.covariance.FamaMacBethCovariance": [[378, 5, 1, "", "ALLOWED_KWARGS"], [379, 5, 1, "", "DEFAULT_KERNEL"], [380, 2, 1, "", "all_params"], [381, 2, 1, "", "bandwidth"], [382, 2, 1, "", "cov"], [383, 3, 1, "", "deferred_cov"], [384, 2, 1, "", "eps"], [385, 2, 1, "", "name"], [386, 2, 1, "", "s2"]], "linearmodels.panel.covariance.HeteroskedasticCovariance": [[388, 5, 1, "", "ALLOWED_KWARGS"], [389, 5, 1, "", "DEFAULT_KERNEL"], [390, 2, 1, "", "cov"], [391, 3, 1, "", "deferred_cov"], [392, 2, 1, "", "eps"], [393, 2, 1, "", "name"], [394, 2, 1, "", "s2"]], "linearmodels.panel.covariance.HomoskedasticCovariance": [[396, 5, 1, "", "ALLOWED_KWARGS"], [397, 5, 1, "", "DEFAULT_KERNEL"], [398, 2, 1, "", "cov"], [399, 3, 1, "", "deferred_cov"], [400, 2, 1, "", "eps"], [401, 2, 1, "", "name"], [402, 2, 1, "", "s2"]], "linearmodels.panel.data": [[403, 1, 1, "", "PanelData"]], "linearmodels.panel.data.PanelData": [[404, 3, 1, "", "copy"], [405, 3, 1, "", "count"], [406, 2, 1, "", "dataframe"], [407, 3, 1, "", "demean"], [408, 3, 1, "", "drop"], [409, 3, 1, "", "dummies"], [410, 2, 1, "", "entities"], [411, 2, 1, "", "entity_ids"], [412, 3, 1, "", "first_difference"], [413, 3, 1, "", "general_demean"], [414, 2, 1, "", "index"], [415, 2, 1, "", "isnull"], [416, 3, 1, "", "mean"], [417, 2, 1, "", "ndim"], [418, 2, 1, "", "nentity"], [419, 2, 1, "", "nobs"], [420, 2, 1, "", "nvar"], [421, 2, 1, "", "panel"], [422, 2, 1, "", "shape"], [423, 2, 1, "", "time"], [424, 2, 1, "", "time_ids"], [425, 2, 1, "", "values2d"], [426, 2, 1, "", "values3d"], [427, 2, 1, "", "vars"]], "linearmodels.panel.model": [[428, 1, 1, "", "BetweenOLS"], [436, 1, 1, "", "FamaMacBeth"], [444, 1, 1, "", "FirstDifferenceOLS"], [452, 1, 1, "", "PanelOLS"], [463, 1, 1, "", "PooledOLS"], [471, 1, 1, "", "RandomEffects"]], "linearmodels.panel.model.BetweenOLS": [[429, 3, 1, "", "fit"], [430, 2, 1, "", "formula"], [431, 3, 1, "", "from_formula"], [432, 2, 1, "", "has_constant"], [433, 2, 1, "", "not_null"], [434, 3, 1, "", "predict"], [435, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.FamaMacBeth": [[437, 3, 1, "", "fit"], [438, 2, 1, "", "formula"], [439, 3, 1, "", "from_formula"], [440, 2, 1, "", "has_constant"], [441, 2, 1, "", "not_null"], [442, 3, 1, "", "predict"], [443, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.FirstDifferenceOLS": [[445, 3, 1, "", "fit"], [446, 2, 1, "", "formula"], [447, 3, 1, "", "from_formula"], [448, 2, 1, "", "has_constant"], [449, 2, 1, "", "not_null"], [450, 3, 1, "", "predict"], [451, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.PanelOLS": [[453, 2, 1, "", "entity_effects"], [454, 3, 1, "", "fit"], [455, 2, 1, "", "formula"], [456, 3, 1, "", "from_formula"], [457, 2, 1, "", "has_constant"], [458, 2, 1, "", "not_null"], [459, 2, 1, "", "other_effects"], [460, 3, 1, "", "predict"], [461, 3, 1, "", "reformat_clusters"], [462, 2, 1, "", "time_effects"]], "linearmodels.panel.model.PooledOLS": [[464, 3, 1, "", "fit"], [465, 2, 1, "", "formula"], [466, 3, 1, "", "from_formula"], [467, 2, 1, "", "has_constant"], [468, 2, 1, "", "not_null"], [469, 3, 1, "", "predict"], [470, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.RandomEffects": [[472, 3, 1, "", "fit"], [473, 2, 1, "", "formula"], [474, 3, 1, "", "from_formula"], [475, 2, 1, "", "has_constant"], [476, 2, 1, "", "not_null"], [477, 3, 1, "", "predict"], [478, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.results": [[479, 1, 1, "", "FamaMacBethResults"], [515, 1, 1, "", "PanelEffectsResults"], [555, 1, 1, "", "PanelModelComparison"], [569, 1, 1, "", "PanelResults"], [604, 1, 1, "", "RandomEffectsResults"]], "linearmodels.panel.results.FamaMacBethResults": [[480, 2, 1, "", "all_params"], [481, 3, 1, "", "conf_int"], [482, 2, 1, "", "corr_squared_between"], [483, 2, 1, "", "corr_squared_overall"], [484, 2, 1, "", "corr_squared_within"], [485, 2, 1, "", "cov"], [486, 2, 1, "", "df_model"], [487, 2, 1, "", "df_resid"], [488, 2, 1, "", "entity_info"], [489, 2, 1, "", "estimated_effects"], [490, 2, 1, "", "f_statistic"], [491, 2, 1, "", "f_statistic_robust"], [492, 2, 1, "", "fitted_values"], [493, 2, 1, "", "idiosyncratic"], [494, 2, 1, "", "loglik"], [495, 2, 1, "", "model_ss"], [496, 2, 1, "", "name"], [497, 2, 1, "", "nobs"], [498, 2, 1, "", "params"], [499, 3, 1, "", "predict"], [500, 2, 1, "", "pvalues"], [501, 2, 1, "", "resid_ss"], [502, 2, 1, "", "resids"], [503, 2, 1, "", "rsquared"], [504, 2, 1, "", "rsquared_between"], [505, 2, 1, "", "rsquared_overall"], [506, 2, 1, "", "rsquared_within"], [507, 2, 1, "", "s2"], [508, 2, 1, "", "std_errors"], [509, 2, 1, "", "summary"], [510, 2, 1, "", "time_info"], [511, 2, 1, "", "total_ss"], [512, 2, 1, "", "tstats"], [513, 3, 1, "", "wald_test"], [514, 2, 1, "", "wresids"]], "linearmodels.panel.results.PanelEffectsResults": [[516, 3, 1, "", "conf_int"], [517, 2, 1, "", "corr_squared_between"], [518, 2, 1, "", "corr_squared_overall"], [519, 2, 1, "", "corr_squared_within"], [520, 2, 1, "", "cov"], [521, 2, 1, "", "df_model"], [522, 2, 1, "", "df_resid"], [523, 2, 1, "", "entity_info"], [524, 2, 1, "", "estimated_effects"], [525, 2, 1, "", "f_pooled"], [526, 2, 1, "", "f_statistic"], [527, 2, 1, "", "f_statistic_robust"], [528, 2, 1, "", "fitted_values"], [529, 2, 1, "", "idiosyncratic"], [530, 2, 1, "", "included_effects"], [531, 2, 1, "", "loglik"], [532, 2, 1, "", "model_ss"], [533, 2, 1, "", "name"], [534, 2, 1, "", "nobs"], [535, 2, 1, "", "other_info"], [536, 2, 1, "", "params"], [537, 3, 1, "", "predict"], [538, 2, 1, "", "pvalues"], [539, 2, 1, "", "resid_ss"], [540, 2, 1, "", "resids"], [541, 2, 1, "", "rsquared"], [542, 2, 1, "", "rsquared_between"], [543, 2, 1, "", "rsquared_inclusive"], [544, 2, 1, "", "rsquared_overall"], [545, 2, 1, "", "rsquared_within"], [546, 2, 1, "", "s2"], [547, 2, 1, "", "std_errors"], [548, 2, 1, "", "summary"], [549, 2, 1, "", "time_info"], [550, 2, 1, "", "total_ss"], [551, 2, 1, "", "tstats"], [552, 2, 1, "", "variance_decomposition"], [553, 3, 1, "", "wald_test"], [554, 2, 1, "", "wresids"]], "linearmodels.panel.results.PanelModelComparison": [[556, 2, 1, "", "cov_estimator"], [557, 2, 1, "", "estimator_method"], [558, 2, 1, "", "f_statistic"], [559, 2, 1, "", "nobs"], [560, 2, 1, "", "params"], [561, 2, 1, "", "pvalues"], [562, 2, 1, "", "rsquared"], [563, 2, 1, "", "rsquared_between"], [564, 2, 1, "", "rsquared_overall"], [565, 2, 1, "", "rsquared_within"], [566, 2, 1, "", "std_errors"], [567, 2, 1, "", "summary"], [568, 2, 1, "", "tstats"]], "linearmodels.panel.results.PanelResults": [[570, 3, 1, "", "conf_int"], [571, 2, 1, "", "corr_squared_between"], [572, 2, 1, "", "corr_squared_overall"], [573, 2, 1, "", "corr_squared_within"], [574, 2, 1, "", "cov"], [575, 2, 1, "", "df_model"], [576, 2, 1, "", "df_resid"], [577, 2, 1, "", "entity_info"], [578, 2, 1, "", "estimated_effects"], [579, 2, 1, "", "f_statistic"], [580, 2, 1, "", "f_statistic_robust"], [581, 2, 1, "", "fitted_values"], [582, 2, 1, "", "idiosyncratic"], [583, 2, 1, "", "loglik"], [584, 2, 1, "", "model_ss"], [585, 2, 1, "", "name"], [586, 2, 1, "", "nobs"], [587, 2, 1, "", "params"], [588, 3, 1, "", "predict"], [589, 2, 1, "", "pvalues"], [590, 2, 1, "", "resid_ss"], [591, 2, 1, "", "resids"], [592, 2, 1, "", "rsquared"], [593, 2, 1, "", "rsquared_between"], [594, 2, 1, "", "rsquared_overall"], [595, 2, 1, "", "rsquared_within"], [596, 2, 1, "", "s2"], [597, 2, 1, "", "std_errors"], [598, 2, 1, "", "summary"], [599, 2, 1, "", "time_info"], [600, 2, 1, "", "total_ss"], [601, 2, 1, "", "tstats"], [602, 3, 1, "", "wald_test"], [603, 2, 1, "", "wresids"]], "linearmodels.panel.results.RandomEffectsResults": [[605, 3, 1, "", "conf_int"], [606, 2, 1, "", "corr_squared_between"], [607, 2, 1, "", "corr_squared_overall"], [608, 2, 1, "", "corr_squared_within"], [609, 2, 1, "", "cov"], [610, 2, 1, "", "df_model"], [611, 2, 1, "", "df_resid"], [612, 2, 1, "", "entity_info"], [613, 2, 1, "", "estimated_effects"], [614, 2, 1, "", "f_statistic"], [615, 2, 1, "", "f_statistic_robust"], [616, 2, 1, "", "fitted_values"], [617, 2, 1, "", "idiosyncratic"], [618, 2, 1, "", "loglik"], [619, 2, 1, "", "model_ss"], [620, 2, 1, "", "name"], [621, 2, 1, "", "nobs"], [622, 2, 1, "", "params"], [623, 3, 1, "", "predict"], [624, 2, 1, "", "pvalues"], [625, 2, 1, "", "resid_ss"], [626, 2, 1, "", "resids"], [627, 2, 1, "", "rsquared"], [628, 2, 1, "", "rsquared_between"], [629, 2, 1, "", "rsquared_overall"], [630, 2, 1, "", "rsquared_within"], [631, 2, 1, "", "s2"], [632, 2, 1, "", "std_errors"], [633, 2, 1, "", "summary"], [634, 2, 1, "", "theta"], [635, 2, 1, "", "time_info"], [636, 2, 1, "", "total_ss"], [637, 2, 1, "", "tstats"], [638, 2, 1, "", "variance_decomposition"], [639, 3, 1, "", "wald_test"], [640, 2, 1, "", "wresids"]], "linearmodels.panel.utility": [[641, 4, 1, "", "generate_panel_data"]], "linearmodels.shared.covariance": [[793, 4, 1, "", "cov_cluster"], [794, 4, 1, "", "cov_kernel"], [795, 4, 1, "", "group_debias_coefficient"]], "linearmodels.shared.hypotheses": [[796, 1, 1, "", "InvalidTestStatistic"], [801, 1, 1, "", "WaldTestStatistic"]], "linearmodels.shared.hypotheses.InvalidTestStatistic": [[797, 2, 1, "", "critical_values"], [798, 2, 1, "", "null"], [799, 2, 1, "", "pval"], [800, 2, 1, "", "stat"]], "linearmodels.shared.hypotheses.WaldTestStatistic": [[802, 2, 1, "", "critical_values"], [803, 2, 1, "", "null"], [804, 2, 1, "", "pval"], [805, 2, 1, "", "stat"]], "linearmodels.shared.utility": [[806, 1, 1, "", "AttrDict"]], "linearmodels.shared.utility.AttrDict": [[807, 3, 1, "", "clear"], [808, 3, 1, "", "copy"], [809, 3, 1, "", "get"], [810, 3, 1, "", "items"], [811, 3, 1, "", "keys"], [812, 3, 1, "", "pop"], [813, 3, 1, "", "popitem"], [814, 3, 1, "", "setdefault"], [815, 3, 1, "", "update"], [816, 3, 1, "", "values"]], "linearmodels.system": [[650, 0, 0, "-", "covariance"], [650, 0, 0, "-", "gmm"], [650, 0, 0, "-", "model"], [650, 0, 0, "-", "results"]], "linearmodels.system.covariance": [[651, 1, 1, "", "ClusteredCovariance"], [655, 1, 1, "", "GMMHeteroskedasticCovariance"], [658, 1, 1, "", "GMMHomoskedasticCovariance"], [661, 1, 1, "", "GMMKernelCovariance"], [666, 1, 1, "", "HeteroskedasticCovariance"], [670, 1, 1, "", "HomoskedasticCovariance"], [674, 1, 1, "", "KernelCovariance"]], "linearmodels.system.covariance.ClusteredCovariance": [[652, 2, 1, "", "cov"], [653, 2, 1, "", "cov_config"], [654, 2, 1, "", "sigma"]], "linearmodels.system.covariance.GMMHeteroskedasticCovariance": [[656, 2, 1, "", "cov"], [657, 2, 1, "", "cov_config"]], "linearmodels.system.covariance.GMMHomoskedasticCovariance": [[659, 2, 1, "", "cov"], [660, 2, 1, "", "cov_config"]], "linearmodels.system.covariance.GMMKernelCovariance": [[662, 2, 1, "", "bandwidth"], [663, 2, 1, "", "cov"], [664, 2, 1, "", "cov_config"], [665, 2, 1, "", "kernel"]], "linearmodels.system.covariance.HeteroskedasticCovariance": [[667, 2, 1, "", "cov"], [668, 2, 1, "", "cov_config"], [669, 2, 1, "", "sigma"]], "linearmodels.system.covariance.HomoskedasticCovariance": [[671, 2, 1, "", "cov"], [672, 2, 1, "", "cov_config"], [673, 2, 1, "", "sigma"]], "linearmodels.system.covariance.KernelCovariance": [[675, 2, 1, "", "bandwidth"], [676, 2, 1, "", "cov"], [677, 2, 1, "", "cov_config"], [678, 2, 1, "", "kernel"], [679, 2, 1, "", "sigma"]], "linearmodels.system.gmm": [[680, 1, 1, "", "HeteroskedasticWeightMatrix"], [684, 1, 1, "", "HomoskedasticWeightMatrix"], [688, 1, 1, "", "KernelWeightMatrix"]], "linearmodels.system.gmm.HeteroskedasticWeightMatrix": [[681, 2, 1, "", "config"], [682, 3, 1, "", "sigma"], [683, 3, 1, "", "weight_matrix"]], "linearmodels.system.gmm.HomoskedasticWeightMatrix": [[685, 2, 1, "", "config"], [686, 3, 1, "", "sigma"], [687, 3, 1, "", "weight_matrix"]], "linearmodels.system.gmm.KernelWeightMatrix": [[689, 2, 1, "", "bandwidth"], [690, 2, 1, "", "config"], [691, 2, 1, "", "kernel"], [692, 3, 1, "", "sigma"], [693, 3, 1, "", "weight_matrix"]], "linearmodels.system.model": [[694, 1, 1, "", "IV3SLS"], [705, 1, 1, "", "IVSystemGMM"], [715, 1, 1, "", "SUR"]], "linearmodels.system.model.IV3SLS": [[695, 3, 1, "", "add_constraints"], [696, 2, 1, "", "constraints"], [697, 3, 1, "", "fit"], [698, 2, 1, "", "formula"], [699, 3, 1, "", "from_formula"], [700, 2, 1, "", "has_constant"], [701, 3, 1, "", "multivariate_iv"], [702, 2, 1, "", "param_names"], [703, 3, 1, "", "predict"], [704, 3, 1, "", "reset_constraints"]], "linearmodels.system.model.IVSystemGMM": [[706, 3, 1, "", "add_constraints"], [707, 2, 1, "", "constraints"], [708, 3, 1, "", "fit"], [709, 2, 1, "", "formula"], [710, 3, 1, "", "from_formula"], [711, 2, 1, "", "has_constant"], [712, 2, 1, "", "param_names"], [713, 3, 1, "", "predict"], [714, 3, 1, "", "reset_constraints"]], "linearmodels.system.model.SUR": [[716, 3, 1, "", "add_constraints"], [717, 2, 1, "", "constraints"], [718, 3, 1, "", "fit"], [719, 2, 1, "", "formula"], [720, 3, 1, "", "from_formula"], [721, 2, 1, "", "has_constant"], [722, 3, 1, "", "multivariate_ls"], [723, 2, 1, "", "param_names"], [724, 3, 1, "", "predict"], [725, 3, 1, "", "reset_constraints"]], "linearmodels.system.results": [[726, 1, 1, "", "GMMSystemResults"], [761, 1, 1, "", "SystemResults"]], "linearmodels.system.results.GMMSystemResults": [[727, 3, 1, "", "breusch_pagan"], [728, 3, 1, "", "conf_int"], [729, 2, 1, "", "cov"], [730, 2, 1, "", "cov_config"], [731, 2, 1, "", "cov_estimator"], [732, 2, 1, "", "debiased"], [733, 2, 1, "", "df_model"], [734, 2, 1, "", "df_resid"], [735, 2, 1, "", "equation_labels"], [736, 2, 1, "", "equations"], [737, 2, 1, "", "fitted_values"], [738, 2, 1, "", "iterations"], [739, 2, 1, "", "j_stat"], [740, 3, 1, "", "likelihood_ratio"], [741, 2, 1, "", "method"], [742, 2, 1, "", "model"], [743, 2, 1, "", "model_ss"], [744, 2, 1, "", "nobs"], [745, 2, 1, "", "params"], [746, 3, 1, "", "predict"], [747, 2, 1, "", "pvalues"], [748, 2, 1, "", "resid_ss"], [749, 2, 1, "", "resids"], [750, 2, 1, "", "rsquared"], [751, 2, 1, "", "sigma"], [752, 2, 1, "", "std_errors"], [753, 2, 1, "", "summary"], [754, 2, 1, "", "system_rsquared"], [755, 2, 1, "", "total_ss"], [756, 2, 1, "", "tstats"], [757, 2, 1, "", "w"], [758, 2, 1, "", "weight_config"], [759, 2, 1, "", "weight_type"], [760, 2, 1, "", "wresids"]], "linearmodels.system.results.SystemResults": [[762, 3, 1, "", "breusch_pagan"], [763, 3, 1, "", "conf_int"], [764, 2, 1, "", "cov"], [765, 2, 1, "", "cov_config"], [766, 2, 1, "", "cov_estimator"], [767, 2, 1, "", "debiased"], [768, 2, 1, "", "df_model"], [769, 2, 1, "", "df_resid"], [770, 2, 1, "", "equation_labels"], [771, 2, 1, "", "equations"], [772, 2, 1, "", "fitted_values"], [773, 2, 1, "", "iterations"], [774, 3, 1, "", "likelihood_ratio"], [775, 2, 1, "", "method"], [776, 2, 1, "", "model"], [777, 2, 1, "", "model_ss"], [778, 2, 1, "", "nobs"], [779, 2, 1, "", "params"], [780, 3, 1, "", "predict"], [781, 2, 1, "", "pvalues"], [782, 2, 1, "", "resid_ss"], [783, 2, 1, "", "resids"], [784, 2, 1, "", "rsquared"], [785, 2, 1, "", "sigma"], [786, 2, 1, "", "std_errors"], [787, 2, 1, "", "summary"], [788, 2, 1, "", "system_rsquared"], [789, 2, 1, "", "total_ss"], [790, 2, 1, "", "tstats"], [791, 2, 1, "", "wresids"]], "linearmodels": [[792, 0, 0, "-", "utility"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"linearmodel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "asset_pr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "covari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 53, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 343, 344, 346, 348, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 642, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 793, 794, 795], "heteroskedasticcovari": [0, 1, 2, 3, 4, 5, 6, 121, 122, 123, 124, 125, 126, 387, 388, 389, 390, 391, 392, 393, 394, 666, 667, 668, 669], "config": [1, 9, 116, 122, 128, 134, 153, 156, 159, 166, 169, 681, 685, 690], "cov": [2, 10, 31, 72, 117, 123, 129, 135, 160, 223, 275, 313, 356, 364, 372, 382, 390, 398, 485, 520, 574, 609, 652, 656, 659, 663, 667, 671, 676, 729, 764], "inv_jacobian": [3, 11], "jacobian": [4, 12], "s": [5, 14, 119, 125, 131, 137, 162], "squar": [6, 15, 343, 344, 643, 647, 649], "kernelcovari": [7, 8, 9, 10, 11, 12, 13, 14, 15, 133, 134, 135, 136, 137, 138, 674, 675, 676, 677, 678, 679], "bandwidth": [8, 165, 343, 381, 662, 675, 689], "kernel": [13, 343, 344, 645, 665, 678, 691], "model": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 50, 52, 53, 112, 114, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 346, 347, 349, 351, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 642, 643, 646, 647, 648, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 742, 776], "linearfactormodel": [16, 17, 18, 19], "fit": [17, 21, 25, 62, 173, 184, 195, 207, 429, 437, 445, 454, 464, 472, 649, 697, 708, 718], "formula": [18, 22, 26, 49, 52, 111, 112, 174, 185, 196, 208, 343, 347, 351, 430, 438, 446, 455, 465, 473, 646, 647, 698, 709, 719], "from_formula": [19, 23, 27, 175, 186, 197, 209, 431, 439, 447, 456, 466, 474, 699, 710, 720], "linearfactormodelgmm": [20, 21, 22, 23], "tradedfactormodel": [24, 25, 26, 27], "result": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 110, 112, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 650, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791], "linearfactormodelresult": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "alpha": 29, "beta": 30, "cov_estim": [32, 74, 225, 259, 277, 315, 556, 731, 766], "full_summari": 33, "j_statist": 34, "name": [35, 359, 367, 375, 385, 393, 401, 496, 533, 585, 620], "nob": [36, 86, 107, 240, 262, 291, 327, 419, 497, 534, 559, 586, 621, 744, 778], "param": [37, 87, 241, 263, 292, 328, 498, 536, 560, 587, 622, 745, 779], "pvalu": [38, 88, 243, 264, 294, 330, 500, 538, 561, 589, 624, 747, 781], "residual_ss": 39, "risk_premia": 40, "risk_premia_s": 41, "risk_premia_tstat": 42, "rsquar": [43, 91, 246, 265, 297, 333, 503, 541, 562, 592, 627, 750, 784], "std_error": [44, 94, 249, 267, 301, 336, 508, 547, 566, 597, 632, 752, 786], "summari": [45, 95, 219, 250, 268, 302, 337, 509, 548, 567, 598, 633, 753, 787], "total_ss": [46, 96, 251, 303, 338, 511, 550, 600, 636, 755, 789], "tstat": [47, 97, 252, 269, 304, 339, 512, 551, 568, 601, 637, 756, 790], "exampl": [48, 110, 111, 346, 645], "gener": [48, 343, 344, 649, 650], "setup": 48, "import": [48, 49, 110], "data": [48, 49, 110, 112, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 344, 345, 346, 347, 349, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 642, 643, 645, 647], "transform": [48, 49], "portfolio": [48, 49], "excess": [48, 49], "1": [48, 54], "step": 48, "estim": [48, 52, 53, 110, 111, 112, 113, 114, 343, 344, 346, 349, 351, 642, 643, 645, 646, 647, 649, 650], "us": [48, 49, 52, 112, 346, 347, 645, 646], "seemingli": [48, 649], "unrel": [48, 649], "regress": [48, 109, 110, 346, 648, 649, 650], "sur": [48, 649, 650, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "2": [48, 54, 351, 649], "gmm": [48, 52, 110, 114, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 343, 344, 647, 649, 650, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693], "iter": [48, 235, 645, 738, 773], "until": 48, "converg": 48, "continu": [48, 110, 343], "updat": [48, 110, 343, 815], "avail": 49, "syntax": 49, "test": [49, 110, 343, 649, 792], "factor": [49, 50, 52], "onli": 49, "return": 49, "first": [49, 110, 343, 346, 347, 351], "second": 49, "compar": [49, 110, 112, 342, 346], "linear": [50, 52, 53, 110, 343], "asset": [50, 53, 643], "price": [50, 53, 643], "introduct": [51, 114, 350], "mathemat": [52, 112, 343, 351], "detail": [52, 343, 351], "trade": 52, "The": [52, 346], "j": [52, 200], "statist": [52, 343, 649], "non": 52, "improv": 52, "specif": [52, 114, 647], "gl": [52, 645], "modul": [53, 344, 642, 643, 650], "refer": [53, 344, 642, 644, 650], "chang": [54, 110], "log": 54, "version": 54, "4": 54, "26": 54, "25": 54, "24": 54, "21": 54, "20": 54, "19": 54, "18": 54, "17": 54, "16": 54, "15": 54, "14": 54, "13": 54, "12": 54, "11": 54, "10": 54, "9": 54, "8": 54, "7": 54, "6": 54, "5": 54, "0": 54, "3": 54, "contribut": 55, "indic": 56, "iv": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344], "absorb": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 344], "absorbingl": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "absorbed_depend": 58, "absorbed_exog": 59, "depend": 60, "exog": 61, "has_const": [63, 82, 176, 187, 198, 210, 233, 286, 322, 432, 440, 448, 457, 467, 475, 700, 711, 721], "instrument": [64, 110, 113, 344, 643], "resid": [65, 90, 180, 191, 203, 214, 245, 296, 332, 502, 540, 591, 626, 749, 783], "weight": [66, 110, 111, 343, 344, 646, 649, 650], "wresid": [67, 99, 181, 192, 204, 215, 257, 309, 341, 514, 554, 603, 640, 760, 791], "absorbinglsresult": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "absorbed_effect": 69, "absorbed_rsquar": 70, "conf_int": [71, 222, 274, 312, 481, 516, 570, 605, 728, 763], "cov_config": [73, 224, 276, 314, 653, 657, 660, 664, 668, 672, 677, 730, 765], "cov_typ": [75, 226, 278, 316], "debias": [76, 118, 124, 130, 136, 161, 227, 279, 317, 732, 767], "df_absorb": 77, "df_model": [78, 228, 280, 318, 486, 521, 575, 610, 733, 768], "df_resid": [79, 229, 281, 319, 487, 522, 576, 611, 734, 769], "f_statist": [80, 230, 261, 283, 320, 490, 526, 558, 579, 614], "fitted_valu": [81, 232, 285, 321, 492, 528, 581, 616, 737, 772], "idiosyncrat": [83, 234, 287, 323, 493, 529, 582, 617], "method": [84, 238, 289, 325, 343, 351, 649, 650, 741, 775], "model_ss": [85, 239, 290, 326, 495, 532, 584, 619, 743, 777], "resid_ss": [89, 244, 295, 331, 501, 539, 590, 625, 748, 782], "rsquared_adj": [92, 247, 266, 298, 334], "s2": [93, 120, 126, 132, 138, 163, 248, 299, 335, 360, 368, 376, 386, 394, 402, 507, 546, 596, 631], "wald_test": [98, 253, 305, 340, 513, 553, 602, 639], "interact": [100, 101, 102, 103, 104, 105, 106, 107, 108], "cat": 101, "cont": 102, "drop": [103, 144, 408], "from_fram": 104, "hash": 105, "isnul": [106, 145, 177, 188, 199, 211, 415], "spars": 108, "includ": [109, 346], "constant": [109, 343, 347], "exclud": 109, "optim": 109, "option": [109, 114, 346, 645, 646], "further": 110, "variabl": [110, 111, 112, 113, 344, 346, 643], "2sl": [110, 114, 343], "ol": [110, 112, 347, 645], "just": 110, "identifi": 110, "multipl": [110, 112], "altern": [110, 645], "matrix": 110, "structur": [110, 344, 642], "endogen": [110, 112], "exogen": 110, "singl": 110, "stage": [110, 343, 647, 649], "diagnost": [110, 111, 217], "liml": [110, 114, 343], "iv2sl": [110, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "basic": [111, 112, 343, 346, 645, 649], "wage": 111, "marri": 111, "women": 111, "men": 111, "smoke": 111, "birth": 111, "proxim": 111, "educ": 111, "interfac": 111, "categor": [111, 345], "post": [111, 343], "panel": [111, 345, 346, 347, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "specifi": [112, 347, 646], "usag": [112, 645], "standard": [112, 343, 351], "mep": 112, "express": 112, "argument": 114, "cue": [114, 343], "clusteredcovari": [115, 116, 117, 118, 119, 120, 361, 362, 363, 364, 365, 366, 367, 368, 651, 652, 653, 654], "homoskedasticcovari": [127, 128, 129, 130, 131, 132, 395, 396, 397, 398, 399, 400, 401, 402, 670, 671, 672, 673], "kernel_weight_bartlett": 139, "kernel_weight_parzen": 140, "kernel_weight_quadratic_spectr": 141, "ivdata": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "col": 143, "label": [146, 646], "ndarrai": 147, "ndim": [148, 417], "panda": [149, 352], "row": 150, "shape": [151, 422], "heteroskedasticweightmatrix": [152, 153, 154, 680, 681, 682, 683], "weight_matrix": [154, 157, 167, 170, 255, 683, 687, 693], "homoskedasticweightmatrix": [155, 156, 157, 684, 685, 686, 687], "ivgmmcovari": [158, 159, 160, 161, 162, 163], "kernelweightmatrix": [164, 165, 166, 167, 688, 689, 690, 691, 692, 693], "onewayclusteredweightmatrix": [168, 169, 170], "todo": [171, 182, 205], "estimate_paramet": [172, 183, 194, 206], "notnul": [178, 189, 201, 212], "predict": [179, 190, 202, 213, 242, 293, 329, 434, 442, 450, 460, 469, 477, 499, 537, 588, 623, 703, 713, 724, 746, 780], "ivgmm": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192], "ivgmmcu": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "ivliml": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "firststageresult": [216, 217, 218, 219], "individu": 218, "ivgmmresult": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "c_stat": 221, "first_stag": [231, 284], "j_stat": [236, 739], "kappa": [237, 288, 324], "weight_config": [254, 758], "weight_typ": [256, 759], "ivmodelcomparison": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "estimator_method": [260, 557], "ivresult": [270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "anderson_rubin": 271, "basmann": 272, "basmann_f": 273, "durbin": 282, "sargan": 300, "wooldridge_overid": 306, "wooldridge_regress": 307, "wooldridge_scor": 308, "wu_hausman": 310, "olsresult": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "notat": [343, 649], "paramet": [343, 346, 649], "two": 343, "least": [343, 344, 643, 647, 649], "limit": 343, "inform": 343, "maximum": 343, "likelihood": 343, "k": 343, "class": 343, "moment": [343, 649, 650], "ls": 343, "error": 343, "t": 343, "p": 343, "valu": [343, 816], "confid": 343, "interv": 343, "hypothesi": [343, 792], "analysi": [343, 345], "select": 343, "detect": 343, "format": 345, "multiindex": 345, "datafram": [345, 406], "numpi": 345, "arrai": 345, "xarrai": 345, "dataarrai": 345, "convers": 345, "string": 345, "dummi": [345, 346, 409], "load": [346, 347], "uncorrel": 346, "effect": [346, 347, 348, 351], "random": [346, 351], "between": [346, 347, 351], "other": [346, 646, 649], "handl": 346, "correl": [346, 351, 649], "fix": [346, 348, 351], "time": [346, 347, 423], "invari": 346, "vs": 346, "differ": [346, 347, 351], "heteroskedast": [346, 351, 645, 649], "robust": [346, 351, 645], "cluster": [346, 348, 351, 645], "entiti": [346, 347, 410], "prepar": 347, "panelol": [347, 351, 352, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "pool": [347, 351, 645], "implement": 348, "choic": 348, "r2": 348, "definit": 348, "randomeffect": [351, 471, 472, 473, 474, 475, 476, 477, 478], "betweenol": [351, 428, 429, 430, 431, 432, 433, 434, 435], "firstdifferenceol": [351, 444, 445, 446, 447, 448, 449, 450, 451], "pooledol": [351, 463, 464, 465, 466, 467, 468, 469, 470], "unadjust": 351, "driscol": 351, "kraai": 351, "r": [351, 649], "calcul": [351, 649], "betweenr": 351, "overal": [351, 649], "within": 351, "withinr": 351, "comparison": 352, "famamacbeth": [352, 436, 437, 438, 439, 440, 441, 442, 443], "accovari": [353, 354, 355, 356, 357, 358, 359, 360], "allowed_kwarg": [354, 362, 370, 378, 388, 396], "default_kernel": [355, 363, 371, 379, 389, 397], "deferred_cov": [357, 365, 373, 383, 391, 399], "ep": [358, 366, 374, 384, 392, 400], "driscollkraai": [369, 370, 371, 372, 373, 374, 375, 376], "famamacbethcovari": [377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "all_param": [380, 480], "paneldata": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "copi": [404, 808], "count": 405, "demean": 407, "entity_id": 411, "first_differ": 412, "general_demean": 413, "index": 414, "mean": 416, "nentiti": 418, "nvar": 420, "time_id": 424, "values2d": 425, "values3d": 426, "var": 427, "not_nul": [433, 441, 449, 458, 468, 476], "reformat_clust": [435, 443, 451, 461, 470, 478], "entity_effect": 453, "other_effect": 459, "time_effect": 462, "famamacbethresult": [479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "corr_squared_between": [482, 517, 571, 606], "corr_squared_overal": [483, 518, 572, 607], "corr_squared_within": [484, 519, 573, 608], "entity_info": [488, 523, 577, 612], "estimated_effect": [489, 524, 578, 613], "f_statistic_robust": [491, 527, 580, 615], "loglik": [494, 531, 583, 618], "rsquared_between": [504, 542, 563, 593, 628], "rsquared_overal": [505, 544, 564, 594, 629], "rsquared_within": [506, 545, 565, 595, 630], "time_info": [510, 549, 599, 635], "paneleffectsresult": [515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554], "f_pool": 525, "included_effect": 530, "other_info": 535, "rsquared_inclus": 543, "variance_decomposit": [552, 638], "panelmodelcomparison": [555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "panelresult": [569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "randomeffectsresult": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640], "theta": 634, "util": [641, 792, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "generate_panel_data": 641, "helper": 642, "function": 642, "plan": 643, "univari": 643, "dynam": 643, "system": [643, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791], "hac": 645, "roger": 645, "prespecifi": [645, 646], "residu": [645, 646], "diagon": 645, "cross": 645, "equat": [645, 647, 736, 771], "restrict": 645, "constraint": [645, 696, 707, 717], "multivari": 645, "common": 645, "regressor": 645, "dictionari": 646, "curli": 646, "brace": 646, "three": [647, 649], "3sl": [647, 649, 650], "direct": 647, "simultan": 647, "sure": 649, "memori": 649, "effici": 649, "homoskedast": 649, "measur": 649, "mcelroi": 649, "berndt": 649, "judg": 649, "dhryme": 649, "sigma": [654, 669, 673, 679, 682, 686, 692, 751, 785], "gmmheteroskedasticcovari": [655, 656, 657], "gmmhomoskedasticcovari": [658, 659, 660], "gmmkernelcovari": [661, 662, 663, 664, 665], "iv3sl": [694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704], "add_constraint": [695, 706, 716], "multivariate_iv": 701, "param_nam": [702, 712, 723], "reset_constraint": [704, 714, 725], "ivsystemgmm": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "multivariate_l": 722, "gmmsystemresult": [726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760], "breusch_pagan": [727, 762], "equation_label": [735, 770], "likelihood_ratio": [740, 774], "system_rsquar": [754, 788], "w": 757, "systemresult": [761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791], "contain": 792, "share": [793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "cov_clust": 793, "cov_kernel": 794, "group_debias_coeffici": 795, "hypothes": [796, 797, 798, 799, 800, 801, 802, 803, 804, 805], "invalidteststatist": [796, 797, 798, 799, 800], "critical_valu": [797, 802], "null": [798, 803], "pval": [799, 804], "stat": [800, 805], "waldteststatist": [801, 802, 803, 804, 805], "attrdict": [806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "clear": 807, "get": 809, "item": 810, "kei": 811, "pop": 812, "popitem": 813, "setdefault": 814}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 56}})